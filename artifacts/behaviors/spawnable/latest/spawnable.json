{
  "artifact": {
    "artifactSymbol": {
      "id":"5feaa35b-2a36-4e80-bbb0-42e29233f897",
      "type": "BEHAVIOR",
      "visual": "<i>sp</i>",
      "tooling": "sp",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "Spawnable",
    "aliases": [
      "Vestable"
    ],
    "artifactDefinition": {
      "businessDescription": "Spawnable, when invoked will cause the token to spawn one or more new tokens of a different type that will be 'related' to it with the current token owner being the owner of the new token. A token might need to create a new token of a different type when it is being burned or redeemed that can have new capabilities for the new owner.",
      "businessExample": "A grantable token can be granted to an account with a simple date based vest where the grant is burned when it is fully vested. Each vest will invoke the spawnable behavior to create a quantity of new tokens of a different type with the owner being the grantee. You can spawn multiple tokens in the process to model out complex token lifecycles where behaviors change depending on the transitions or lifecycle event.",
      "analogies": [
        {
          "name": "EEA Participation Grant",
          "description": "The EEA Trusted Token uses a grant to incent participation. A grant is issued with vesting rewards defined. When the grant vests it needs to create a Redeemable token to the member organization that can be used towards membership dues and also create Reputation tokens to the individual contributors from the organization using a percentage of the total award by participant. The grant defines the total award and the percentage split for contributors and invokes the spawnable behavior or kickoff the workflow to create the Redeemable and Reputation Tokens and when sucessfull will then burn the grant.",
          "artifactDefinition": null
        }
      ],
      "comments": "Spawnable is the result of decomposing Grantable, where the vesting behavior is not a changing of an internal value to transfer ownership or turning on a setting, but needing to create one or more new types of tokens from the vest event. If is most likely an implementation specific set of code that is not externally available and only invoked by another behavior, like Grantable, and the details about what, how many and to what accounts should be spawned would be provided.",
      "artifact": null
    },
    "dependencies": [],
    "incompatibleWithSymbols": [],
    "influencedBySymbols": [
      {
        "description": "Highly recommended that Role restrictions be applied to Spawnable invocations, and should probably be internal only able to be invoked by the token itself.",
        "symbol": {
          "type": "BEHAVIOR",
          "visual": "<i>r</i>",
          "tooling": "r",
          "version": ""
        }
      }
    ],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "spawnable.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "spawnable.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {}
  },
  "invocations": [
    {
      "id": "f404f43f-c922-475d-9a0c-b4a0bdca6029",
      "name": "Spawn",
      "description": "This invocation can be internal or hidden and would depend on the token itself to contain the spawn to details. A request to spawn a the creation of a certain number of tageted tokens to an account. ",
      "request": {
        "controlMessageName": "SpawnToRequest",
        "description": "The request to Attest an attestation.",
        "inputParameters": [
          {
            "name": "AccountId",
            "valueDescription": "The account to spawn to, spawning targets and amounts should be provided in the token implementation."
          }
        ]
      },
      "response": {
        "controlMessageName": "SpawnToResponse",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or denial be returned to the spawn requestor."
          }
        ],
        "description": "The response from the AttestRequest."
      }
    }
  ],
  "properties": [
    {
      "name":"SpawnLog",
      "valueDescription": "Every spawn logs its events.",
      "properties":[
        {
          "name": "AddressToSpawnTarget",
          "valueDescription": "Token address where mint requests are sent."
        },
        {
          "name":"Quantity",
          "valueDescription": "Numeric value of tokens to mint for the account address."
        },
        {
          "name": "SpawnToAddress",
          "valueDescription": "Address to mint to. Mint requests are sent to the AddressToSpawnTarget, in quantity to this account address."
        }
      ]
    }
  ]
}