{
  "artifact": {
    "artifactSymbol": {
      "id":"0fb5abae-c99e-4f34-90cf-62b6f3351b74",
      "type": "BEHAVIOR",
      "visual": "<i>p</i>",
      "tooling": "p",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "Pausable",
    "aliases": [
      "freeze",
      "halt trading"
    ],
    "artifactDefinition": {
      "businessDescription": "A token class that implements this behavior will halt trades and free all transfers, handy if there is a bug found in the token implementation.",
      "businessExample": "There may be a run or a crash in the market that may require the halting of trades for this token. This is like the big red button.",
      "analogies": [
        {
          "name": "Bug in Code",
          "description": "You may discover a bug in your token implementation that requires you to halt the trading until you can fix the code.",
          "artifactDefinition": null
        }
      ],
      "comments": "",
      "artifact": null
    },
    "dependencies": [],
    "incompatibleWithSymbols": [],
    "influencedBySymbols": [],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "pausable.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "pausable.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {
      "codeReferences": [
        {
          "mappingType": "SOURCE_CODE",
          "name": "Open Zeppelin",
          "platform": "ETHEREUM_SOLIDITY",
          "referencePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/ERC20Pausable.sol",
          "maps": null
        }
      ],
      "resources": [
        {
          "mappingType": "RESOURCE",
          "name": "Regulation Reference 1",
          "description": "",
          "resourcePath": "",
          "maps": null
        }
      ],
      "artifact": null
    }
  },
  "invocations": [
    {
      "id": "2e0fd8e5-2090-4c62-b094-232c32a78022",
      "name": "Allowance",
      "description": "A Request by a party or account to the owner of a token(s) to have the right to perform a delegated behavior on their behalf.",
      "request": {
        "controlMessageName": "AllowanceRequest",
        "description": "The request",
        "inputParameters": [
          {
            "name": "Quantity",
            "valueDescription": "Number of Tokens to be allowed."
          }
        ]
      },
      "response": {
        "controlMessageName": "AllowanceResponse",
        "description": "The response",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or denial be returned to the allowance requestor."
          }
        ]
      }
    },
    {
      "id": "6d5df99d-2f5e-4c7a-aea4-d2d54176abfd",
      "name": "Approve Allowance",
      "description": "Same control message as the AllowanceRequest.  This could allow for an AllowanceRequest to be forwarded to multiple parties needed to Approve and shield this from the requestor. When all Approvals are obtained, an AllowanceResponse could be sent.",
      "request": {
        "controlMessageName": "AllowanceRequest",
        "description": "The request",
        "inputParameters": [
          {
            "name": "Quantity",
            "valueDescription": "Number of Tokens to be allowed."
          }
        ]
      },
      "response": {
        "controlMessageName": "ApproveResponse",
        "description": "The response",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation response from the owner approving the an allowance request, indicating a allowance quantity the requestor has the option to invoke the Delegable behaviors on the token(s)."
          }
        ]
      }
    }
  ],
  "properties": []
}