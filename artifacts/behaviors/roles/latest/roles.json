{
  "artifact": {
    "artifactSymbol": {
      "id":"c32726da-9787-4dd8-8de3-d07d1733d0f6",
      "type": "BEHAVIOR",
      "visual": "<i>r</i>",
      "tooling": "r",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "Roles",
    "aliases": [
      "Groups"
    ],
    "controlUri": "../../../../../../artifacts/behaviors/roles/roles.proto",
    "artifactDefinition": {
      "businessDescription": "A token can have behaviors that the class will restrict invocations to a select set of parties or accounts that are members of a role or group.  This is a generic behavior that can apply to a token many times to represent many role definitions within the template.",
      "businessExample": "",
      "analogies": [
        {
          "name": "Analogy 1",
          "description": "roles analogy 1 description",
          "artifactDefinition": null
        }
      ],
      "comments": "Roles has a constructor control that creates roles and applies them to certain behaviors of the token at creation of the class from the template.",
      "artifact": null
    },
    "dependencies": [],
    "incompatibleWithSymbols": [],
    "influencedBySymbols": [],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "roles.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "roles.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {
      "codeReferences": [
        {
          "mappingType": "SOURCE_CODE",
          "name": "Code 1",
          "platform": "DAML",
          "referencePath": "",
          "maps": null
        }
      ],
      "implementationReferences": [
        {
          "mappingType": "IMPLEMENTATION",
          "name": "Implementation 1",
          "platform": "CHAINCODE_GO",
          "referencePath": "",
          "maps": null
        }
      ],
      "resources": [
        {
          "mappingType": "RESOURCE",
          "name": "Regulation Reference 1",
          "description": "",
          "resourcePath": "",
          "maps": null
        }
      ],
      "artifact": null
    }
  },
  "isExternal": true,
  "constructorType": "RoleName",
  "constructor": null,
  "invocations": [
    {
      "name": "RoleCheck",
      "description": "Internal invocation when the applied behavior is called to check if the requestor is a member of the role.",
      "request": {
        "controlMessageName": "IsInRole",
        "description": "The request",
        "inputParameters": [
          {
            "name": "AccountId",
            "valueDescription": "AccountId of the requestor."
          }
        ]
      },
      "response": {
        "controlMessageName": "True/False",
        "description": "The response",
        "outputParameters": [
          {
            "name": "IsInRole",
            "valueDescription": "True/False"
          }
        ]
      }
    }
  ],
  "properties": [
    {
      "name": "Role",
      "valueDescription": "A group or list an account can be a member or be in.",
      "templateValue": "",
      "propertyInvocations": [
        {
          "name": "GetRoleMembers",
          "description": "Request the the list of member accounts in the role.",
          "request": {
            "controlMessageName": "GetRoleMembersRequest",
            "inputParameters": [],
            "description": "The request"
          },
          "response": {
            "controlMessageName": "GetRoleMembersResponse",
            "outputParameters": [
              {
                "name": "Members",
                "valueDescription": "Returning the list of accounts in the role."
              }
            ],
            "description": "The response"
          }
        },
        {
          "name": "AddRoleMember",
          "description": "Add a member to the group or role property.",
          "request": {
            "controlMessageName": "AddRoleMemberRequest",
            "inputParameters": [
              {
                "name": "RoleName",
                "valueDescription": "Name of the role you are adding a member to. Optional parameter if there is only one role."
              },
              {
                "name": "AccountAddress",
                "valueDescription": "Address, name or identifier of the account to be added to the role."
              }
            ],
            "description": "The request"
          },
          "response": {
            "controlMessageName": "AddRoleMemberResponse",
            "outputParameters": [
              {
                "name": "Added",
                "valueDescription": "True or False."
              }
            ],
            "description": "The response"
          }
        },
        {
          "name": "RemoveRoleMember",
          "description": "Remove a member to the group or role property.",
          "request": {
            "controlMessageName": "RemoveRoleMemberRequest",
            "inputParameters": [
              {
                "name": "RoleName",
                "valueDescription": "Name of the role you are adding a member to. Optional parameter if there is only one role."
              },
              {
                "name": "AccountAddress",
                "valueDescription": "Address, name or identifier of the account to be removed from the role."
              }
            ],
            "description": "The request"
          },
          "response": {
            "controlMessageName": "RemoveRoleMemberResponse",
            "outputParameters": [
              {
                "name": "Added",
                "valueDescription": "True or False."
              }
            ],
            "description": "The response"
          }
        },
        {
          "name": "IsInRole",
          "description": "Check to see if an account is in the role.",
          "request": {
            "controlMessageName": "IsInRoleRequest",
            "inputParameters": [
              {
                "name": "RoleName",
                "valueDescription": "Name of the role you are checking membership of. Optional parameter if there is only one role."
              },
              {
                "name": "AccountAddress",
                "valueDescription": "Address, name or identifier of the account to be checked."
              }
            ],
            "description": "The request may be internal only and not exposed externally."
          },
          "response": {
            "controlMessageName": "IsInRoleRequestResponse",
            "outputParameters": [
              {
                "name": "InRole",
                "valueDescription": "True or False."
              }
            ],
            "description": "The response"
          }
        }
      ]
    }
  ]
}