{
  "artifact": {
    "type": "BEHAVIOR",
    "name": "Encumberable",
    "aliases": [
      "Locked",
      "Frozen"
    ],
    "artifactSymbol": {
      "visualSymbol": "e",
      "toolingSymbol": "e"
    },
    "controlUri": "../../../../../../artifacts/behaviors/encumberable/encumberable.proto",
    "artifactDefinition": {
      "businessDescription": "A token class that implements this behavior will have restrictions preventing certain behaviors like transferable, burnable, etc. from working while it is encumbered. The encumbering party should make a request to encumber, the owner should be notified about the request, and accept the request, which will finalize the encumbrance and send the EncumberResponse message to the requestor.",
      "businessExample": "For example, a property title's owner may have obtained a loan from a bank to purchase the property. The loan represents a contract between the owner of the property and the bank, this loan encumbers the property title preventing the owner from being able to sell the property, transferable, to another party until the loan is paid off. Paying off the loan will remove the encumber, which will allow transferable to be invoked.",
      "analogies": [
        {
          "name": "Loan",
          "description": "encumberable analogy 1 description",
          "artifactDefinition": null
        }
      ],
      "comments": "The token definition should have a Encumbered property or structure that may allow only one encumber or allow multiple.",
      "artifact": null
    },
    "incompatibleWithSymbols": [
      {
        "visualSymbol": "",
        "toolingSymbol": ""
      }
    ],
    "influencedBySymbols": [
      {
        "description": "",
        "symbol": {
          "visualSymbol": "",
          "toolingSymbol": ""
        }
      }
    ],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "encumberable.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "encumberable.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {
      "codeReferences": [
        {
          "mappingType": "SOURCE_CODE",
          "name": "Code 1",
          "platform": "DAML",
          "referencePath": "",
          "maps": null
        }
      ],
      "implementationReferences": [
        {
          "mappingType": "IMPLEMENTATION",
          "name": "Implementation 1",
          "platform": "CHAINCODE_GO",
          "referencePath": "",
          "maps": null
        }
      ],
      "resources": [
        {
          "mappingType": "RESOURCE",
          "name": "Regulation Reference 1",
          "description": "",
          "resourcePath": "",
          "maps": null
        }
      ],
      "artifact": null
    }
  },
  "external": false,
  "behaviorConstructor": null,
  "behaviorInvocations": [
    {
      "name": "EncumberRequest",
      "description": "A Request by a party or account, perhaps a contract or another token, to encumber the token.",
      "request": {
        "controlMessageName": "EncumberRequest",
        "inputParameters": [
          {
            "name": "Name of Encumber",
            "valueDescription": "Name of the institution requesting the encumber."
          },
          {
            "name": "Identifier",
            "valueDescription": "A public key or address for the requestor."
          },
          {
            "name": "Signature",
            "valueDescription": "A digital signature or attestation, optional."
          }
        ],
        "description": "The request"
      },
      "response": {
        "controlMessageName": "EncumberResponse",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation response from the token for the encumber request."
          }
        ],
        "description": "The response"
      }
    },
    {
      "name": "AcceptEncumberRequest",
      "description": "A Request by a party or account, perhaps a contract or another token, to encumber the token.",
      "request": {
        "controlMessageName": "AcceptEncumberRequest",
        "inputParameters": [],
        "description": "The request"
      },
      "response": {
        "controlMessageName": "AcceptEncumberResponse",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation response returned to the owner of their acceptance."
          }
        ],
        "description": "The response"
      }
    },
    {
      "name": "RemoveEncumberRequest",
      "description": "A Request by encumbrancer, perhaps a contract or another token, to remove their encumber or lien from the token.  Which should remove any restrictions from behaviors if there are no more encumbers.  Only the owner of the encumber can remove their encumber.",
      "request": {
        "controlMessageName": "RemoveEncumberRequest",
        "inputParameters": [],
        "description": "The request"
      },
      "response": {
        "controlMessageName": "RemoveEncumberResponse",
        "outputParameters": [
          {
            "name": "Confirmation",
            "valueDescription": "A confirmation receipt or denial be returned to the RemoveEncumber requestor."
          }
        ],
        "description": "The response"
      }
    }
  ],
  "behavioralProperties": [
    {
      "name": "Encumbered",
      "valueDescription": "True or False",
      "propertyInvocations": [
        {
          "name": "GetEncumberedRequest",
          "description": "The property value.",
          "request": {
            "controlMessageName": "GetEncumberedRequest",
            "inputParameters": [],
            "description": ""
          },
          "response": {
            "controlMessageName": "GetEncumberedResponse",
            "outputParameters": [
              {
                "name": "Encumbered",
                "valueDescription": "True or False"
              }
            ],
            "description": "Return value"
          }
        }
      ]
    }
  ]
}