{
  "artifact": {
    "artifactSymbol": {
      "id": "a96403a4-a8b8-42b7-bda5-0ee1e2693b56",
      "type": "TEMPLATE_DEFINITION",
      "visual": "&tau;<sub>N</sub>{<i>~t,~d,b,s,r,l</i>}",
      "tooling": "tN{~t,~d,b,s,r,l}",
      "version": "1.0",
      "templateValidated": false
    },
    "name": "Log",
    "aliases": [
      "Log",
      "Logging",
      "Event Recorder",
      "Audit"
    ],
    "artifactDefinition": {
      "businessDescription": "Log, is a non-fungible token that serves as a trusted log that is used to record event data for some shared process, application or other type of context specific log data that is of interest to multiple parties. This token is owned by some shared source and viewable by parties that are members of a LogViewer role.",
      "businessExample": "This token is useful when the owner of the token must record periodic data that multiple parties may want to monitor or audit.",
      "analogies": [
        {
          "name": "Analogy 1",
          "description": "Singleton analogy 1 description",
          "artifactDefinition": null
        }
      ],
      "comments": "",
      "artifact": null
    },
    "dependencies": [
      {
        "description": "Non-Fungible",
        "symbol": {
          "id": "8314a797-df3c-409b-835c-0e80af92714f",
          "type": "BASE",
          "visual": "&tau<sub>N</sub>",
          "tooling": "tN",
          "version": "1.0",
          "templateValidated": true
        }
      }
    ],
    "incompatibleWithSymbols": [
      {
        "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
        "type": "BEHAVIOR",
        "visual": "<i>d</i>",
        "tooling": "d",
        "version": "1.0",
        "templateValidated": false
      },
      {
        "id": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
        "type": "BEHAVIOR",
        "visual": "<i>m</i>",
        "tooling": "m",
        "version": "1.0",
        "templateValidated": false
      },
      {
        "id": "af119e58-6d84-4ca6-9656-75e8d312f038",
        "type": "BEHAVIOR",
        "visual": "<i>t</i>",
        "tooling": "t",
        "version": "1.0",
        "templateValidated": false
      }
    ],
    "influencedBySymbols": [],
    "controlUri": "",
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "tN{~t,~d,b,s,r,l}.proto",
        "fileData": "",
        "artifact": null
      },
      {
        "content": "UML",
        "fileName": "tN{~t,~d,b,s,r,l}.md",
        "fileData": "",
        "artifact": null
      }
    ],
    "maps": {
      "codeReferences": [],
      "implementationReferences": [],
      "resources": [],
      "artifact": null
    }
  },
  "formulaReference": {
    "id": "d4bdee60-55ae-4f00-9e06-2bc9e79ecf9e",
    "type": "TEMPLATE_FORMULA",
    "referenceNotes": "",
    "values": null
  },
  "tokenBase": {
    "reference": {
      "id": "8314a797-df3c-409b-835c-0e80af92714f",
      "type": "BASE",
      "referenceNotes": "",
      "values": {
        "controlUri": "",
        "artifactFiles": [],
        "maps": {
          "codeReferences": [
            {
              "mappingType": "SOURCE_CODE",
              "name": "Code 1",
              "platform": "DAML",
              "referencePath": "",
              "maps": null
            }
          ],
          "implementationReferences": [
            {
              "mappingType": "IMPLEMENTATION",
              "name": "Implementation 1",
              "platform": "CHAINCODE_GO",
              "referencePath": "",
              "maps": null
            }
          ],
          "resources": [
            {
              "mappingType": "RESOURCE",
              "name": "Regulation Reference 1",
              "description": "",
              "resourcePath": "",
              "maps": null
            }
          ],
          "artifact": null
        }
      }
    },
    "name": "",
    "symbol": "",
    "owner": "",
    "quantity": "",
    "decimals": 0,
    "tokenProperties": {},
    "constructorName": "Constructor",
    "constructor": null
  },
  "behaviors": [
    {
      "reference": {
        "id": "c1189d7a-e142-4504-bf26-44c35b76c9d6",
        "type": "BEHAVIOR",
        "referenceNotes": "",
        "values": null
      },
      "bindsToInfluenced": [],
      "influenceBindings": [],
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "invocations": [],
      "properties": []
    },
    {
      "reference": {
        "id": "d5807a8e-879b-4885-95fa-f09ba2a22172",
        "type": "BEHAVIOR",
        "referenceNotes": "",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {}
        }
      },
      "bindsToInfluenced": [],
      "influenceBindings": [],
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "invocations": [],
      "properties": [
        {
          "name": "Decimals",
          "valueDescription": "Set to Zero, not allowing any subdivision",
          "templateValue": "0",
          "propertyInvocations": [
            {
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest",
                "description": "",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "reference": {
        "id": "a4fa4ca8-6afd-452b-91f5-7103b6fee5e5",
        "type": "BEHAVIOR",
        "referenceNotes": "",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {}
        }
      },
      "bindsToInfluenced": [],
      "influenceBindings": [],
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "invocations": [],
      "properties": []
    },
    {
      "reference": {
        "id": "803297a1-c0f9-4898-9d44-29c9d41cca97",
        "type": "BEHAVIOR",
        "referenceNotes": "",
        "values":  null
      },
      "bindsToInfluenced": [],
      "influenceBindings": [],
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "invocations": [
        {
          "name": "Burn",
          "description": "A request to burn a token instance(s) in the class by the owner of the token instance(s).  Optional Quantity field in the request.",
          "request": {
            "controlMessageName": "BurnRequest",
            "description": "The request to Burn or Retire tokens.",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "The number of tokens to burn, might not apply to the implementation."
              }
            ]
          },
          "response": {
            "controlMessageName": "BurnResponse",
            "description": "The response from the request to burn.",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the burn request"
              }
            ]
          }
        },
        {
          "name": "BurnFrom",
          "description": "Requires Delegable. A request to burn token instance(s) in the class by a party or account that has allowance to do so.  Requires a From and Quantity fields in the request.",
          "request": {
            "controlMessageName": "BurnRequest",
            "description": "The request to Burn or Retire tokens.",
            "inputParameters": [
              {
                "name": "Quantity",
                "valueDescription": "The number of tokens to burn, might not apply to the implementation."
              }
            ]
          },
          "response": {
            "controlMessageName": "BurnResponse",
            "description": "The response from the request to burn.",
            "outputParameters": [
              {
                "name": "Confirmation",
                "valueDescription": "A confirmation receipt or error may be returned to the invoker based on the outcome of the burn request"
              }
            ]
          }
        }
      ],
      "properties": []
    },
    {
      "reference": {
        "id": "c32726da-9787-4dd8-8de3-d07d1733d0f6",
        "type": "BEHAVIOR",
        "referenceNotes": "",
        "values": null
      },
      "bindsToInfluenced": [],
      "influenceBindings": [],
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "invocations": [
        {
          "name": "RoleCheck",
          "description": "Internal invocation when the applied behavior is called to check if the requestor is a member of the role.",
          "request": {
            "controlMessageName": "IsInRole",
            "description": "The request",
            "inputParameters": [
              {
                "name": "AccountId",
                "valueDescription": "AccountId of the requestor."
              }
            ]
          },
          "response": {
            "controlMessageName": "True/False",
            "description": "The response",
            "outputParameters": [
              {
                "name": "IsInRole",
                "valueDescription": "True/False"
              }
            ]
          }
        }
      ],
      "properties": [
        {
          "name": "Role",
          "valueDescription": "A group or list an account can be a member or be in.",
          "templateValue": "LogViewer",
          "propertyInvocations": [
            {
              "name": "GetRoleMembers",
              "description": "Request the the list of member accounts in the role.",
              "appliesToTemplateBehaviors": [],
              "appliesToTemplatePropertySets": [],
              "request": {
                "controlMessageName": "GetRoleMembersRequest",
                "description": "The request",
                "inputParameters": []
              },
              "response": {
                "controlMessageName": "GetRoleMembersResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Members",
                    "valueDescription": "Returning the list of accounts in the role."
                  }
                ]
              }
            },
            {
              "name": "AddRoleMember",
              "description": "Add a member to the group or role property.",
              "appliesToTemplateBehaviors": [],
              "appliesToTemplatePropertySets": [],
              "request": {
                "controlMessageName": "AddRoleMemberRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "RoleName",
                    "valueDescription": "Name of the role you are adding a member to. Optional parameter if there is only one role."
                  },
                  {
                    "name": "AccountAddress",
                    "valueDescription": "Address, name or identifier of the account to be added to the role."
                  }
                ]
              },
              "response": {
                "controlMessageName": "AddRoleMemberResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Added",
                    "valueDescription": "True or False."
                  }
                ]
              }
            },
            {
              "name": "RemoveRoleMember",
              "description": "Remove a member to the group or role property.",
              "appliesToTemplateBehaviors": [],
              "appliesToTemplatePropertySets": [],
              "request": {
                "controlMessageName": "RemoveRoleMemberRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "RoleName",
                    "valueDescription": "Name of the role you are adding a member to. Optional parameter if there is only one role."
                  },
                  {
                    "name": "AccountAddress",
                    "valueDescription": "Address, name or identifier of the account to be removed from the role."
                  }
                ]
              },
              "response": {
                "controlMessageName": "RemoveRoleMemberResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Added",
                    "valueDescription": "True or False."
                  }
                ]
              }
            },
            {
              "name": "IsInRole",
              "description": "Check to see if an account is in the role.",
              "appliesToTemplateBehaviors": [],
              "appliesToTemplatePropertySets": [],
              "request": {
                "controlMessageName": "IsInRoleRequest",
                "description": "The request may be internal only and not exposed externally.",
                "inputParameters": [
                  {
                    "name": "RoleName",
                    "valueDescription": "Name of the role you are checking membership of. Optional parameter if there is only one role."
                  },
                  {
                    "name": "AccountAddress",
                    "valueDescription": "Address, name or identifier of the account to be checked."
                  }
                ]
              },
              "response": {
                "controlMessageName": "IsInRoleRequestResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "InRole",
                    "valueDescription": "True or False."
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "reference": {
        "id": "9c8c2373-cf3c-4743-932a-03fee6a192fe",
        "type": "BEHAVIOR",
        "referenceNotes": "",
        "values": {
          "controlUri": "",
          "artifactFiles": [],
          "maps": {
            "codeReferences": [
              {
                "mappingType": "SOURCE_CODE",
                "name": "Code 1",
                "platform": "DAML",
                "referencePath": "",
                "maps": null
              }
            ],
            "implementationReferences": [
              {
                "mappingType": "IMPLEMENTATION",
                "name": "Implementation 1",
                "platform": "CHAINCODE_GO",
                "referencePath": "",
                "maps": null
              }
            ],
            "resources": [
              {
                "mappingType": "RESOURCE",
                "name": "Regulation Reference 1",
                "description": "",
                "resourcePath": "",
                "maps": null
              }
            ],
            "artifact": null
          }
        }
      },
      "isExternal": true,
      "constructorType": "",
      "constructor": null,
      "invocations": [
        {
          "name": "CreateEntrySeries",
          "description": "A request create a series of log entries.",
          "request": {
            "controlMessageName": "CreateEntrySeriesRequest",
            "description": "The request",
            "inputParameters": []
          },
          "response": {
            "controlMessageName": "CreateEntrySeriesResponse",
            "description": "The response",
            "outputParameters": [
              {
                "name": "SeriesId",
                "valueDescription": "A response containing a unique SeriesId that should be set for each entry's RecordEntryRequest message in the series."
              }
            ]
          }
        }
      ],
      "properties": []
    }
  ],
  "behaviorGroups": [],
  "propertySets": [],
  "childTokens": []
}