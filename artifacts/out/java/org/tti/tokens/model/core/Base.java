// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core.proto

package org.tti.tokens.model.core;

/**
 * <pre>
 *all tokens inherit from the base and implicitly support construction.  The properties represent non-behavioral properties, with the exception of Decimals which is used by the Subdividable or Non-Subdividable behavior where any value greater than 0 makes the token subdividable.
 * </pre>
 *
 * Protobuf type {@code taxonomy.model.core.Base}
 */
public  final class Base extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:taxonomy.model.core.Base)
    BaseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Base.newBuilder() to construct.
  private Base(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Base() {
    tokenType_ = 0;
    name_ = "";
    symbol_ = "";
    owner_ = "";
    quantity_ = com.google.protobuf.ByteString.EMPTY;
    constructorName_ = "";
    childTokens_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Base(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            org.tti.tokens.model.artifact.Artifact.Builder subBuilder = null;
            if (artifact_ != null) {
              subBuilder = artifact_.toBuilder();
            }
            artifact_ = input.readMessage(org.tti.tokens.model.artifact.Artifact.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(artifact_);
              artifact_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            tokenType_ = rawValue;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            symbol_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            owner_ = s;
            break;
          }
          case 50: {

            quantity_ = input.readBytes();
            break;
          }
          case 56: {

            decimals_ = input.readInt32();
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
              tokenProperties_ = com.google.protobuf.MapField.newMapField(
                  TokenPropertiesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000080;
            }
            com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
            tokenProperties__ = input.readMessage(
                TokenPropertiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            tokenProperties_.getMutableMap().put(
                tokenProperties__.getKey(), tokenProperties__.getValue());
            break;
          }
          case 74: {
            java.lang.String s = input.readStringRequireUtf8();

            constructorName_ = s;
            break;
          }
          case 82: {
            com.google.protobuf.Any.Builder subBuilder = null;
            if (constructor_ != null) {
              subBuilder = constructor_.toBuilder();
            }
            constructor_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(constructor_);
              constructor_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000400) != 0)) {
              childTokens_ = new java.util.ArrayList<org.tti.tokens.model.core.Base>();
              mutable_bitField0_ |= 0x00000400;
            }
            childTokens_.add(
                input.readMessage(org.tti.tokens.model.core.Base.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000400) != 0)) {
        childTokens_ = java.util.Collections.unmodifiableList(childTokens_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tti.tokens.model.core.Core.internal_static_taxonomy_model_core_Base_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 8:
        return internalGetTokenProperties();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tti.tokens.model.core.Core.internal_static_taxonomy_model_core_Base_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tti.tokens.model.core.Base.class, org.tti.tokens.model.core.Base.Builder.class);
  }

  private int bitField0_;
  public static final int ARTIFACT_FIELD_NUMBER = 1;
  private org.tti.tokens.model.artifact.Artifact artifact_;
  /**
   * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
   */
  public boolean hasArtifact() {
    return artifact_ != null;
  }
  /**
   * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
   */
  public org.tti.tokens.model.artifact.Artifact getArtifact() {
    return artifact_ == null ? org.tti.tokens.model.artifact.Artifact.getDefaultInstance() : artifact_;
  }
  /**
   * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
   */
  public org.tti.tokens.model.artifact.ArtifactOrBuilder getArtifactOrBuilder() {
    return getArtifact();
  }

  public static final int TOKEN_TYPE_FIELD_NUMBER = 2;
  private int tokenType_;
  /**
   * <code>.taxonomy.model.artifact.TokenType token_type = 2;</code>
   */
  public int getTokenTypeValue() {
    return tokenType_;
  }
  /**
   * <code>.taxonomy.model.artifact.TokenType token_type = 2;</code>
   */
  public org.tti.tokens.model.artifact.TokenType getTokenType() {
    @SuppressWarnings("deprecation")
    org.tti.tokens.model.artifact.TokenType result = org.tti.tokens.model.artifact.TokenType.valueOf(tokenType_);
    return result == null ? org.tti.tokens.model.artifact.TokenType.UNRECOGNIZED : result;
  }

  public static final int NAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   *A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
   * </pre>
   *
   * <code>string name = 3;</code>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
   * </pre>
   *
   * <code>string name = 3;</code>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SYMBOL_FIELD_NUMBER = 4;
  private volatile java.lang.Object symbol_;
  /**
   * <pre>
   *an optionally unique symbol or identifier
   * </pre>
   *
   * <code>string symbol = 4;</code>
   */
  public java.lang.String getSymbol() {
    java.lang.Object ref = symbol_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      symbol_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *an optionally unique symbol or identifier
   * </pre>
   *
   * <code>string symbol = 4;</code>
   */
  public com.google.protobuf.ByteString
      getSymbolBytes() {
    java.lang.Object ref = symbol_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      symbol_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OWNER_FIELD_NUMBER = 5;
  private volatile java.lang.Object owner_;
  /**
   * <pre>
   *A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
   * </pre>
   *
   * <code>string owner = 5;</code>
   */
  public java.lang.String getOwner() {
    java.lang.Object ref = owner_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      owner_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
   * </pre>
   *
   * <code>string owner = 5;</code>
   */
  public com.google.protobuf.ByteString
      getOwnerBytes() {
    java.lang.Object ref = owner_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      owner_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUANTITY_FIELD_NUMBER = 6;
  private com.google.protobuf.ByteString quantity_;
  /**
   * <pre>
   *Can represent the initial quantity created or the total minted or issued for the class.
   * </pre>
   *
   * <code>bytes quantity = 6;</code>
   */
  public com.google.protobuf.ByteString getQuantity() {
    return quantity_;
  }

  public static final int DECIMALS_FIELD_NUMBER = 7;
  private int decimals_;
  /**
   * <pre>
   *A number of decimal places a single token can be subdivided into.  A typical fiat currency has a value of 2, i.e. $100.53. A value of 0 means that subdivision is not supported and a whole token is the smallest unit of the token that can be owned.
   * </pre>
   *
   * <code>int32 decimals = 7;</code>
   */
  public int getDecimals() {
    return decimals_;
  }

  public static final int TOKEN_PROPERTIES_FIELD_NUMBER = 8;
  private static final class TokenPropertiesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, java.lang.String>newDefaultInstance(
                org.tti.tokens.model.core.Core.internal_static_taxonomy_model_core_Base_TokenPropertiesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      java.lang.String, java.lang.String> tokenProperties_;
  private com.google.protobuf.MapField<java.lang.String, java.lang.String>
  internalGetTokenProperties() {
    if (tokenProperties_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TokenPropertiesDefaultEntryHolder.defaultEntry);
    }
    return tokenProperties_;
  }

  public int getTokenPropertiesCount() {
    return internalGetTokenProperties().getMap().size();
  }
  /**
   * <pre>
   *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
   * </pre>
   *
   * <code>map&lt;string, string&gt; token_properties = 8;</code>
   */

  public boolean containsTokenProperties(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetTokenProperties().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTokenPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getTokenProperties() {
    return getTokenPropertiesMap();
  }
  /**
   * <pre>
   *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
   * </pre>
   *
   * <code>map&lt;string, string&gt; token_properties = 8;</code>
   */

  public java.util.Map<java.lang.String, java.lang.String> getTokenPropertiesMap() {
    return internalGetTokenProperties().getMap();
  }
  /**
   * <pre>
   *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
   * </pre>
   *
   * <code>map&lt;string, string&gt; token_properties = 8;</code>
   */

  public java.lang.String getTokenPropertiesOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTokenProperties().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
   * </pre>
   *
   * <code>map&lt;string, string&gt; token_properties = 8;</code>
   */

  public java.lang.String getTokenPropertiesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetTokenProperties().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int CONSTRUCTOR_NAME_FIELD_NUMBER = 9;
  private volatile java.lang.Object constructorName_;
  /**
   * <pre>
   *a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
   * </pre>
   *
   * <code>string constructor_name = 9;</code>
   */
  public java.lang.String getConstructorName() {
    java.lang.Object ref = constructorName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      constructorName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
   * </pre>
   *
   * <code>string constructor_name = 9;</code>
   */
  public com.google.protobuf.ByteString
      getConstructorNameBytes() {
    java.lang.Object ref = constructorName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      constructorName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONSTRUCTOR_FIELD_NUMBER = 10;
  private com.google.protobuf.Any constructor_;
  /**
   * <pre>
   *the constructor type defined in the token template artifact.
   * </pre>
   *
   * <code>.google.protobuf.Any constructor = 10;</code>
   */
  public boolean hasConstructor() {
    return constructor_ != null;
  }
  /**
   * <pre>
   *the constructor type defined in the token template artifact.
   * </pre>
   *
   * <code>.google.protobuf.Any constructor = 10;</code>
   */
  public com.google.protobuf.Any getConstructor() {
    return constructor_ == null ? com.google.protobuf.Any.getDefaultInstance() : constructor_;
  }
  /**
   * <pre>
   *the constructor type defined in the token template artifact.
   * </pre>
   *
   * <code>.google.protobuf.Any constructor = 10;</code>
   */
  public com.google.protobuf.AnyOrBuilder getConstructorOrBuilder() {
    return getConstructor();
  }

  public static final int CHILD_TOKENS_FIELD_NUMBER = 11;
  private java.util.List<org.tti.tokens.model.core.Base> childTokens_;
  /**
   * <pre>
   *if hybrid, this can contain the list of child token classes.
   * </pre>
   *
   * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
   */
  public java.util.List<org.tti.tokens.model.core.Base> getChildTokensList() {
    return childTokens_;
  }
  /**
   * <pre>
   *if hybrid, this can contain the list of child token classes.
   * </pre>
   *
   * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
   */
  public java.util.List<? extends org.tti.tokens.model.core.BaseOrBuilder> 
      getChildTokensOrBuilderList() {
    return childTokens_;
  }
  /**
   * <pre>
   *if hybrid, this can contain the list of child token classes.
   * </pre>
   *
   * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
   */
  public int getChildTokensCount() {
    return childTokens_.size();
  }
  /**
   * <pre>
   *if hybrid, this can contain the list of child token classes.
   * </pre>
   *
   * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
   */
  public org.tti.tokens.model.core.Base getChildTokens(int index) {
    return childTokens_.get(index);
  }
  /**
   * <pre>
   *if hybrid, this can contain the list of child token classes.
   * </pre>
   *
   * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
   */
  public org.tti.tokens.model.core.BaseOrBuilder getChildTokensOrBuilder(
      int index) {
    return childTokens_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (artifact_ != null) {
      output.writeMessage(1, getArtifact());
    }
    if (tokenType_ != org.tti.tokens.model.artifact.TokenType.FUNGIBLE.getNumber()) {
      output.writeEnum(2, tokenType_);
    }
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, name_);
    }
    if (!getSymbolBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, symbol_);
    }
    if (!getOwnerBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, owner_);
    }
    if (!quantity_.isEmpty()) {
      output.writeBytes(6, quantity_);
    }
    if (decimals_ != 0) {
      output.writeInt32(7, decimals_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetTokenProperties(),
        TokenPropertiesDefaultEntryHolder.defaultEntry,
        8);
    if (!getConstructorNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, constructorName_);
    }
    if (constructor_ != null) {
      output.writeMessage(10, getConstructor());
    }
    for (int i = 0; i < childTokens_.size(); i++) {
      output.writeMessage(11, childTokens_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (artifact_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getArtifact());
    }
    if (tokenType_ != org.tti.tokens.model.artifact.TokenType.FUNGIBLE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, tokenType_);
    }
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, name_);
    }
    if (!getSymbolBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, symbol_);
    }
    if (!getOwnerBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, owner_);
    }
    if (!quantity_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(6, quantity_);
    }
    if (decimals_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, decimals_);
    }
    for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
         : internalGetTokenProperties().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
      tokenProperties__ = TokenPropertiesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, tokenProperties__);
    }
    if (!getConstructorNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, constructorName_);
    }
    if (constructor_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getConstructor());
    }
    for (int i = 0; i < childTokens_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, childTokens_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tti.tokens.model.core.Base)) {
      return super.equals(obj);
    }
    org.tti.tokens.model.core.Base other = (org.tti.tokens.model.core.Base) obj;

    if (hasArtifact() != other.hasArtifact()) return false;
    if (hasArtifact()) {
      if (!getArtifact()
          .equals(other.getArtifact())) return false;
    }
    if (tokenType_ != other.tokenType_) return false;
    if (!getName()
        .equals(other.getName())) return false;
    if (!getSymbol()
        .equals(other.getSymbol())) return false;
    if (!getOwner()
        .equals(other.getOwner())) return false;
    if (!getQuantity()
        .equals(other.getQuantity())) return false;
    if (getDecimals()
        != other.getDecimals()) return false;
    if (!internalGetTokenProperties().equals(
        other.internalGetTokenProperties())) return false;
    if (!getConstructorName()
        .equals(other.getConstructorName())) return false;
    if (hasConstructor() != other.hasConstructor()) return false;
    if (hasConstructor()) {
      if (!getConstructor()
          .equals(other.getConstructor())) return false;
    }
    if (!getChildTokensList()
        .equals(other.getChildTokensList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasArtifact()) {
      hash = (37 * hash) + ARTIFACT_FIELD_NUMBER;
      hash = (53 * hash) + getArtifact().hashCode();
    }
    hash = (37 * hash) + TOKEN_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + tokenType_;
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
    hash = (53 * hash) + getSymbol().hashCode();
    hash = (37 * hash) + OWNER_FIELD_NUMBER;
    hash = (53 * hash) + getOwner().hashCode();
    hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
    hash = (53 * hash) + getQuantity().hashCode();
    hash = (37 * hash) + DECIMALS_FIELD_NUMBER;
    hash = (53 * hash) + getDecimals();
    if (!internalGetTokenProperties().getMap().isEmpty()) {
      hash = (37 * hash) + TOKEN_PROPERTIES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTokenProperties().hashCode();
    }
    hash = (37 * hash) + CONSTRUCTOR_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getConstructorName().hashCode();
    if (hasConstructor()) {
      hash = (37 * hash) + CONSTRUCTOR_FIELD_NUMBER;
      hash = (53 * hash) + getConstructor().hashCode();
    }
    if (getChildTokensCount() > 0) {
      hash = (37 * hash) + CHILD_TOKENS_FIELD_NUMBER;
      hash = (53 * hash) + getChildTokensList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tti.tokens.model.core.Base parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tti.tokens.model.core.Base parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tti.tokens.model.core.Base parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tti.tokens.model.core.Base parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tti.tokens.model.core.Base parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tti.tokens.model.core.Base parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tti.tokens.model.core.Base parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tti.tokens.model.core.Base parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tti.tokens.model.core.Base parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tti.tokens.model.core.Base parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tti.tokens.model.core.Base parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tti.tokens.model.core.Base parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tti.tokens.model.core.Base prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *all tokens inherit from the base and implicitly support construction.  The properties represent non-behavioral properties, with the exception of Decimals which is used by the Subdividable or Non-Subdividable behavior where any value greater than 0 makes the token subdividable.
   * </pre>
   *
   * Protobuf type {@code taxonomy.model.core.Base}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:taxonomy.model.core.Base)
      org.tti.tokens.model.core.BaseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tti.tokens.model.core.Core.internal_static_taxonomy_model_core_Base_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 8:
          return internalGetTokenProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 8:
          return internalGetMutableTokenProperties();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tti.tokens.model.core.Core.internal_static_taxonomy_model_core_Base_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tti.tokens.model.core.Base.class, org.tti.tokens.model.core.Base.Builder.class);
    }

    // Construct using org.tti.tokens.model.core.Base.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getChildTokensFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (artifactBuilder_ == null) {
        artifact_ = null;
      } else {
        artifact_ = null;
        artifactBuilder_ = null;
      }
      tokenType_ = 0;

      name_ = "";

      symbol_ = "";

      owner_ = "";

      quantity_ = com.google.protobuf.ByteString.EMPTY;

      decimals_ = 0;

      internalGetMutableTokenProperties().clear();
      constructorName_ = "";

      if (constructorBuilder_ == null) {
        constructor_ = null;
      } else {
        constructor_ = null;
        constructorBuilder_ = null;
      }
      if (childTokensBuilder_ == null) {
        childTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
      } else {
        childTokensBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tti.tokens.model.core.Core.internal_static_taxonomy_model_core_Base_descriptor;
    }

    @java.lang.Override
    public org.tti.tokens.model.core.Base getDefaultInstanceForType() {
      return org.tti.tokens.model.core.Base.getDefaultInstance();
    }

    @java.lang.Override
    public org.tti.tokens.model.core.Base build() {
      org.tti.tokens.model.core.Base result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.tti.tokens.model.core.Base buildPartial() {
      org.tti.tokens.model.core.Base result = new org.tti.tokens.model.core.Base(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (artifactBuilder_ == null) {
        result.artifact_ = artifact_;
      } else {
        result.artifact_ = artifactBuilder_.build();
      }
      result.tokenType_ = tokenType_;
      result.name_ = name_;
      result.symbol_ = symbol_;
      result.owner_ = owner_;
      result.quantity_ = quantity_;
      result.decimals_ = decimals_;
      result.tokenProperties_ = internalGetTokenProperties();
      result.tokenProperties_.makeImmutable();
      result.constructorName_ = constructorName_;
      if (constructorBuilder_ == null) {
        result.constructor_ = constructor_;
      } else {
        result.constructor_ = constructorBuilder_.build();
      }
      if (childTokensBuilder_ == null) {
        if (((bitField0_ & 0x00000400) != 0)) {
          childTokens_ = java.util.Collections.unmodifiableList(childTokens_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.childTokens_ = childTokens_;
      } else {
        result.childTokens_ = childTokensBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tti.tokens.model.core.Base) {
        return mergeFrom((org.tti.tokens.model.core.Base)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tti.tokens.model.core.Base other) {
      if (other == org.tti.tokens.model.core.Base.getDefaultInstance()) return this;
      if (other.hasArtifact()) {
        mergeArtifact(other.getArtifact());
      }
      if (other.tokenType_ != 0) {
        setTokenTypeValue(other.getTokenTypeValue());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getSymbol().isEmpty()) {
        symbol_ = other.symbol_;
        onChanged();
      }
      if (!other.getOwner().isEmpty()) {
        owner_ = other.owner_;
        onChanged();
      }
      if (other.getQuantity() != com.google.protobuf.ByteString.EMPTY) {
        setQuantity(other.getQuantity());
      }
      if (other.getDecimals() != 0) {
        setDecimals(other.getDecimals());
      }
      internalGetMutableTokenProperties().mergeFrom(
          other.internalGetTokenProperties());
      if (!other.getConstructorName().isEmpty()) {
        constructorName_ = other.constructorName_;
        onChanged();
      }
      if (other.hasConstructor()) {
        mergeConstructor(other.getConstructor());
      }
      if (childTokensBuilder_ == null) {
        if (!other.childTokens_.isEmpty()) {
          if (childTokens_.isEmpty()) {
            childTokens_ = other.childTokens_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureChildTokensIsMutable();
            childTokens_.addAll(other.childTokens_);
          }
          onChanged();
        }
      } else {
        if (!other.childTokens_.isEmpty()) {
          if (childTokensBuilder_.isEmpty()) {
            childTokensBuilder_.dispose();
            childTokensBuilder_ = null;
            childTokens_ = other.childTokens_;
            bitField0_ = (bitField0_ & ~0x00000400);
            childTokensBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getChildTokensFieldBuilder() : null;
          } else {
            childTokensBuilder_.addAllMessages(other.childTokens_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tti.tokens.model.core.Base parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tti.tokens.model.core.Base) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private org.tti.tokens.model.artifact.Artifact artifact_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tti.tokens.model.artifact.Artifact, org.tti.tokens.model.artifact.Artifact.Builder, org.tti.tokens.model.artifact.ArtifactOrBuilder> artifactBuilder_;
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public boolean hasArtifact() {
      return artifactBuilder_ != null || artifact_ != null;
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public org.tti.tokens.model.artifact.Artifact getArtifact() {
      if (artifactBuilder_ == null) {
        return artifact_ == null ? org.tti.tokens.model.artifact.Artifact.getDefaultInstance() : artifact_;
      } else {
        return artifactBuilder_.getMessage();
      }
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public Builder setArtifact(org.tti.tokens.model.artifact.Artifact value) {
      if (artifactBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        artifact_ = value;
        onChanged();
      } else {
        artifactBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public Builder setArtifact(
        org.tti.tokens.model.artifact.Artifact.Builder builderForValue) {
      if (artifactBuilder_ == null) {
        artifact_ = builderForValue.build();
        onChanged();
      } else {
        artifactBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public Builder mergeArtifact(org.tti.tokens.model.artifact.Artifact value) {
      if (artifactBuilder_ == null) {
        if (artifact_ != null) {
          artifact_ =
            org.tti.tokens.model.artifact.Artifact.newBuilder(artifact_).mergeFrom(value).buildPartial();
        } else {
          artifact_ = value;
        }
        onChanged();
      } else {
        artifactBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public Builder clearArtifact() {
      if (artifactBuilder_ == null) {
        artifact_ = null;
        onChanged();
      } else {
        artifact_ = null;
        artifactBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public org.tti.tokens.model.artifact.Artifact.Builder getArtifactBuilder() {
      
      onChanged();
      return getArtifactFieldBuilder().getBuilder();
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    public org.tti.tokens.model.artifact.ArtifactOrBuilder getArtifactOrBuilder() {
      if (artifactBuilder_ != null) {
        return artifactBuilder_.getMessageOrBuilder();
      } else {
        return artifact_ == null ?
            org.tti.tokens.model.artifact.Artifact.getDefaultInstance() : artifact_;
      }
    }
    /**
     * <code>.taxonomy.model.artifact.Artifact artifact = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tti.tokens.model.artifact.Artifact, org.tti.tokens.model.artifact.Artifact.Builder, org.tti.tokens.model.artifact.ArtifactOrBuilder> 
        getArtifactFieldBuilder() {
      if (artifactBuilder_ == null) {
        artifactBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tti.tokens.model.artifact.Artifact, org.tti.tokens.model.artifact.Artifact.Builder, org.tti.tokens.model.artifact.ArtifactOrBuilder>(
                getArtifact(),
                getParentForChildren(),
                isClean());
        artifact_ = null;
      }
      return artifactBuilder_;
    }

    private int tokenType_ = 0;
    /**
     * <code>.taxonomy.model.artifact.TokenType token_type = 2;</code>
     */
    public int getTokenTypeValue() {
      return tokenType_;
    }
    /**
     * <code>.taxonomy.model.artifact.TokenType token_type = 2;</code>
     */
    public Builder setTokenTypeValue(int value) {
      tokenType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.taxonomy.model.artifact.TokenType token_type = 2;</code>
     */
    public org.tti.tokens.model.artifact.TokenType getTokenType() {
      @SuppressWarnings("deprecation")
      org.tti.tokens.model.artifact.TokenType result = org.tti.tokens.model.artifact.TokenType.valueOf(tokenType_);
      return result == null ? org.tti.tokens.model.artifact.TokenType.UNRECOGNIZED : result;
    }
    /**
     * <code>.taxonomy.model.artifact.TokenType token_type = 2;</code>
     */
    public Builder setTokenType(org.tti.tokens.model.artifact.TokenType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      tokenType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.taxonomy.model.artifact.TokenType token_type = 2;</code>
     */
    public Builder clearTokenType() {
      
      tokenType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     *A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object symbol_ = "";
    /**
     * <pre>
     *an optionally unique symbol or identifier
     * </pre>
     *
     * <code>string symbol = 4;</code>
     */
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *an optionally unique symbol or identifier
     * </pre>
     *
     * <code>string symbol = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *an optionally unique symbol or identifier
     * </pre>
     *
     * <code>string symbol = 4;</code>
     */
    public Builder setSymbol(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      symbol_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *an optionally unique symbol or identifier
     * </pre>
     *
     * <code>string symbol = 4;</code>
     */
    public Builder clearSymbol() {
      
      symbol_ = getDefaultInstance().getSymbol();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *an optionally unique symbol or identifier
     * </pre>
     *
     * <code>string symbol = 4;</code>
     */
    public Builder setSymbolBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      symbol_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object owner_ = "";
    /**
     * <pre>
     *A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
     * </pre>
     *
     * <code>string owner = 5;</code>
     */
    public java.lang.String getOwner() {
      java.lang.Object ref = owner_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        owner_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
     * </pre>
     *
     * <code>string owner = 5;</code>
     */
    public com.google.protobuf.ByteString
        getOwnerBytes() {
      java.lang.Object ref = owner_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        owner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
     * </pre>
     *
     * <code>string owner = 5;</code>
     */
    public Builder setOwner(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      owner_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
     * </pre>
     *
     * <code>string owner = 5;</code>
     */
    public Builder clearOwner() {
      
      owner_ = getDefaultInstance().getOwner();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
     * </pre>
     *
     * <code>string owner = 5;</code>
     */
    public Builder setOwnerBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      owner_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString quantity_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     *Can represent the initial quantity created or the total minted or issued for the class.
     * </pre>
     *
     * <code>bytes quantity = 6;</code>
     */
    public com.google.protobuf.ByteString getQuantity() {
      return quantity_;
    }
    /**
     * <pre>
     *Can represent the initial quantity created or the total minted or issued for the class.
     * </pre>
     *
     * <code>bytes quantity = 6;</code>
     */
    public Builder setQuantity(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      quantity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *Can represent the initial quantity created or the total minted or issued for the class.
     * </pre>
     *
     * <code>bytes quantity = 6;</code>
     */
    public Builder clearQuantity() {
      
      quantity_ = getDefaultInstance().getQuantity();
      onChanged();
      return this;
    }

    private int decimals_ ;
    /**
     * <pre>
     *A number of decimal places a single token can be subdivided into.  A typical fiat currency has a value of 2, i.e. $100.53. A value of 0 means that subdivision is not supported and a whole token is the smallest unit of the token that can be owned.
     * </pre>
     *
     * <code>int32 decimals = 7;</code>
     */
    public int getDecimals() {
      return decimals_;
    }
    /**
     * <pre>
     *A number of decimal places a single token can be subdivided into.  A typical fiat currency has a value of 2, i.e. $100.53. A value of 0 means that subdivision is not supported and a whole token is the smallest unit of the token that can be owned.
     * </pre>
     *
     * <code>int32 decimals = 7;</code>
     */
    public Builder setDecimals(int value) {
      
      decimals_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *A number of decimal places a single token can be subdivided into.  A typical fiat currency has a value of 2, i.e. $100.53. A value of 0 means that subdivision is not supported and a whole token is the smallest unit of the token that can be owned.
     * </pre>
     *
     * <code>int32 decimals = 7;</code>
     */
    public Builder clearDecimals() {
      
      decimals_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> tokenProperties_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetTokenProperties() {
      if (tokenProperties_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TokenPropertiesDefaultEntryHolder.defaultEntry);
      }
      return tokenProperties_;
    }
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMutableTokenProperties() {
      onChanged();;
      if (tokenProperties_ == null) {
        tokenProperties_ = com.google.protobuf.MapField.newMapField(
            TokenPropertiesDefaultEntryHolder.defaultEntry);
      }
      if (!tokenProperties_.isMutable()) {
        tokenProperties_ = tokenProperties_.copy();
      }
      return tokenProperties_;
    }

    public int getTokenPropertiesCount() {
      return internalGetTokenProperties().getMap().size();
    }
    /**
     * <pre>
     *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
     * </pre>
     *
     * <code>map&lt;string, string&gt; token_properties = 8;</code>
     */

    public boolean containsTokenProperties(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTokenProperties().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTokenPropertiesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTokenProperties() {
      return getTokenPropertiesMap();
    }
    /**
     * <pre>
     *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
     * </pre>
     *
     * <code>map&lt;string, string&gt; token_properties = 8;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getTokenPropertiesMap() {
      return internalGetTokenProperties().getMap();
    }
    /**
     * <pre>
     *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
     * </pre>
     *
     * <code>map&lt;string, string&gt; token_properties = 8;</code>
     */

    public java.lang.String getTokenPropertiesOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTokenProperties().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
     * </pre>
     *
     * <code>map&lt;string, string&gt; token_properties = 8;</code>
     */

    public java.lang.String getTokenPropertiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTokenProperties().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTokenProperties() {
      internalGetMutableTokenProperties().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
     * </pre>
     *
     * <code>map&lt;string, string&gt; token_properties = 8;</code>
     */

    public Builder removeTokenProperties(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableTokenProperties().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String>
    getMutableTokenProperties() {
      return internalGetMutableTokenProperties().getMutableMap();
    }
    /**
     * <pre>
     *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
     * </pre>
     *
     * <code>map&lt;string, string&gt; token_properties = 8;</code>
     */
    public Builder putTokenProperties(
        java.lang.String key,
        java.lang.String value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableTokenProperties().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     *Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
     * </pre>
     *
     * <code>map&lt;string, string&gt; token_properties = 8;</code>
     */

    public Builder putAllTokenProperties(
        java.util.Map<java.lang.String, java.lang.String> values) {
      internalGetMutableTokenProperties().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.lang.Object constructorName_ = "";
    /**
     * <pre>
     *a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
     * </pre>
     *
     * <code>string constructor_name = 9;</code>
     */
    public java.lang.String getConstructorName() {
      java.lang.Object ref = constructorName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        constructorName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     *a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
     * </pre>
     *
     * <code>string constructor_name = 9;</code>
     */
    public com.google.protobuf.ByteString
        getConstructorNameBytes() {
      java.lang.Object ref = constructorName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        constructorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
     * </pre>
     *
     * <code>string constructor_name = 9;</code>
     */
    public Builder setConstructorName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      constructorName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
     * </pre>
     *
     * <code>string constructor_name = 9;</code>
     */
    public Builder clearConstructorName() {
      
      constructorName_ = getDefaultInstance().getConstructorName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
     * </pre>
     *
     * <code>string constructor_name = 9;</code>
     */
    public Builder setConstructorNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      constructorName_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.Any constructor_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> constructorBuilder_;
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public boolean hasConstructor() {
      return constructorBuilder_ != null || constructor_ != null;
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public com.google.protobuf.Any getConstructor() {
      if (constructorBuilder_ == null) {
        return constructor_ == null ? com.google.protobuf.Any.getDefaultInstance() : constructor_;
      } else {
        return constructorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public Builder setConstructor(com.google.protobuf.Any value) {
      if (constructorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        constructor_ = value;
        onChanged();
      } else {
        constructorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public Builder setConstructor(
        com.google.protobuf.Any.Builder builderForValue) {
      if (constructorBuilder_ == null) {
        constructor_ = builderForValue.build();
        onChanged();
      } else {
        constructorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public Builder mergeConstructor(com.google.protobuf.Any value) {
      if (constructorBuilder_ == null) {
        if (constructor_ != null) {
          constructor_ =
            com.google.protobuf.Any.newBuilder(constructor_).mergeFrom(value).buildPartial();
        } else {
          constructor_ = value;
        }
        onChanged();
      } else {
        constructorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public Builder clearConstructor() {
      if (constructorBuilder_ == null) {
        constructor_ = null;
        onChanged();
      } else {
        constructor_ = null;
        constructorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public com.google.protobuf.Any.Builder getConstructorBuilder() {
      
      onChanged();
      return getConstructorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    public com.google.protobuf.AnyOrBuilder getConstructorOrBuilder() {
      if (constructorBuilder_ != null) {
        return constructorBuilder_.getMessageOrBuilder();
      } else {
        return constructor_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : constructor_;
      }
    }
    /**
     * <pre>
     *the constructor type defined in the token template artifact.
     * </pre>
     *
     * <code>.google.protobuf.Any constructor = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getConstructorFieldBuilder() {
      if (constructorBuilder_ == null) {
        constructorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getConstructor(),
                getParentForChildren(),
                isClean());
        constructor_ = null;
      }
      return constructorBuilder_;
    }

    private java.util.List<org.tti.tokens.model.core.Base> childTokens_ =
      java.util.Collections.emptyList();
    private void ensureChildTokensIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        childTokens_ = new java.util.ArrayList<org.tti.tokens.model.core.Base>(childTokens_);
        bitField0_ |= 0x00000400;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tti.tokens.model.core.Base, org.tti.tokens.model.core.Base.Builder, org.tti.tokens.model.core.BaseOrBuilder> childTokensBuilder_;

    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public java.util.List<org.tti.tokens.model.core.Base> getChildTokensList() {
      if (childTokensBuilder_ == null) {
        return java.util.Collections.unmodifiableList(childTokens_);
      } else {
        return childTokensBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public int getChildTokensCount() {
      if (childTokensBuilder_ == null) {
        return childTokens_.size();
      } else {
        return childTokensBuilder_.getCount();
      }
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public org.tti.tokens.model.core.Base getChildTokens(int index) {
      if (childTokensBuilder_ == null) {
        return childTokens_.get(index);
      } else {
        return childTokensBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder setChildTokens(
        int index, org.tti.tokens.model.core.Base value) {
      if (childTokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildTokensIsMutable();
        childTokens_.set(index, value);
        onChanged();
      } else {
        childTokensBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder setChildTokens(
        int index, org.tti.tokens.model.core.Base.Builder builderForValue) {
      if (childTokensBuilder_ == null) {
        ensureChildTokensIsMutable();
        childTokens_.set(index, builderForValue.build());
        onChanged();
      } else {
        childTokensBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder addChildTokens(org.tti.tokens.model.core.Base value) {
      if (childTokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildTokensIsMutable();
        childTokens_.add(value);
        onChanged();
      } else {
        childTokensBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder addChildTokens(
        int index, org.tti.tokens.model.core.Base value) {
      if (childTokensBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureChildTokensIsMutable();
        childTokens_.add(index, value);
        onChanged();
      } else {
        childTokensBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder addChildTokens(
        org.tti.tokens.model.core.Base.Builder builderForValue) {
      if (childTokensBuilder_ == null) {
        ensureChildTokensIsMutable();
        childTokens_.add(builderForValue.build());
        onChanged();
      } else {
        childTokensBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder addChildTokens(
        int index, org.tti.tokens.model.core.Base.Builder builderForValue) {
      if (childTokensBuilder_ == null) {
        ensureChildTokensIsMutable();
        childTokens_.add(index, builderForValue.build());
        onChanged();
      } else {
        childTokensBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder addAllChildTokens(
        java.lang.Iterable<? extends org.tti.tokens.model.core.Base> values) {
      if (childTokensBuilder_ == null) {
        ensureChildTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, childTokens_);
        onChanged();
      } else {
        childTokensBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder clearChildTokens() {
      if (childTokensBuilder_ == null) {
        childTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
      } else {
        childTokensBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public Builder removeChildTokens(int index) {
      if (childTokensBuilder_ == null) {
        ensureChildTokensIsMutable();
        childTokens_.remove(index);
        onChanged();
      } else {
        childTokensBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public org.tti.tokens.model.core.Base.Builder getChildTokensBuilder(
        int index) {
      return getChildTokensFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public org.tti.tokens.model.core.BaseOrBuilder getChildTokensOrBuilder(
        int index) {
      if (childTokensBuilder_ == null) {
        return childTokens_.get(index);  } else {
        return childTokensBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public java.util.List<? extends org.tti.tokens.model.core.BaseOrBuilder> 
         getChildTokensOrBuilderList() {
      if (childTokensBuilder_ != null) {
        return childTokensBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(childTokens_);
      }
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public org.tti.tokens.model.core.Base.Builder addChildTokensBuilder() {
      return getChildTokensFieldBuilder().addBuilder(
          org.tti.tokens.model.core.Base.getDefaultInstance());
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public org.tti.tokens.model.core.Base.Builder addChildTokensBuilder(
        int index) {
      return getChildTokensFieldBuilder().addBuilder(
          index, org.tti.tokens.model.core.Base.getDefaultInstance());
    }
    /**
     * <pre>
     *if hybrid, this can contain the list of child token classes.
     * </pre>
     *
     * <code>repeated .taxonomy.model.core.Base child_tokens = 11;</code>
     */
    public java.util.List<org.tti.tokens.model.core.Base.Builder> 
         getChildTokensBuilderList() {
      return getChildTokensFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tti.tokens.model.core.Base, org.tti.tokens.model.core.Base.Builder, org.tti.tokens.model.core.BaseOrBuilder> 
        getChildTokensFieldBuilder() {
      if (childTokensBuilder_ == null) {
        childTokensBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tti.tokens.model.core.Base, org.tti.tokens.model.core.Base.Builder, org.tti.tokens.model.core.BaseOrBuilder>(
                childTokens_,
                ((bitField0_ & 0x00000400) != 0),
                getParentForChildren(),
                isClean());
        childTokens_ = null;
      }
      return childTokensBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:taxonomy.model.core.Base)
  }

  // @@protoc_insertion_point(class_scope:taxonomy.model.core.Base)
  private static final org.tti.tokens.model.core.Base DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tti.tokens.model.core.Base();
  }

  public static org.tti.tokens.model.core.Base getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Base>
      PARSER = new com.google.protobuf.AbstractParser<Base>() {
    @java.lang.Override
    public Base parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Base(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Base> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Base> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.tti.tokens.model.core.Base getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

