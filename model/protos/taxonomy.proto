syntax = "proto3";

package taxonomy.model;
import "core.proto";
import "artifact.proto";
option csharp_namespace = "TTI.TTF.Taxonomy.Model";
option java_package = "org.tti.ttf.taxonomy.model";
option java_multiple_files = true;

//each collection defined in a map with the index being the symbol of the artifact for the collection.
message Taxonomy{
    TaxonomyVersion version = 1;
    map<string, taxonomy.model.core.Base> base_token_types = 2;
    map<string, taxonomy.model.core.Behavior> behaviors = 3;
    map<string, taxonomy.model.core.BehaviorGroup> behavior_groups = 4;
    map<string, taxonomy.model.core.PropertySet> property_sets = 5;
    map<string, taxonomy.model.core.TemplateFormula> template_formulas = 6;
    map<string, taxonomy.model.core.TemplateDefinition> template_definitions = 7;
    Hierarchy token_template_hierarchy = 8;
    taxonomy.model.artifact.FormulaGrammar formula_grammar = 9;
}

message TaxonomyVersion{
    string id = 1;
    string version = 2;
    string state_hash = 3;
}

message Hierarchy {
    BranchRoot fungibles = 1;
    BranchRoot non_fungibles = 2;
    HybridBranchRoot hybrids = 3;
}

message BranchIdentifier{
    taxonomy.model.artifact.TokenType token_type = 1;
    taxonomy.model.artifact.ClassificationBranch branch = 2;
    string formula_id = 3;
}

message BranchRoot{
    BranchIdentifier branch_identifier = 1;
    string parent_formula_id = 2;
    string name = 3;
    taxonomy.model.core.TemplateFormula branch_formula = 4;
    taxonomy.model.core.TokenTemplates templates = 5;
    repeated BranchRoot branches = 6;
}

message HybridBranchRoot{
    BranchRoot fungible_parent = 1;
    BranchRoot non_fungible_parent = 2;
}

