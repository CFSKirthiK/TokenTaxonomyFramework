// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: core.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TTI.TTF.Model.Core {

  /// <summary>Holder for reflection information generated from core.proto</summary>
  public static partial class CoreReflection {

    #region Descriptor
    /// <summary>File descriptor for core.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgpjb3JlLnByb3RvEhN0YXhvbm9teS5tb2RlbC5jb3JlGhlnb29nbGUvcHJv",
            "dG9idWYvYW55LnByb3RvGg5hcnRpZmFjdC5wcm90bxoNZ3JhbW1hci5wcm90",
            "byKuBQoEQmFzZRIzCghhcnRpZmFjdBgBIAEoCzIhLnRheG9ub215Lm1vZGVs",
            "LmFydGlmYWN0LkFydGlmYWN0EjYKCnRva2VuX3R5cGUYAiABKA4yIi50YXhv",
            "bm9teS5tb2RlbC5hcnRpZmFjdC5Ub2tlblR5cGUSOwoMc2luZ2xlX3Rva2Vu",
            "GAMgASgLMiMudGF4b25vbXkubW9kZWwuZ3JhbW1hci5TaW5nbGVUb2tlbkgA",
            "EjwKBmh5YnJpZBgEIAEoCzIqLnRheG9ub215Lm1vZGVsLmdyYW1tYXIuSHli",
            "cmlkVG9rZW5Gb3JtdWxhSAASWwoTaHlicmlkX3dpdGhfaHlicmlkcxgFIAEo",
            "CzI8LnRheG9ub215Lm1vZGVsLmdyYW1tYXIuSHlicmlkVG9rZW5XaXRoSHli",
            "cmlkQ2hpbGRyZW5Gb3JtdWxhSAASDAoEbmFtZRgGIAEoCRIOCgZzeW1ib2wY",
            "ByABKAkSDQoFb3duZXIYCCABKAkSEAoIcXVhbnRpdHkYCSABKAwSEAoIZGVj",
            "aW1hbHMYCiABKAUSSAoQdG9rZW5fcHJvcGVydGllcxgLIAMoCzIuLnRheG9u",
            "b215Lm1vZGVsLmNvcmUuQmFzZS5Ub2tlblByb3BlcnRpZXNFbnRyeRIYChBj",
            "b25zdHJ1Y3Rvcl9uYW1lGAwgASgJEikKC2NvbnN0cnVjdG9yGA0gASgLMhQu",
            "Z29vZ2xlLnByb3RvYnVmLkFueRI4CgxjaGlsZF90b2tlbnMYDiADKAsyIi50",
            "YXhvbm9teS5tb2RlbC5jb3JlLlRva2VuVGVtcGxhdGUaNgoUVG9rZW5Qcm9w",
            "ZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIP",
            "Cg10b2tlbl9mb3JtdWxhIqUCCghCZWhhdmlvchIzCghhcnRpZmFjdBgBIAEo",
            "CzIhLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0EhAKCGV4dGVy",
            "bmFsGAIgASgIEiEKGWJlaGF2aW9yX2NvbnN0cnVjdG9yX25hbWUYAyABKAkS",
            "MgoUYmVoYXZpb3JfY29uc3RydWN0b3IYBCABKAsyFC5nb29nbGUucHJvdG9i",
            "dWYuQW55Ej0KFGJlaGF2aW9yX2ludm9jYXRpb25zGAUgAygLMh8udGF4b25v",
            "bXkubW9kZWwuY29yZS5JbnZvY2F0aW9uEjwKFWJlaGF2aW9yYWxfcHJvcGVy",
            "dGllcxgGIAMoCzIdLnRheG9ub215Lm1vZGVsLmNvcmUuUHJvcGVydHkizgIK",
            "DUJlaGF2aW9yR3JvdXASMwoIYXJ0aWZhY3QYASABKAsyIS50YXhvbm9teS5t",
            "b2RlbC5hcnRpZmFjdC5BcnRpZmFjdBJBChBiZWhhdmlvcl9zeW1ib2xzGAIg",
            "AygLMicudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3RTeW1ib2wS",
            "YgoZbWVtYmVyX2JlaGF2aW9yX2FydGlmYWN0cxgDIAMoCzI/LnRheG9ub215",
            "Lm1vZGVsLmNvcmUuQmVoYXZpb3JHcm91cC5NZW1iZXJCZWhhdmlvckFydGlm",
            "YWN0c0VudHJ5GmEKHE1lbWJlckJlaGF2aW9yQXJ0aWZhY3RzRW50cnkSCwoD",
            "a2V5GAEgASgJEjAKBXZhbHVlGAIgASgLMiEudGF4b25vbXkubW9kZWwuYXJ0",
            "aWZhY3QuQXJ0aWZhY3Q6AjgBInUKC1Byb3BlcnR5U2V0EjMKCGFydGlmYWN0",
            "GAEgASgLMiEudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3QSMQoK",
            "cHJvcGVydGllcxgCIAMoCzIdLnRheG9ub215Lm1vZGVsLmNvcmUuUHJvcGVy",
            "dHkicgoIUHJvcGVydHkSDAoEbmFtZRgBIAEoCRIZChF2YWx1ZV9kZXNjcmlw",
            "dGlvbhgCIAEoCRI9ChRwcm9wZXJ0eV9pbnZvY2F0aW9ucxgDIAMoCzIfLnRh",
            "eG9ub215Lm1vZGVsLmNvcmUuSW52b2NhdGlvbiKVAgoNVG9rZW5UZW1wbGF0",
            "ZRIzCghhcnRpZmFjdBgBIAEoCzIhLnRheG9ub215Lm1vZGVsLmFydGlmYWN0",
            "LkFydGlmYWN0EicKBGJhc2UYAiABKAsyGS50YXhvbm9teS5tb2RlbC5jb3Jl",
            "LkJhc2USMAoJYmVoYXZpb3JzGAMgAygLMh0udGF4b25vbXkubW9kZWwuY29y",
            "ZS5CZWhhdmlvchI7Cg9iZWhhdmlvcl9ncm91cHMYBCADKAsyIi50YXhvbm9t",
            "eS5tb2RlbC5jb3JlLkJlaGF2aW9yR3JvdXASNwoNcHJvcGVydHlfc2V0cxgF",
            "IAMoCzIgLnRheG9ub215Lm1vZGVsLmNvcmUuUHJvcGVydHlTZXQiowEKCklu",
            "dm9jYXRpb24SDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRI3",
            "CgdyZXF1ZXN0GAMgASgLMiYudGF4b25vbXkubW9kZWwuY29yZS5JbnZvY2F0",
            "aW9uUmVxdWVzdBI5CghyZXNwb25zZRgEIAEoCzInLnRheG9ub215Lm1vZGVs",
            "LmNvcmUuSW52b2NhdGlvblJlc3BvbnNlIooBChFJbnZvY2F0aW9uUmVxdWVz",
            "dBIcChRjb250cm9sX21lc3NhZ2VfbmFtZRgBIAEoCRJCChBpbnB1dF9wYXJh",
            "bWV0ZXJzGAIgAygLMigudGF4b25vbXkubW9kZWwuY29yZS5JbnZvY2F0aW9u",
            "UGFyYW1ldGVyEhMKC2Rlc2NyaXB0aW9uGAMgASgJIowBChJJbnZvY2F0aW9u",
            "UmVzcG9uc2USHAoUY29udHJvbF9tZXNzYWdlX25hbWUYASABKAkSQwoRb3V0",
            "cHV0X3BhcmFtZXRlcnMYAiADKAsyKC50YXhvbm9teS5tb2RlbC5jb3JlLklu",
            "dm9jYXRpb25QYXJhbWV0ZXISEwoLZGVzY3JpcHRpb24YAyABKAkiPgoTSW52",
            "b2NhdGlvblBhcmFtZXRlchIMCgRuYW1lGAEgASgJEhkKEXZhbHVlX2Rlc2Ny",
            "aXB0aW9uGAIgASgJQi8KFm9yZy50dGkudHRmLm1vZGVsLmNvcmVQAaoCElRU",
            "SS5UVEYuTW9kZWwuQ29yZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::TTI.TTF.Model.Artifact.ArtifactReflection.Descriptor, global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.Base), global::TTI.TTF.Model.Core.Base.Parser, new[]{ "Artifact", "TokenType", "SingleToken", "Hybrid", "HybridWithHybrids", "Name", "Symbol", "Owner", "Quantity", "Decimals", "TokenProperties", "ConstructorName", "Constructor", "ChildTokens" }, new[]{ "TokenFormula" }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.Behavior), global::TTI.TTF.Model.Core.Behavior.Parser, new[]{ "Artifact", "External", "BehaviorConstructorName", "BehaviorConstructor", "BehaviorInvocations", "BehavioralProperties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.BehaviorGroup), global::TTI.TTF.Model.Core.BehaviorGroup.Parser, new[]{ "Artifact", "BehaviorSymbols", "MemberBehaviorArtifacts" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.PropertySet), global::TTI.TTF.Model.Core.PropertySet.Parser, new[]{ "Artifact", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.Property), global::TTI.TTF.Model.Core.Property.Parser, new[]{ "Name", "ValueDescription", "PropertyInvocations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.TokenTemplate), global::TTI.TTF.Model.Core.TokenTemplate.Parser, new[]{ "Artifact", "Base", "Behaviors", "BehaviorGroups", "PropertySets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.Invocation), global::TTI.TTF.Model.Core.Invocation.Parser, new[]{ "Name", "Description", "Request", "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.InvocationRequest), global::TTI.TTF.Model.Core.InvocationRequest.Parser, new[]{ "ControlMessageName", "InputParameters", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.InvocationResponse), global::TTI.TTF.Model.Core.InvocationResponse.Parser, new[]{ "ControlMessageName", "OutputParameters", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Core.InvocationParameter), global::TTI.TTF.Model.Core.InvocationParameter.Parser, new[]{ "Name", "ValueDescription" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///all tokens inherit from the base and implicitly support construction.  The properties represent non-behavioral properties, with the exception of Decimals which is used by the Subdividable or Non-Subdividable behavior where any value greater than 0 makes the token subdividable.
  /// </summary>
  public sealed partial class Base : pb::IMessage<Base> {
    private static readonly pb::MessageParser<Base> _parser = new pb::MessageParser<Base>(() => new Base());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Base> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base(Base other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      tokenType_ = other.tokenType_;
      name_ = other.name_;
      symbol_ = other.symbol_;
      owner_ = other.owner_;
      quantity_ = other.quantity_;
      decimals_ = other.decimals_;
      tokenProperties_ = other.tokenProperties_.Clone();
      constructorName_ = other.constructorName_;
      constructor_ = other.constructor_ != null ? other.constructor_.Clone() : null;
      childTokens_ = other.childTokens_.Clone();
      switch (other.TokenFormulaCase) {
        case TokenFormulaOneofCase.SingleToken:
          SingleToken = other.SingleToken.Clone();
          break;
        case TokenFormulaOneofCase.Hybrid:
          Hybrid = other.Hybrid.Clone();
          break;
        case TokenFormulaOneofCase.HybridWithHybrids:
          HybridWithHybrids = other.HybridWithHybrids.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base Clone() {
      return new Base(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "token_type" field.</summary>
    public const int TokenTypeFieldNumber = 2;
    private global::TTI.TTF.Model.Artifact.TokenType tokenType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Artifact.TokenType TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = value;
      }
    }

    /// <summary>Field number for the "single_token" field.</summary>
    public const int SingleTokenFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.SingleToken SingleToken {
      get { return tokenFormulaCase_ == TokenFormulaOneofCase.SingleToken ? (global::TTI.TTF.Model.Grammar.SingleToken) tokenFormula_ : null; }
      set {
        tokenFormula_ = value;
        tokenFormulaCase_ = value == null ? TokenFormulaOneofCase.None : TokenFormulaOneofCase.SingleToken;
      }
    }

    /// <summary>Field number for the "hybrid" field.</summary>
    public const int HybridFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.HybridTokenFormula Hybrid {
      get { return tokenFormulaCase_ == TokenFormulaOneofCase.Hybrid ? (global::TTI.TTF.Model.Grammar.HybridTokenFormula) tokenFormula_ : null; }
      set {
        tokenFormula_ = value;
        tokenFormulaCase_ = value == null ? TokenFormulaOneofCase.None : TokenFormulaOneofCase.Hybrid;
      }
    }

    /// <summary>Field number for the "hybrid_with_hybrids" field.</summary>
    public const int HybridWithHybridsFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula HybridWithHybrids {
      get { return tokenFormulaCase_ == TokenFormulaOneofCase.HybridWithHybrids ? (global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula) tokenFormula_ : null; }
      set {
        tokenFormula_ = value;
        tokenFormulaCase_ = value == null ? TokenFormulaOneofCase.None : TokenFormulaOneofCase.HybridWithHybrids;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    ///A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 7;
    private string symbol_ = "";
    /// <summary>
    ///an optionally unique symbol or identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 8;
    private string owner_ = "";
    /// <summary>
    ///A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 9;
    private pb::ByteString quantity_ = pb::ByteString.Empty;
    /// <summary>
    ///Can represent the initial quantity created or the total minted or issued for the class.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Quantity {
      get { return quantity_; }
      set {
        quantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 10;
    private int decimals_;
    /// <summary>
    ///A number of decimal places a single token can be subdivided into.  A typical fiat currency has a value of 2, i.e. $100.53. A value of 0 means that subdivision is not supported and a whole token is the smallest unit of the token that can be owned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "token_properties" field.</summary>
    public const int TokenPropertiesFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_tokenProperties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 90);
    private readonly pbc::MapField<string, string> tokenProperties_ = new pbc::MapField<string, string>();
    /// <summary>
    ///Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> TokenProperties {
      get { return tokenProperties_; }
    }

    /// <summary>Field number for the "constructor_name" field.</summary>
    public const int ConstructorNameFieldNumber = 12;
    private string constructorName_ = "";
    /// <summary>
    ///a template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConstructorName {
      get { return constructorName_; }
      set {
        constructorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Any constructor_;
    /// <summary>
    ///the constructor type defined in the token template artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Constructor {
      get { return constructor_; }
      set {
        constructor_ = value;
      }
    }

    /// <summary>Field number for the "child_tokens" field.</summary>
    public const int ChildTokensFieldNumber = 14;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.TokenTemplate> _repeated_childTokens_codec
        = pb::FieldCodec.ForMessage(114, global::TTI.TTF.Model.Core.TokenTemplate.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.TokenTemplate> childTokens_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.TokenTemplate>();
    /// <summary>
    ///if hybrid, this can contain the list of child token classes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.TokenTemplate> ChildTokens {
      get { return childTokens_; }
    }

    private object tokenFormula_;
    /// <summary>Enum of possible cases for the "token_formula" oneof.</summary>
    public enum TokenFormulaOneofCase {
      None = 0,
      SingleToken = 3,
      Hybrid = 4,
      HybridWithHybrids = 5,
    }
    private TokenFormulaOneofCase tokenFormulaCase_ = TokenFormulaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenFormulaOneofCase TokenFormulaCase {
      get { return tokenFormulaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTokenFormula() {
      tokenFormulaCase_ = TokenFormulaOneofCase.None;
      tokenFormula_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Base);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Base other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (TokenType != other.TokenType) return false;
      if (!object.Equals(SingleToken, other.SingleToken)) return false;
      if (!object.Equals(Hybrid, other.Hybrid)) return false;
      if (!object.Equals(HybridWithHybrids, other.HybridWithHybrids)) return false;
      if (Name != other.Name) return false;
      if (Symbol != other.Symbol) return false;
      if (Owner != other.Owner) return false;
      if (Quantity != other.Quantity) return false;
      if (Decimals != other.Decimals) return false;
      if (!TokenProperties.Equals(other.TokenProperties)) return false;
      if (ConstructorName != other.ConstructorName) return false;
      if (!object.Equals(Constructor, other.Constructor)) return false;
      if(!childTokens_.Equals(other.childTokens_)) return false;
      if (TokenFormulaCase != other.TokenFormulaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (TokenType != 0) hash ^= TokenType.GetHashCode();
      if (tokenFormulaCase_ == TokenFormulaOneofCase.SingleToken) hash ^= SingleToken.GetHashCode();
      if (tokenFormulaCase_ == TokenFormulaOneofCase.Hybrid) hash ^= Hybrid.GetHashCode();
      if (tokenFormulaCase_ == TokenFormulaOneofCase.HybridWithHybrids) hash ^= HybridWithHybrids.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (Quantity.Length != 0) hash ^= Quantity.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      hash ^= TokenProperties.GetHashCode();
      if (ConstructorName.Length != 0) hash ^= ConstructorName.GetHashCode();
      if (constructor_ != null) hash ^= Constructor.GetHashCode();
      hash ^= childTokens_.GetHashCode();
      hash ^= (int) tokenFormulaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (TokenType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TokenType);
      }
      if (tokenFormulaCase_ == TokenFormulaOneofCase.SingleToken) {
        output.WriteRawTag(26);
        output.WriteMessage(SingleToken);
      }
      if (tokenFormulaCase_ == TokenFormulaOneofCase.Hybrid) {
        output.WriteRawTag(34);
        output.WriteMessage(Hybrid);
      }
      if (tokenFormulaCase_ == TokenFormulaOneofCase.HybridWithHybrids) {
        output.WriteRawTag(42);
        output.WriteMessage(HybridWithHybrids);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Symbol);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(Quantity);
      }
      if (Decimals != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Decimals);
      }
      tokenProperties_.WriteTo(output, _map_tokenProperties_codec);
      if (ConstructorName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ConstructorName);
      }
      if (constructor_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Constructor);
      }
      childTokens_.WriteTo(output, _repeated_childTokens_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (TokenType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenType);
      }
      if (tokenFormulaCase_ == TokenFormulaOneofCase.SingleToken) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SingleToken);
      }
      if (tokenFormulaCase_ == TokenFormulaOneofCase.Hybrid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hybrid);
      }
      if (tokenFormulaCase_ == TokenFormulaOneofCase.HybridWithHybrids) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridWithHybrids);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (Quantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Quantity);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      size += tokenProperties_.CalculateSize(_map_tokenProperties_codec);
      if (ConstructorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConstructorName);
      }
      if (constructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constructor);
      }
      size += childTokens_.CalculateSize(_repeated_childTokens_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Base other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.TokenType != 0) {
        TokenType = other.TokenType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.Quantity.Length != 0) {
        Quantity = other.Quantity;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      tokenProperties_.Add(other.tokenProperties_);
      if (other.ConstructorName.Length != 0) {
        ConstructorName = other.ConstructorName;
      }
      if (other.constructor_ != null) {
        if (constructor_ == null) {
          Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Constructor.MergeFrom(other.Constructor);
      }
      childTokens_.Add(other.childTokens_);
      switch (other.TokenFormulaCase) {
        case TokenFormulaOneofCase.SingleToken:
          if (SingleToken == null) {
            SingleToken = new global::TTI.TTF.Model.Grammar.SingleToken();
          }
          SingleToken.MergeFrom(other.SingleToken);
          break;
        case TokenFormulaOneofCase.Hybrid:
          if (Hybrid == null) {
            Hybrid = new global::TTI.TTF.Model.Grammar.HybridTokenFormula();
          }
          Hybrid.MergeFrom(other.Hybrid);
          break;
        case TokenFormulaOneofCase.HybridWithHybrids:
          if (HybridWithHybrids == null) {
            HybridWithHybrids = new global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula();
          }
          HybridWithHybrids.MergeFrom(other.HybridWithHybrids);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            TokenType = (global::TTI.TTF.Model.Artifact.TokenType) input.ReadEnum();
            break;
          }
          case 26: {
            global::TTI.TTF.Model.Grammar.SingleToken subBuilder = new global::TTI.TTF.Model.Grammar.SingleToken();
            if (tokenFormulaCase_ == TokenFormulaOneofCase.SingleToken) {
              subBuilder.MergeFrom(SingleToken);
            }
            input.ReadMessage(subBuilder);
            SingleToken = subBuilder;
            break;
          }
          case 34: {
            global::TTI.TTF.Model.Grammar.HybridTokenFormula subBuilder = new global::TTI.TTF.Model.Grammar.HybridTokenFormula();
            if (tokenFormulaCase_ == TokenFormulaOneofCase.Hybrid) {
              subBuilder.MergeFrom(Hybrid);
            }
            input.ReadMessage(subBuilder);
            Hybrid = subBuilder;
            break;
          }
          case 42: {
            global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula subBuilder = new global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula();
            if (tokenFormulaCase_ == TokenFormulaOneofCase.HybridWithHybrids) {
              subBuilder.MergeFrom(HybridWithHybrids);
            }
            input.ReadMessage(subBuilder);
            HybridWithHybrids = subBuilder;
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 58: {
            Symbol = input.ReadString();
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
          case 74: {
            Quantity = input.ReadBytes();
            break;
          }
          case 80: {
            Decimals = input.ReadInt32();
            break;
          }
          case 90: {
            tokenProperties_.AddEntriesFrom(input, _map_tokenProperties_codec);
            break;
          }
          case 98: {
            ConstructorName = input.ReadString();
            break;
          }
          case 106: {
            if (constructor_ == null) {
              Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Constructor);
            break;
          }
          case 114: {
            childTokens_.AddEntriesFrom(input, _repeated_childTokens_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Behavior : pb::IMessage<Behavior> {
    private static readonly pb::MessageParser<Behavior> _parser = new pb::MessageParser<Behavior>(() => new Behavior());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Behavior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior(Behavior other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      external_ = other.external_;
      behaviorConstructorName_ = other.behaviorConstructorName_;
      behaviorConstructor_ = other.behaviorConstructor_ != null ? other.behaviorConstructor_.Clone() : null;
      behaviorInvocations_ = other.behaviorInvocations_.Clone();
      behavioralProperties_ = other.behavioralProperties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior Clone() {
      return new Behavior(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "external" field.</summary>
    public const int ExternalFieldNumber = 2;
    private bool external_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool External {
      get { return external_; }
      set {
        external_ = value;
      }
    }

    /// <summary>Field number for the "behavior_constructor_name" field.</summary>
    public const int BehaviorConstructorNameFieldNumber = 3;
    private string behaviorConstructorName_ = "";
    /// <summary>
    ///proto message name empty if there is no constructor, used when unpacking the Any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BehaviorConstructorName {
      get { return behaviorConstructorName_; }
      set {
        behaviorConstructorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "behavior_constructor" field.</summary>
    public const int BehaviorConstructorFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Any behaviorConstructor_;
    /// <summary>
    ///optionally retrieved for behaviors like Role Support that needs input when setting up the roles when the token class is created.  Uses Any as the type as it will not be known by the framework.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any BehaviorConstructor {
      get { return behaviorConstructor_; }
      set {
        behaviorConstructor_ = value;
      }
    }

    /// <summary>Field number for the "behavior_invocations" field.</summary>
    public const int BehaviorInvocationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.Invocation> _repeated_behaviorInvocations_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Model.Core.Invocation.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.Invocation> behaviorInvocations_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.Invocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.Invocation> BehaviorInvocations {
      get { return behaviorInvocations_; }
    }

    /// <summary>Field number for the "behavioral_properties" field.</summary>
    public const int BehavioralPropertiesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.Property> _repeated_behavioralProperties_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.Property> behavioralProperties_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.Property>();
    /// <summary>
    ///for any properties that should be added to the token if the behavior is implemented.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.Property> BehavioralProperties {
      get { return behavioralProperties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Behavior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Behavior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (External != other.External) return false;
      if (BehaviorConstructorName != other.BehaviorConstructorName) return false;
      if (!object.Equals(BehaviorConstructor, other.BehaviorConstructor)) return false;
      if(!behaviorInvocations_.Equals(other.behaviorInvocations_)) return false;
      if(!behavioralProperties_.Equals(other.behavioralProperties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (External != false) hash ^= External.GetHashCode();
      if (BehaviorConstructorName.Length != 0) hash ^= BehaviorConstructorName.GetHashCode();
      if (behaviorConstructor_ != null) hash ^= BehaviorConstructor.GetHashCode();
      hash ^= behaviorInvocations_.GetHashCode();
      hash ^= behavioralProperties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (External != false) {
        output.WriteRawTag(16);
        output.WriteBool(External);
      }
      if (BehaviorConstructorName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BehaviorConstructorName);
      }
      if (behaviorConstructor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BehaviorConstructor);
      }
      behaviorInvocations_.WriteTo(output, _repeated_behaviorInvocations_codec);
      behavioralProperties_.WriteTo(output, _repeated_behavioralProperties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (External != false) {
        size += 1 + 1;
      }
      if (BehaviorConstructorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BehaviorConstructorName);
      }
      if (behaviorConstructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BehaviorConstructor);
      }
      size += behaviorInvocations_.CalculateSize(_repeated_behaviorInvocations_codec);
      size += behavioralProperties_.CalculateSize(_repeated_behavioralProperties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Behavior other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.External != false) {
        External = other.External;
      }
      if (other.BehaviorConstructorName.Length != 0) {
        BehaviorConstructorName = other.BehaviorConstructorName;
      }
      if (other.behaviorConstructor_ != null) {
        if (behaviorConstructor_ == null) {
          BehaviorConstructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        BehaviorConstructor.MergeFrom(other.BehaviorConstructor);
      }
      behaviorInvocations_.Add(other.behaviorInvocations_);
      behavioralProperties_.Add(other.behavioralProperties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            External = input.ReadBool();
            break;
          }
          case 26: {
            BehaviorConstructorName = input.ReadString();
            break;
          }
          case 34: {
            if (behaviorConstructor_ == null) {
              BehaviorConstructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(BehaviorConstructor);
            break;
          }
          case 42: {
            behaviorInvocations_.AddEntriesFrom(input, _repeated_behaviorInvocations_codec);
            break;
          }
          case 50: {
            behavioralProperties_.AddEntriesFrom(input, _repeated_behavioralProperties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BehaviorGroup : pb::IMessage<BehaviorGroup> {
    private static readonly pb::MessageParser<BehaviorGroup> _parser = new pb::MessageParser<BehaviorGroup>(() => new BehaviorGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup(BehaviorGroup other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      behaviorSymbols_ = other.behaviorSymbols_.Clone();
      memberBehaviorArtifacts_ = other.memberBehaviorArtifacts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup Clone() {
      return new BehaviorGroup(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "behavior_symbols" field.</summary>
    public const int BehaviorSymbolsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Artifact.ArtifactSymbol> _repeated_behaviorSymbols_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Model.Artifact.ArtifactSymbol.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Artifact.ArtifactSymbol> behaviorSymbols_ = new pbc::RepeatedField<global::TTI.TTF.Model.Artifact.ArtifactSymbol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Artifact.ArtifactSymbol> BehaviorSymbols {
      get { return behaviorSymbols_; }
    }

    /// <summary>Field number for the "member_behavior_artifacts" field.</summary>
    public const int MemberBehaviorArtifactsFieldNumber = 3;
    private static readonly pbc::MapField<string, global::TTI.TTF.Model.Artifact.Artifact>.Codec _map_memberBehaviorArtifacts_codec
        = new pbc::MapField<string, global::TTI.TTF.Model.Artifact.Artifact>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::TTI.TTF.Model.Artifact.Artifact.Parser), 26);
    private readonly pbc::MapField<string, global::TTI.TTF.Model.Artifact.Artifact> memberBehaviorArtifacts_ = new pbc::MapField<string, global::TTI.TTF.Model.Artifact.Artifact>();
    /// <summary>
    ///if retrieved this can be populated with the behaviors nested in the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::TTI.TTF.Model.Artifact.Artifact> MemberBehaviorArtifacts {
      get { return memberBehaviorArtifacts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!behaviorSymbols_.Equals(other.behaviorSymbols_)) return false;
      if (!MemberBehaviorArtifacts.Equals(other.MemberBehaviorArtifacts)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= behaviorSymbols_.GetHashCode();
      hash ^= MemberBehaviorArtifacts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      behaviorSymbols_.WriteTo(output, _repeated_behaviorSymbols_codec);
      memberBehaviorArtifacts_.WriteTo(output, _map_memberBehaviorArtifacts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += behaviorSymbols_.CalculateSize(_repeated_behaviorSymbols_codec);
      size += memberBehaviorArtifacts_.CalculateSize(_map_memberBehaviorArtifacts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorGroup other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      behaviorSymbols_.Add(other.behaviorSymbols_);
      memberBehaviorArtifacts_.Add(other.memberBehaviorArtifacts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            behaviorSymbols_.AddEntriesFrom(input, _repeated_behaviorSymbols_codec);
            break;
          }
          case 26: {
            memberBehaviorArtifacts_.AddEntriesFrom(input, _map_memberBehaviorArtifacts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertySet : pb::IMessage<PropertySet> {
    private static readonly pb::MessageParser<PropertySet> _parser = new pb::MessageParser<PropertySet>(() => new PropertySet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet(PropertySet other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet Clone() {
      return new PropertySet(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.Property> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.Property> properties_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.Property>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.Property> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySet other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Property : pb::IMessage<Property> {
    private static readonly pb::MessageParser<Property> _parser = new pb::MessageParser<Property>(() => new Property());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Property> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property(Property other) : this() {
      name_ = other.name_;
      valueDescription_ = other.valueDescription_;
      propertyInvocations_ = other.propertyInvocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property Clone() {
      return new Property(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_description" field.</summary>
    public const int ValueDescriptionFieldNumber = 2;
    private string valueDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueDescription {
      get { return valueDescription_; }
      set {
        valueDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "property_invocations" field.</summary>
    public const int PropertyInvocationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.Invocation> _repeated_propertyInvocations_codec
        = pb::FieldCodec.ForMessage(26, global::TTI.TTF.Model.Core.Invocation.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.Invocation> propertyInvocations_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.Invocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.Invocation> PropertyInvocations {
      get { return propertyInvocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Property);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Property other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ValueDescription != other.ValueDescription) return false;
      if(!propertyInvocations_.Equals(other.propertyInvocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueDescription.Length != 0) hash ^= ValueDescription.GetHashCode();
      hash ^= propertyInvocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValueDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueDescription);
      }
      propertyInvocations_.WriteTo(output, _repeated_propertyInvocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueDescription);
      }
      size += propertyInvocations_.CalculateSize(_repeated_propertyInvocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Property other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueDescription.Length != 0) {
        ValueDescription = other.ValueDescription;
      }
      propertyInvocations_.Add(other.propertyInvocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValueDescription = input.ReadString();
            break;
          }
          case 26: {
            propertyInvocations_.AddEntriesFrom(input, _repeated_propertyInvocations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenTemplate : pb::IMessage<TokenTemplate> {
    private static readonly pb::MessageParser<TokenTemplate> _parser = new pb::MessageParser<TokenTemplate>(() => new TokenTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate(TokenTemplate other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      base_ = other.base_ != null ? other.base_.Clone() : null;
      behaviors_ = other.behaviors_.Clone();
      behaviorGroups_ = other.behaviorGroups_.Clone();
      propertySets_ = other.propertySets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate Clone() {
      return new TokenTemplate(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 2;
    private global::TTI.TTF.Model.Core.Base base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Core.Base Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.Behavior> _repeated_behaviors_codec
        = pb::FieldCodec.ForMessage(26, global::TTI.TTF.Model.Core.Behavior.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.Behavior> behaviors_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.Behavior>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.Behavior> Behaviors {
      get { return behaviors_; }
    }

    /// <summary>Field number for the "behavior_groups" field.</summary>
    public const int BehaviorGroupsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.BehaviorGroup> _repeated_behaviorGroups_codec
        = pb::FieldCodec.ForMessage(34, global::TTI.TTF.Model.Core.BehaviorGroup.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.BehaviorGroup> behaviorGroups_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.BehaviorGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.BehaviorGroup> BehaviorGroups {
      get { return behaviorGroups_; }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.PropertySet> _repeated_propertySets_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Model.Core.PropertySet.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.PropertySet> propertySets_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.PropertySet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.PropertySet> PropertySets {
      get { return propertySets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (!object.Equals(Base, other.Base)) return false;
      if(!behaviors_.Equals(other.behaviors_)) return false;
      if(!behaviorGroups_.Equals(other.behaviorGroups_)) return false;
      if(!propertySets_.Equals(other.propertySets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (base_ != null) hash ^= Base.GetHashCode();
      hash ^= behaviors_.GetHashCode();
      hash ^= behaviorGroups_.GetHashCode();
      hash ^= propertySets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (base_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Base);
      }
      behaviors_.WriteTo(output, _repeated_behaviors_codec);
      behaviorGroups_.WriteTo(output, _repeated_behaviorGroups_codec);
      propertySets_.WriteTo(output, _repeated_propertySets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      size += behaviors_.CalculateSize(_repeated_behaviors_codec);
      size += behaviorGroups_.CalculateSize(_repeated_behaviorGroups_codec);
      size += propertySets_.CalculateSize(_repeated_propertySets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenTemplate other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::TTI.TTF.Model.Core.Base();
        }
        Base.MergeFrom(other.Base);
      }
      behaviors_.Add(other.behaviors_);
      behaviorGroups_.Add(other.behaviorGroups_);
      propertySets_.Add(other.propertySets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            if (base_ == null) {
              Base = new global::TTI.TTF.Model.Core.Base();
            }
            input.ReadMessage(Base);
            break;
          }
          case 26: {
            behaviors_.AddEntriesFrom(input, _repeated_behaviors_codec);
            break;
          }
          case 34: {
            behaviorGroups_.AddEntriesFrom(input, _repeated_behaviorGroups_codec);
            break;
          }
          case 42: {
            propertySets_.AddEntriesFrom(input, _repeated_propertySets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Invocation : pb::IMessage<Invocation> {
    private static readonly pb::MessageParser<Invocation> _parser = new pb::MessageParser<Invocation>(() => new Invocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Invocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation(Invocation other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation Clone() {
      return new Invocation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///property name if a property-set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    ///include the data type for the value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 3;
    private global::TTI.TTF.Model.Core.InvocationRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Core.InvocationRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 4;
    private global::TTI.TTF.Model.Core.InvocationResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Core.InvocationResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Invocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Invocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (request_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Invocation other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::TTI.TTF.Model.Core.InvocationRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::TTI.TTF.Model.Core.InvocationResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (request_ == null) {
              Request = new global::TTI.TTF.Model.Core.InvocationRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 34: {
            if (response_ == null) {
              Response = new global::TTI.TTF.Model.Core.InvocationResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvocationRequest : pb::IMessage<InvocationRequest> {
    private static readonly pb::MessageParser<InvocationRequest> _parser = new pb::MessageParser<InvocationRequest>(() => new InvocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest(InvocationRequest other) : this() {
      controlMessageName_ = other.controlMessageName_;
      inputParameters_ = other.inputParameters_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest Clone() {
      return new InvocationRequest(this);
    }

    /// <summary>Field number for the "control_message_name" field.</summary>
    public const int ControlMessageNameFieldNumber = 1;
    private string controlMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlMessageName {
      get { return controlMessageName_; }
      set {
        controlMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_parameters" field.</summary>
    public const int InputParametersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.InvocationParameter> _repeated_inputParameters_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Model.Core.InvocationParameter.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.InvocationParameter> inputParameters_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.InvocationParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.InvocationParameter> InputParameters {
      get { return inputParameters_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlMessageName != other.ControlMessageName) return false;
      if(!inputParameters_.Equals(other.inputParameters_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlMessageName.Length != 0) hash ^= ControlMessageName.GetHashCode();
      hash ^= inputParameters_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ControlMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlMessageName);
      }
      inputParameters_.WriteTo(output, _repeated_inputParameters_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlMessageName);
      }
      size += inputParameters_.CalculateSize(_repeated_inputParameters_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ControlMessageName.Length != 0) {
        ControlMessageName = other.ControlMessageName;
      }
      inputParameters_.Add(other.inputParameters_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlMessageName = input.ReadString();
            break;
          }
          case 18: {
            inputParameters_.AddEntriesFrom(input, _repeated_inputParameters_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvocationResponse : pb::IMessage<InvocationResponse> {
    private static readonly pb::MessageParser<InvocationResponse> _parser = new pb::MessageParser<InvocationResponse>(() => new InvocationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse(InvocationResponse other) : this() {
      controlMessageName_ = other.controlMessageName_;
      outputParameters_ = other.outputParameters_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse Clone() {
      return new InvocationResponse(this);
    }

    /// <summary>Field number for the "control_message_name" field.</summary>
    public const int ControlMessageNameFieldNumber = 1;
    private string controlMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlMessageName {
      get { return controlMessageName_; }
      set {
        controlMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "output_parameters" field.</summary>
    public const int OutputParametersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Core.InvocationParameter> _repeated_outputParameters_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Model.Core.InvocationParameter.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Core.InvocationParameter> outputParameters_ = new pbc::RepeatedField<global::TTI.TTF.Model.Core.InvocationParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Core.InvocationParameter> OutputParameters {
      get { return outputParameters_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlMessageName != other.ControlMessageName) return false;
      if(!outputParameters_.Equals(other.outputParameters_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlMessageName.Length != 0) hash ^= ControlMessageName.GetHashCode();
      hash ^= outputParameters_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ControlMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlMessageName);
      }
      outputParameters_.WriteTo(output, _repeated_outputParameters_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlMessageName);
      }
      size += outputParameters_.CalculateSize(_repeated_outputParameters_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationResponse other) {
      if (other == null) {
        return;
      }
      if (other.ControlMessageName.Length != 0) {
        ControlMessageName = other.ControlMessageName;
      }
      outputParameters_.Add(other.outputParameters_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlMessageName = input.ReadString();
            break;
          }
          case 18: {
            outputParameters_.AddEntriesFrom(input, _repeated_outputParameters_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvocationParameter : pb::IMessage<InvocationParameter> {
    private static readonly pb::MessageParser<InvocationParameter> _parser = new pb::MessageParser<InvocationParameter>(() => new InvocationParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Core.CoreReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter(InvocationParameter other) : this() {
      name_ = other.name_;
      valueDescription_ = other.valueDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter Clone() {
      return new InvocationParameter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_description" field.</summary>
    public const int ValueDescriptionFieldNumber = 2;
    private string valueDescription_ = "";
    /// <summary>
    ///describe the data type and restrictions like length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueDescription {
      get { return valueDescription_; }
      set {
        valueDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ValueDescription != other.ValueDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueDescription.Length != 0) hash ^= ValueDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValueDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationParameter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueDescription.Length != 0) {
        ValueDescription = other.ValueDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValueDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
