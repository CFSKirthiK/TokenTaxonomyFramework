// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: taxonomyservice.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TTI.TTF.Taxonomy {

  /// <summary>Holder for reflection information generated from taxonomyservice.proto</summary>
  public static partial class TaxonomyserviceReflection {

    #region Descriptor
    /// <summary>File descriptor for taxonomyservice.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TaxonomyserviceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV0YXhvbm9teXNlcnZpY2UucHJvdG8SEHRheG9ub215LnNlcnZpY2UaDnRh",
            "eG9ub215LnByb3RvGgpjb3JlLnByb3RvGg5hcnRpZmFjdC5wcm90byIiCg9U",
            "YXhvbm9teVZlcnNpb24SDwoHdmVyc2lvbhgBIAEoCSIhCgZTeW1ib2wSFwoP",
            "YXJ0aWZhY3Rfc3ltYm9sGAEgASgJIiIKD1RheG9ub215Rm9ybXVsYRIPCgdm",
            "b3JtdWxhGAEgASgJMvEGCg9UYXhvbm9teVNlcnZpY2USUAoPR2V0RnVsbFRh",
            "eG9ub215EiEudGF4b25vbXkuc2VydmljZS5UYXhvbm9teVZlcnNpb24aGC50",
            "YXhvbm9teS5tb2RlbC5UYXhvbm9teSIAEkgKD0dldEJhc2VBcnRpZmFjdBIY",
            "LnRheG9ub215LnNlcnZpY2UuU3ltYm9sGhkudGF4b25vbXkubW9kZWwuY29y",
            "ZS5CYXNlIgASUAoTR2V0QmVoYXZpb3JBcnRpZmFjdBIYLnRheG9ub215LnNl",
            "cnZpY2UuU3ltYm9sGh0udGF4b25vbXkubW9kZWwuY29yZS5CZWhhdmlvciIA",
            "EloKGEdldEJlaGF2aW9yR3JvdXBBcnRpZmFjdBIYLnRheG9ub215LnNlcnZp",
            "Y2UuU3ltYm9sGiIudGF4b25vbXkubW9kZWwuY29yZS5CZWhhdmlvckdyb3Vw",
            "IgASVgoWR2V0UHJvcGVydHlTZXRBcnRpZmFjdBIYLnRheG9ub215LnNlcnZp",
            "Y2UuU3ltYm9sGiAudGF4b25vbXkubW9kZWwuY29yZS5Qcm9wZXJ0eVNldCIA",
            "EmMKGEdldFRva2VuVGVtcGxhdGVBcnRpZmFjdBIhLnRheG9ub215LnNlcnZp",
            "Y2UuVGF4b25vbXlGb3JtdWxhGiIudGF4b25vbXkubW9kZWwuY29yZS5Ub2tl",
            "blRlbXBsYXRlIgASbQoOQ3JlYXRlQXJ0aWZhY3QSKy50YXhvbm9teS5tb2Rl",
            "bC5hcnRpZmFjdC5OZXdBcnRpZmFjdFJlcXVlc3QaLC50YXhvbm9teS5tb2Rl",
            "bC5hcnRpZmFjdC5OZXdBcnRpZmFjdFJlc3BvbnNlIgAScwoOVXBkYXRlQXJ0",
            "aWZhY3QSLi50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5VcGRhdGVBcnRpZmFj",
            "dFJlcXVlc3QaLy50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5VcGRhdGVBcnRp",
            "ZmFjdFJlc3BvbnNlIgAScwoORGVsZXRlQXJ0aWZhY3QSLi50YXhvbm9teS5t",
            "b2RlbC5hcnRpZmFjdC5EZWxldGVBcnRpZmFjdFJlcXVlc3QaLy50YXhvbm9t",
            "eS5tb2RlbC5hcnRpZmFjdC5EZWxldGVBcnRpZmFjdFJlc3BvbnNlIgBCKwoU",
            "b3JnLnR0aS50dGYudGF4b25vbXlQAaoCEFRUSS5UVEYuVGF4b25vbXliBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TTI.TTF.Taxonomy.Model.TaxonomyReflection.Descriptor, global::TTI.TTF.Model.Core.CoreReflection.Descriptor, global::TTI.TTF.Model.Artifact.ArtifactReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.TaxonomyVersion), global::TTI.TTF.Taxonomy.TaxonomyVersion.Parser, new[]{ "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Symbol), global::TTI.TTF.Taxonomy.Symbol.Parser, new[]{ "ArtifactSymbol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.TaxonomyFormula), global::TTI.TTF.Taxonomy.TaxonomyFormula.Parser, new[]{ "Formula" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TaxonomyVersion : pb::IMessage<TaxonomyVersion> {
    private static readonly pb::MessageParser<TaxonomyVersion> _parser = new pb::MessageParser<TaxonomyVersion>(() => new TaxonomyVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxonomyVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.TaxonomyserviceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxonomyVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxonomyVersion(TaxonomyVersion other) : this() {
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxonomyVersion Clone() {
      return new TaxonomyVersion(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxonomyVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxonomyVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxonomyVersion other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Symbol : pb::IMessage<Symbol> {
    private static readonly pb::MessageParser<Symbol> _parser = new pb::MessageParser<Symbol>(() => new Symbol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Symbol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.TaxonomyserviceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Symbol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Symbol(Symbol other) : this() {
      artifactSymbol_ = other.artifactSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Symbol Clone() {
      return new Symbol(this);
    }

    /// <summary>Field number for the "artifact_symbol" field.</summary>
    public const int ArtifactSymbolFieldNumber = 1;
    private string artifactSymbol_ = "";
    /// <summary>
    ///should always be the tooling symbol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ArtifactSymbol {
      get { return artifactSymbol_; }
      set {
        artifactSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Symbol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Symbol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArtifactSymbol != other.ArtifactSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArtifactSymbol.Length != 0) hash ^= ArtifactSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ArtifactSymbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ArtifactSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArtifactSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ArtifactSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Symbol other) {
      if (other == null) {
        return;
      }
      if (other.ArtifactSymbol.Length != 0) {
        ArtifactSymbol = other.ArtifactSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ArtifactSymbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaxonomyFormula : pb::IMessage<TaxonomyFormula> {
    private static readonly pb::MessageParser<TaxonomyFormula> _parser = new pb::MessageParser<TaxonomyFormula>(() => new TaxonomyFormula());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaxonomyFormula> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.TaxonomyserviceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxonomyFormula() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxonomyFormula(TaxonomyFormula other) : this() {
      formula_ = other.formula_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaxonomyFormula Clone() {
      return new TaxonomyFormula(this);
    }

    /// <summary>Field number for the "formula" field.</summary>
    public const int FormulaFieldNumber = 1;
    private string formula_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Formula {
      get { return formula_; }
      set {
        formula_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaxonomyFormula);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaxonomyFormula other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Formula != other.Formula) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Formula.Length != 0) hash ^= Formula.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Formula.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Formula);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Formula.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Formula);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaxonomyFormula other) {
      if (other == null) {
        return;
      }
      if (other.Formula.Length != 0) {
        Formula = other.Formula;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Formula = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
