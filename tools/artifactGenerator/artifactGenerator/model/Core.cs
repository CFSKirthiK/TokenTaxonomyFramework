// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: core.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TTF.Tokens.Model.Core {

  /// <summary>Holder for reflection information generated from core.proto</summary>
  public static partial class CoreReflection {

    #region Descriptor
    /// <summary>File descriptor for core.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgpjb3JlLnByb3RvEhN0YXhvbm9teS5tb2RlbC5jb3JlGhlnb29nbGUvcHJv",
            "dG9idWYvYW55LnByb3RvGg5hcnRpZmFjdC5wcm90byKOAgoEQmFzZRIzCghh",
            "cnRpZmFjdBgBIAEoCzIhLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlm",
            "YWN0EgwKBG5hbWUYAiABKAkSDgoGc3ltYm9sGAMgASgJEg0KBW93bmVyGAQg",
            "ASgJEhAKCHF1YW50aXR5GAUgASgMEhAKCGRlY2ltYWxzGAYgASgFEkgKEHRv",
            "a2VuX3Byb3BlcnRpZXMYByADKAsyLi50YXhvbm9teS5tb2RlbC5jb3JlLkJh",
            "c2UuVG9rZW5Qcm9wZXJ0aWVzRW50cnkaNgoUVG9rZW5Qcm9wZXJ0aWVzRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLEAQoIQmVoYXZp",
            "b3ISMwoIYXJ0aWZhY3QYASABKAsyIS50YXhvbm9teS5tb2RlbC5hcnRpZmFj",
            "dC5BcnRpZmFjdBIQCghleHRlcm5hbBgCIAEoCBIyChRiZWhhdmlvcl9jb25z",
            "dHJ1Y3RvchgDIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSPQoUYmVoYXZp",
            "b3JfaW52b2NhdGlvbnMYBCADKAsyHy50YXhvbm9teS5tb2RlbC5jb3JlLklu",
            "dm9jYXRpb24inQEKDUJlaGF2aW9yR3JvdXASMwoIYXJ0aWZhY3QYASABKAsy",
            "IS50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdBIYChBiZWhhdmlv",
            "cl9zeW1ib2xzGAIgAygJEj0KEmJlaGF2aW9yX2FydGlmYWN0cxgDIAMoCzIh",
            "LnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0IoEBCgtQcm9wZXJ0",
            "eVNldBIzCghhcnRpZmFjdBgBIAEoCzIhLnRheG9ub215Lm1vZGVsLmFydGlm",
            "YWN0LkFydGlmYWN0Ej0KFHByb3BlcnR5X2ludm9jYXRpb25zGAIgAygLMh8u",
            "dGF4b25vbXkubW9kZWwuY29yZS5JbnZvY2F0aW9uIr4CCg1Ub2tlblRlbXBs",
            "YXRlEjMKCGFydGlmYWN0GAEgASgLMiEudGF4b25vbXkubW9kZWwuYXJ0aWZh",
            "Y3QuQXJ0aWZhY3QSJwoEdHlwZRgCIAEoDjIZLnRheG9ub215Lm1vZGVsLmNv",
            "cmUuVHlwZRInCgRiYXNlGAMgASgLMhkudGF4b25vbXkubW9kZWwuY29yZS5C",
            "YXNlEjAKCWJlaGF2aW9ycxgEIAMoCzIdLnRheG9ub215Lm1vZGVsLmNvcmUu",
            "QmVoYXZpb3ISOwoPYmVoYXZpb3JfZ3JvdXBzGAUgAygLMiIudGF4b25vbXku",
            "bW9kZWwuY29yZS5CZWhhdmlvckdyb3VwEjcKDXByb3BlcnR5X3NldHMYBiAD",
            "KAsyIC50YXhvbm9teS5tb2RlbC5jb3JlLlByb3BlcnR5U2V0IqMBCgpJbnZv",
            "Y2F0aW9uEgwKBG5hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSNwoH",
            "cmVxdWVzdBgDIAEoCzImLnRheG9ub215Lm1vZGVsLmNvcmUuSW52b2NhdGlv",
            "blJlcXVlc3QSOQoIcmVzcG9uc2UYBCABKAsyJy50YXhvbm9teS5tb2RlbC5j",
            "b3JlLkludm9jYXRpb25SZXNwb25zZSKKAQoRSW52b2NhdGlvblJlcXVlc3QS",
            "HAoUY29udHJvbF9tZXNzYWdlX25hbWUYASABKAkSQgoQaW5wdXRfcGFyYW1l",
            "dGVycxgCIAMoCzIoLnRheG9ub215Lm1vZGVsLmNvcmUuSW52b2NhdGlvblBh",
            "cmFtZXRlchITCgtkZXNjcmlwdGlvbhgDIAEoCSKMAQoSSW52b2NhdGlvblJl",
            "c3BvbnNlEhwKFGNvbnRyb2xfbWVzc2FnZV9uYW1lGAEgASgJEkMKEW91dHB1",
            "dF9wYXJhbWV0ZXJzGAIgAygLMigudGF4b25vbXkubW9kZWwuY29yZS5JbnZv",
            "Y2F0aW9uUGFyYW1ldGVyEhMKC2Rlc2NyaXB0aW9uGAMgASgJIj4KE0ludm9j",
            "YXRpb25QYXJhbWV0ZXISDAoEbmFtZRgBIAEoCRIZChF2YWx1ZV9kZXNjcmlw",
            "dGlvbhgCIAEoCSpeCgRUeXBlEgwKCEZVTkdJQkxFEAASEAoMTk9OX0ZVTkdJ",
            "QkxFEAESGAoUSFlCUklEX0ZVTkdJQkxFX1JPT1QQAhIcChhIWUJSSURfTk9O",
            "X0ZVTkdJQkxFX1JPT1QQA0I1ChlvcmcudHRpLnRva2Vucy5tb2RlbC5jb3Jl",
            "UAGqAhVUVEYuVG9rZW5zLk1vZGVsLkNvcmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::TTF.Tokens.Model.Artifact.ArtifactReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TTF.Tokens.Model.Core.Type), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.Base), global::TTF.Tokens.Model.Core.Base.Parser, new[]{ "Artifact", "Name", "Symbol", "Owner", "Quantity", "Decimals", "TokenProperties" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.Behavior), global::TTF.Tokens.Model.Core.Behavior.Parser, new[]{ "Artifact", "External", "BehaviorConstructor", "BehaviorInvocations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.BehaviorGroup), global::TTF.Tokens.Model.Core.BehaviorGroup.Parser, new[]{ "Artifact", "BehaviorSymbols", "BehaviorArtifacts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.PropertySet), global::TTF.Tokens.Model.Core.PropertySet.Parser, new[]{ "Artifact", "PropertyInvocations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.TokenTemplate), global::TTF.Tokens.Model.Core.TokenTemplate.Parser, new[]{ "Artifact", "Type", "Base", "Behaviors", "BehaviorGroups", "PropertySets" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.Invocation), global::TTF.Tokens.Model.Core.Invocation.Parser, new[]{ "Name", "Description", "Request", "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.InvocationRequest), global::TTF.Tokens.Model.Core.InvocationRequest.Parser, new[]{ "ControlMessageName", "InputParameters", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.InvocationResponse), global::TTF.Tokens.Model.Core.InvocationResponse.Parser, new[]{ "ControlMessageName", "OutputParameters", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTF.Tokens.Model.Core.InvocationParameter), global::TTF.Tokens.Model.Core.InvocationParameter.Parser, new[]{ "Name", "ValueDescription" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Type {
    [pbr::OriginalName("FUNGIBLE")] Fungible = 0,
    [pbr::OriginalName("NON_FUNGIBLE")] NonFungible = 1,
    [pbr::OriginalName("HYBRID_FUNGIBLE_ROOT")] HybridFungibleRoot = 2,
    [pbr::OriginalName("HYBRID_NON_FUNGIBLE_ROOT")] HybridNonFungibleRoot = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  ///all tokens inherit from the base and implicitly support construction.
  /// </summary>
  public sealed partial class Base : pb::IMessage<Base> {
    private static readonly pb::MessageParser<Base> _parser = new pb::MessageParser<Base>(() => new Base());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Base> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base(Base other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      name_ = other.name_;
      symbol_ = other.symbol_;
      owner_ = other.owner_;
      quantity_ = other.quantity_;
      decimals_ = other.decimals_;
      tokenProperties_ = other.tokenProperties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base Clone() {
      return new Base(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTF.Tokens.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 3;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 4;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 5;
    private pb::ByteString quantity_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Quantity {
      get { return quantity_; }
      set {
        quantity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 6;
    private int decimals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "token_properties" field.</summary>
    public const int TokenPropertiesFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_tokenProperties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 58);
    private readonly pbc::MapField<string, string> tokenProperties_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> TokenProperties {
      get { return tokenProperties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Base);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Base other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (Name != other.Name) return false;
      if (Symbol != other.Symbol) return false;
      if (Owner != other.Owner) return false;
      if (Quantity != other.Quantity) return false;
      if (Decimals != other.Decimals) return false;
      if (!TokenProperties.Equals(other.TokenProperties)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (Quantity.Length != 0) hash ^= Quantity.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      hash ^= TokenProperties.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Symbol);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Owner);
      }
      if (Quantity.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Quantity);
      }
      if (Decimals != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Decimals);
      }
      tokenProperties_.WriteTo(output, _map_tokenProperties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (Quantity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Quantity);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      size += tokenProperties_.CalculateSize(_map_tokenProperties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Base other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.Quantity.Length != 0) {
        Quantity = other.Quantity;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      tokenProperties_.Add(other.tokenProperties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Symbol = input.ReadString();
            break;
          }
          case 34: {
            Owner = input.ReadString();
            break;
          }
          case 42: {
            Quantity = input.ReadBytes();
            break;
          }
          case 48: {
            Decimals = input.ReadInt32();
            break;
          }
          case 58: {
            tokenProperties_.AddEntriesFrom(input, _map_tokenProperties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Behavior : pb::IMessage<Behavior> {
    private static readonly pb::MessageParser<Behavior> _parser = new pb::MessageParser<Behavior>(() => new Behavior());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Behavior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior(Behavior other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      external_ = other.external_;
      behaviorConstructor_ = other.behaviorConstructor_ != null ? other.behaviorConstructor_.Clone() : null;
      behaviorInvocations_ = other.behaviorInvocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior Clone() {
      return new Behavior(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTF.Tokens.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "external" field.</summary>
    public const int ExternalFieldNumber = 2;
    private bool external_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool External {
      get { return external_; }
      set {
        external_ = value;
      }
    }

    /// <summary>Field number for the "behavior_constructor" field.</summary>
    public const int BehaviorConstructorFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any behaviorConstructor_;
    /// <summary>
    ///optional for behaviors like Role Support that needs input when setting up the roles when the token class is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any BehaviorConstructor {
      get { return behaviorConstructor_; }
      set {
        behaviorConstructor_ = value;
      }
    }

    /// <summary>Field number for the "behavior_invocations" field.</summary>
    public const int BehaviorInvocationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Core.Invocation> _repeated_behaviorInvocations_codec
        = pb::FieldCodec.ForMessage(34, global::TTF.Tokens.Model.Core.Invocation.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Core.Invocation> behaviorInvocations_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Core.Invocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Core.Invocation> BehaviorInvocations {
      get { return behaviorInvocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Behavior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Behavior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (External != other.External) return false;
      if (!object.Equals(BehaviorConstructor, other.BehaviorConstructor)) return false;
      if(!behaviorInvocations_.Equals(other.behaviorInvocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (External != false) hash ^= External.GetHashCode();
      if (behaviorConstructor_ != null) hash ^= BehaviorConstructor.GetHashCode();
      hash ^= behaviorInvocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (External != false) {
        output.WriteRawTag(16);
        output.WriteBool(External);
      }
      if (behaviorConstructor_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BehaviorConstructor);
      }
      behaviorInvocations_.WriteTo(output, _repeated_behaviorInvocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (External != false) {
        size += 1 + 1;
      }
      if (behaviorConstructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BehaviorConstructor);
      }
      size += behaviorInvocations_.CalculateSize(_repeated_behaviorInvocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Behavior other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.External != false) {
        External = other.External;
      }
      if (other.behaviorConstructor_ != null) {
        if (behaviorConstructor_ == null) {
          BehaviorConstructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        BehaviorConstructor.MergeFrom(other.BehaviorConstructor);
      }
      behaviorInvocations_.Add(other.behaviorInvocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            External = input.ReadBool();
            break;
          }
          case 26: {
            if (behaviorConstructor_ == null) {
              BehaviorConstructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(BehaviorConstructor);
            break;
          }
          case 34: {
            behaviorInvocations_.AddEntriesFrom(input, _repeated_behaviorInvocations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BehaviorGroup : pb::IMessage<BehaviorGroup> {
    private static readonly pb::MessageParser<BehaviorGroup> _parser = new pb::MessageParser<BehaviorGroup>(() => new BehaviorGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup(BehaviorGroup other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      behaviorSymbols_ = other.behaviorSymbols_.Clone();
      behaviorArtifacts_ = other.behaviorArtifacts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup Clone() {
      return new BehaviorGroup(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTF.Tokens.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "behavior_symbols" field.</summary>
    public const int BehaviorSymbolsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_behaviorSymbols_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> behaviorSymbols_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BehaviorSymbols {
      get { return behaviorSymbols_; }
    }

    /// <summary>Field number for the "behavior_artifacts" field.</summary>
    public const int BehaviorArtifactsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Artifact.Artifact> _repeated_behaviorArtifacts_codec
        = pb::FieldCodec.ForMessage(26, global::TTF.Tokens.Model.Artifact.Artifact.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Artifact.Artifact> behaviorArtifacts_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Artifact.Artifact>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Artifact.Artifact> BehaviorArtifacts {
      get { return behaviorArtifacts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!behaviorSymbols_.Equals(other.behaviorSymbols_)) return false;
      if(!behaviorArtifacts_.Equals(other.behaviorArtifacts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= behaviorSymbols_.GetHashCode();
      hash ^= behaviorArtifacts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      behaviorSymbols_.WriteTo(output, _repeated_behaviorSymbols_codec);
      behaviorArtifacts_.WriteTo(output, _repeated_behaviorArtifacts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += behaviorSymbols_.CalculateSize(_repeated_behaviorSymbols_codec);
      size += behaviorArtifacts_.CalculateSize(_repeated_behaviorArtifacts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorGroup other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      behaviorSymbols_.Add(other.behaviorSymbols_);
      behaviorArtifacts_.Add(other.behaviorArtifacts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            behaviorSymbols_.AddEntriesFrom(input, _repeated_behaviorSymbols_codec);
            break;
          }
          case 26: {
            behaviorArtifacts_.AddEntriesFrom(input, _repeated_behaviorArtifacts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertySet : pb::IMessage<PropertySet> {
    private static readonly pb::MessageParser<PropertySet> _parser = new pb::MessageParser<PropertySet>(() => new PropertySet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet(PropertySet other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      propertyInvocations_ = other.propertyInvocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet Clone() {
      return new PropertySet(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTF.Tokens.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "property_invocations" field.</summary>
    public const int PropertyInvocationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Core.Invocation> _repeated_propertyInvocations_codec
        = pb::FieldCodec.ForMessage(18, global::TTF.Tokens.Model.Core.Invocation.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Core.Invocation> propertyInvocations_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Core.Invocation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Core.Invocation> PropertyInvocations {
      get { return propertyInvocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!propertyInvocations_.Equals(other.propertyInvocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= propertyInvocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      propertyInvocations_.WriteTo(output, _repeated_propertyInvocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += propertyInvocations_.CalculateSize(_repeated_propertyInvocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySet other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      propertyInvocations_.Add(other.propertyInvocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            propertyInvocations_.AddEntriesFrom(input, _repeated_propertyInvocations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenTemplate : pb::IMessage<TokenTemplate> {
    private static readonly pb::MessageParser<TokenTemplate> _parser = new pb::MessageParser<TokenTemplate>(() => new TokenTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate(TokenTemplate other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      type_ = other.type_;
      base_ = other.base_ != null ? other.base_.Clone() : null;
      behaviors_ = other.behaviors_.Clone();
      behaviorGroups_ = other.behaviorGroups_.Clone();
      propertySets_ = other.propertySets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate Clone() {
      return new TokenTemplate(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTF.Tokens.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::TTF.Tokens.Model.Core.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Core.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 3;
    private global::TTF.Tokens.Model.Core.Base base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Core.Base Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Core.Behavior> _repeated_behaviors_codec
        = pb::FieldCodec.ForMessage(34, global::TTF.Tokens.Model.Core.Behavior.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Core.Behavior> behaviors_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Core.Behavior>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Core.Behavior> Behaviors {
      get { return behaviors_; }
    }

    /// <summary>Field number for the "behavior_groups" field.</summary>
    public const int BehaviorGroupsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Core.BehaviorGroup> _repeated_behaviorGroups_codec
        = pb::FieldCodec.ForMessage(42, global::TTF.Tokens.Model.Core.BehaviorGroup.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Core.BehaviorGroup> behaviorGroups_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Core.BehaviorGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Core.BehaviorGroup> BehaviorGroups {
      get { return behaviorGroups_; }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Core.PropertySet> _repeated_propertySets_codec
        = pb::FieldCodec.ForMessage(50, global::TTF.Tokens.Model.Core.PropertySet.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Core.PropertySet> propertySets_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Core.PropertySet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Core.PropertySet> PropertySets {
      get { return propertySets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(Base, other.Base)) return false;
      if(!behaviors_.Equals(other.behaviors_)) return false;
      if(!behaviorGroups_.Equals(other.behaviorGroups_)) return false;
      if(!propertySets_.Equals(other.propertySets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (base_ != null) hash ^= Base.GetHashCode();
      hash ^= behaviors_.GetHashCode();
      hash ^= behaviorGroups_.GetHashCode();
      hash ^= propertySets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (base_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Base);
      }
      behaviors_.WriteTo(output, _repeated_behaviors_codec);
      behaviorGroups_.WriteTo(output, _repeated_behaviorGroups_codec);
      propertySets_.WriteTo(output, _repeated_propertySets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      size += behaviors_.CalculateSize(_repeated_behaviors_codec);
      size += behaviorGroups_.CalculateSize(_repeated_behaviorGroups_codec);
      size += propertySets_.CalculateSize(_repeated_propertySets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenTemplate other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::TTF.Tokens.Model.Core.Base();
        }
        Base.MergeFrom(other.Base);
      }
      behaviors_.Add(other.behaviors_);
      behaviorGroups_.Add(other.behaviorGroups_);
      propertySets_.Add(other.propertySets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTF.Tokens.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            Type = (global::TTF.Tokens.Model.Core.Type) input.ReadEnum();
            break;
          }
          case 26: {
            if (base_ == null) {
              Base = new global::TTF.Tokens.Model.Core.Base();
            }
            input.ReadMessage(Base);
            break;
          }
          case 34: {
            behaviors_.AddEntriesFrom(input, _repeated_behaviors_codec);
            break;
          }
          case 42: {
            behaviorGroups_.AddEntriesFrom(input, _repeated_behaviorGroups_codec);
            break;
          }
          case 50: {
            propertySets_.AddEntriesFrom(input, _repeated_propertySets_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Invocation : pb::IMessage<Invocation> {
    private static readonly pb::MessageParser<Invocation> _parser = new pb::MessageParser<Invocation>(() => new Invocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Invocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation(Invocation other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation Clone() {
      return new Invocation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 3;
    private global::TTF.Tokens.Model.Core.InvocationRequest request_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Core.InvocationRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 4;
    private global::TTF.Tokens.Model.Core.InvocationResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTF.Tokens.Model.Core.InvocationResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Invocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Invocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (request_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Invocation other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::TTF.Tokens.Model.Core.InvocationRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::TTF.Tokens.Model.Core.InvocationResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            if (request_ == null) {
              Request = new global::TTF.Tokens.Model.Core.InvocationRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 34: {
            if (response_ == null) {
              Response = new global::TTF.Tokens.Model.Core.InvocationResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvocationRequest : pb::IMessage<InvocationRequest> {
    private static readonly pb::MessageParser<InvocationRequest> _parser = new pb::MessageParser<InvocationRequest>(() => new InvocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest(InvocationRequest other) : this() {
      controlMessageName_ = other.controlMessageName_;
      inputParameters_ = other.inputParameters_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest Clone() {
      return new InvocationRequest(this);
    }

    /// <summary>Field number for the "control_message_name" field.</summary>
    public const int ControlMessageNameFieldNumber = 1;
    private string controlMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlMessageName {
      get { return controlMessageName_; }
      set {
        controlMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_parameters" field.</summary>
    public const int InputParametersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Core.InvocationParameter> _repeated_inputParameters_codec
        = pb::FieldCodec.ForMessage(18, global::TTF.Tokens.Model.Core.InvocationParameter.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Core.InvocationParameter> inputParameters_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Core.InvocationParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Core.InvocationParameter> InputParameters {
      get { return inputParameters_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlMessageName != other.ControlMessageName) return false;
      if(!inputParameters_.Equals(other.inputParameters_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlMessageName.Length != 0) hash ^= ControlMessageName.GetHashCode();
      hash ^= inputParameters_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ControlMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlMessageName);
      }
      inputParameters_.WriteTo(output, _repeated_inputParameters_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlMessageName);
      }
      size += inputParameters_.CalculateSize(_repeated_inputParameters_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ControlMessageName.Length != 0) {
        ControlMessageName = other.ControlMessageName;
      }
      inputParameters_.Add(other.inputParameters_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlMessageName = input.ReadString();
            break;
          }
          case 18: {
            inputParameters_.AddEntriesFrom(input, _repeated_inputParameters_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvocationResponse : pb::IMessage<InvocationResponse> {
    private static readonly pb::MessageParser<InvocationResponse> _parser = new pb::MessageParser<InvocationResponse>(() => new InvocationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse(InvocationResponse other) : this() {
      controlMessageName_ = other.controlMessageName_;
      outputParameters_ = other.outputParameters_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse Clone() {
      return new InvocationResponse(this);
    }

    /// <summary>Field number for the "control_message_name" field.</summary>
    public const int ControlMessageNameFieldNumber = 1;
    private string controlMessageName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlMessageName {
      get { return controlMessageName_; }
      set {
        controlMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "output_parameters" field.</summary>
    public const int OutputParametersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTF.Tokens.Model.Core.InvocationParameter> _repeated_outputParameters_codec
        = pb::FieldCodec.ForMessage(18, global::TTF.Tokens.Model.Core.InvocationParameter.Parser);
    private readonly pbc::RepeatedField<global::TTF.Tokens.Model.Core.InvocationParameter> outputParameters_ = new pbc::RepeatedField<global::TTF.Tokens.Model.Core.InvocationParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTF.Tokens.Model.Core.InvocationParameter> OutputParameters {
      get { return outputParameters_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlMessageName != other.ControlMessageName) return false;
      if(!outputParameters_.Equals(other.outputParameters_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlMessageName.Length != 0) hash ^= ControlMessageName.GetHashCode();
      hash ^= outputParameters_.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ControlMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlMessageName);
      }
      outputParameters_.WriteTo(output, _repeated_outputParameters_codec);
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlMessageName);
      }
      size += outputParameters_.CalculateSize(_repeated_outputParameters_codec);
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationResponse other) {
      if (other == null) {
        return;
      }
      if (other.ControlMessageName.Length != 0) {
        ControlMessageName = other.ControlMessageName;
      }
      outputParameters_.Add(other.outputParameters_);
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlMessageName = input.ReadString();
            break;
          }
          case 18: {
            outputParameters_.AddEntriesFrom(input, _repeated_outputParameters_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InvocationParameter : pb::IMessage<InvocationParameter> {
    private static readonly pb::MessageParser<InvocationParameter> _parser = new pb::MessageParser<InvocationParameter>(() => new InvocationParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTF.Tokens.Model.Core.CoreReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter(InvocationParameter other) : this() {
      name_ = other.name_;
      valueDescription_ = other.valueDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter Clone() {
      return new InvocationParameter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_description" field.</summary>
    public const int ValueDescriptionFieldNumber = 2;
    private string valueDescription_ = "";
    /// <summary>
    ///describe the data type and restrictions like length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueDescription {
      get { return valueDescription_; }
      set {
        valueDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ValueDescription != other.ValueDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueDescription.Length != 0) hash ^= ValueDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValueDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationParameter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueDescription.Length != 0) {
        ValueDescription = other.ValueDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValueDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
