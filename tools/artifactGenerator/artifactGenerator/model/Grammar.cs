// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: grammar.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TTI.TTF.Model.Grammar {

  /// <summary>Holder for reflection information generated from grammar.proto</summary>
  public static partial class GrammarReflection {

    #region Descriptor
    /// <summary>File descriptor for grammar.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GrammarReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1ncmFtbWFyLnByb3RvEhZ0YXhvbm9teS5tb2RlbC5ncmFtbWFyIuIBCg5G",
            "b3JtdWxhR3JhbW1hchI5CgxzaW5nbGVfdG9rZW4YASABKAsyIy50YXhvbm9t",
            "eS5tb2RlbC5ncmFtbWFyLlNpbmdsZVRva2VuEjoKBmh5YnJpZBgCIAEoCzIq",
            "LnRheG9ub215Lm1vZGVsLmdyYW1tYXIuSHlicmlkVG9rZW5Gb3JtdWxhElkK",
            "E2h5YnJpZF93aXRoX2h5YnJpZHMYAyABKAsyPC50YXhvbm9teS5tb2RlbC5n",
            "cmFtbWFyLkh5YnJpZFRva2VuV2l0aEh5YnJpZENoaWxkcmVuRm9ybXVsYSKy",
            "AQoSSHlicmlkVG9rZW5Gb3JtdWxhEjMKBnBhcmVudBgBIAEoCzIjLnRheG9u",
            "b215Lm1vZGVsLmdyYW1tYXIuU2luZ2xlVG9rZW4SFgoOY2hpbGRyZW5fc3Rh",
            "cnQYAiABKAkSOQoMY2hpbGRfdG9rZW5zGAMgAygLMiMudGF4b25vbXkubW9k",
            "ZWwuZ3JhbW1hci5TaW5nbGVUb2tlbhIUCgxjaGlsZHJlbl9lbmQYBCABKAki",
            "4AEKJEh5YnJpZFRva2VuV2l0aEh5YnJpZENoaWxkcmVuRm9ybXVsYRIzCgZw",
            "YXJlbnQYASABKAsyIy50YXhvbm9teS5tb2RlbC5ncmFtbWFyLlNpbmdsZVRv",
            "a2VuEh0KFWh5YnJpZF9jaGlsZHJlbl9zdGFydBgCIAEoCRJHChNoeWJyaWRf",
            "Y2hpbGRfdG9rZW5zGAMgAygLMioudGF4b25vbXkubW9kZWwuZ3JhbW1hci5I",
            "eWJyaWRUb2tlbkZvcm11bGESGwoTaHlicmlkX2NoaWxkcmVuX2VuZBgEIAEo",
            "CSLpAQoLU2luZ2xlVG9rZW4SEwoLZ3JvdXBfc3RhcnQYASABKAkSNQoKYmFz",
            "ZV90b2tlbhgCIAEoCzIhLnRheG9ub215Lm1vZGVsLmdyYW1tYXIuVG9rZW5C",
            "YXNlEjcKCWJlaGF2aW9ycxgDIAEoCzIkLnRheG9ub215Lm1vZGVsLmdyYW1t",
            "YXIuQmVoYXZpb3JMaXN0EkIKDXByb3BlcnR5X3NldHMYBCADKAsyKy50YXhv",
            "bm9teS5tb2RlbC5ncmFtbWFyLlByb3BlcnR5U2V0TGlzdEl0ZW0SEQoJZ3Jv",
            "dXBfZW5kGAUgASgJIiAKCVRva2VuQmFzZRITCgtiYXNlX3N5bWJvbBgBIAEo",
            "CSJNCgxCZWhhdmlvckxpc3QSEgoKbGlzdF9zdGFydBgBIAEoCRIXCg9iZWhh",
            "dmlvcl9zeW1ib2wYAiADKAkSEAoIbGlzdF9lbmQYAyABKAkiRgoTUHJvcGVy",
            "dHlTZXRMaXN0SXRlbRISCgpsaXN0X3N0YXJ0GAEgASgJEhsKE3Byb3BlcnR5",
            "X3NldF9zeW1ib2wYAiABKAlCNQoZb3JnLnR0aS50dGYubW9kZWwuZ3JhbW1h",
            "clABqgIVVFRJLlRURi5Nb2RlbC5HcmFtbWFyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Grammar.FormulaGrammar), global::TTI.TTF.Model.Grammar.FormulaGrammar.Parser, new[]{ "SingleToken", "Hybrid", "HybridWithHybrids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Grammar.HybridTokenFormula), global::TTI.TTF.Model.Grammar.HybridTokenFormula.Parser, new[]{ "Parent", "ChildrenStart", "ChildTokens", "ChildrenEnd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula), global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula.Parser, new[]{ "Parent", "HybridChildrenStart", "HybridChildTokens", "HybridChildrenEnd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Grammar.SingleToken), global::TTI.TTF.Model.Grammar.SingleToken.Parser, new[]{ "GroupStart", "BaseToken", "Behaviors", "PropertySets", "GroupEnd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Grammar.TokenBase), global::TTI.TTF.Model.Grammar.TokenBase.Parser, new[]{ "BaseSymbol" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Grammar.BehaviorList), global::TTI.TTF.Model.Grammar.BehaviorList.Parser, new[]{ "ListStart", "BehaviorSymbol", "ListEnd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Model.Grammar.PropertySetListItem), global::TTI.TTF.Model.Grammar.PropertySetListItem.Parser, new[]{ "ListStart", "PropertySetSymbol" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FormulaGrammar : pb::IMessage<FormulaGrammar> {
    private static readonly pb::MessageParser<FormulaGrammar> _parser = new pb::MessageParser<FormulaGrammar>(() => new FormulaGrammar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FormulaGrammar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormulaGrammar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormulaGrammar(FormulaGrammar other) : this() {
      singleToken_ = other.singleToken_ != null ? other.singleToken_.Clone() : null;
      hybrid_ = other.hybrid_ != null ? other.hybrid_.Clone() : null;
      hybridWithHybrids_ = other.hybridWithHybrids_ != null ? other.hybridWithHybrids_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FormulaGrammar Clone() {
      return new FormulaGrammar(this);
    }

    /// <summary>Field number for the "single_token" field.</summary>
    public const int SingleTokenFieldNumber = 1;
    private global::TTI.TTF.Model.Grammar.SingleToken singleToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.SingleToken SingleToken {
      get { return singleToken_; }
      set {
        singleToken_ = value;
      }
    }

    /// <summary>Field number for the "hybrid" field.</summary>
    public const int HybridFieldNumber = 2;
    private global::TTI.TTF.Model.Grammar.HybridTokenFormula hybrid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.HybridTokenFormula Hybrid {
      get { return hybrid_; }
      set {
        hybrid_ = value;
      }
    }

    /// <summary>Field number for the "hybrid_with_hybrids" field.</summary>
    public const int HybridWithHybridsFieldNumber = 3;
    private global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula hybridWithHybrids_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula HybridWithHybrids {
      get { return hybridWithHybrids_; }
      set {
        hybridWithHybrids_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FormulaGrammar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FormulaGrammar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SingleToken, other.SingleToken)) return false;
      if (!object.Equals(Hybrid, other.Hybrid)) return false;
      if (!object.Equals(HybridWithHybrids, other.HybridWithHybrids)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (singleToken_ != null) hash ^= SingleToken.GetHashCode();
      if (hybrid_ != null) hash ^= Hybrid.GetHashCode();
      if (hybridWithHybrids_ != null) hash ^= HybridWithHybrids.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (singleToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SingleToken);
      }
      if (hybrid_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Hybrid);
      }
      if (hybridWithHybrids_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HybridWithHybrids);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (singleToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SingleToken);
      }
      if (hybrid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hybrid);
      }
      if (hybridWithHybrids_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HybridWithHybrids);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FormulaGrammar other) {
      if (other == null) {
        return;
      }
      if (other.singleToken_ != null) {
        if (singleToken_ == null) {
          SingleToken = new global::TTI.TTF.Model.Grammar.SingleToken();
        }
        SingleToken.MergeFrom(other.SingleToken);
      }
      if (other.hybrid_ != null) {
        if (hybrid_ == null) {
          Hybrid = new global::TTI.TTF.Model.Grammar.HybridTokenFormula();
        }
        Hybrid.MergeFrom(other.Hybrid);
      }
      if (other.hybridWithHybrids_ != null) {
        if (hybridWithHybrids_ == null) {
          HybridWithHybrids = new global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula();
        }
        HybridWithHybrids.MergeFrom(other.HybridWithHybrids);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (singleToken_ == null) {
              SingleToken = new global::TTI.TTF.Model.Grammar.SingleToken();
            }
            input.ReadMessage(SingleToken);
            break;
          }
          case 18: {
            if (hybrid_ == null) {
              Hybrid = new global::TTI.TTF.Model.Grammar.HybridTokenFormula();
            }
            input.ReadMessage(Hybrid);
            break;
          }
          case 26: {
            if (hybridWithHybrids_ == null) {
              HybridWithHybrids = new global::TTI.TTF.Model.Grammar.HybridTokenWithHybridChildrenFormula();
            }
            input.ReadMessage(HybridWithHybrids);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HybridTokenFormula : pb::IMessage<HybridTokenFormula> {
    private static readonly pb::MessageParser<HybridTokenFormula> _parser = new pb::MessageParser<HybridTokenFormula>(() => new HybridTokenFormula());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridTokenFormula> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenFormula() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenFormula(HybridTokenFormula other) : this() {
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      childrenStart_ = other.childrenStart_;
      childTokens_ = other.childTokens_.Clone();
      childrenEnd_ = other.childrenEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenFormula Clone() {
      return new HybridTokenFormula(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private global::TTI.TTF.Model.Grammar.SingleToken parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.SingleToken Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "children_start" field.</summary>
    public const int ChildrenStartFieldNumber = 2;
    private string childrenStart_ = "";
    /// <summary>
    /// "("
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildrenStart {
      get { return childrenStart_; }
      set {
        childrenStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "child_tokens" field.</summary>
    public const int ChildTokensFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Grammar.SingleToken> _repeated_childTokens_codec
        = pb::FieldCodec.ForMessage(26, global::TTI.TTF.Model.Grammar.SingleToken.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Grammar.SingleToken> childTokens_ = new pbc::RepeatedField<global::TTI.TTF.Model.Grammar.SingleToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Grammar.SingleToken> ChildTokens {
      get { return childTokens_; }
    }

    /// <summary>Field number for the "children_end" field.</summary>
    public const int ChildrenEndFieldNumber = 4;
    private string childrenEnd_ = "";
    /// <summary>
    /// ")"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChildrenEnd {
      get { return childrenEnd_; }
      set {
        childrenEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridTokenFormula);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridTokenFormula other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Parent, other.Parent)) return false;
      if (ChildrenStart != other.ChildrenStart) return false;
      if(!childTokens_.Equals(other.childTokens_)) return false;
      if (ChildrenEnd != other.ChildrenEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (ChildrenStart.Length != 0) hash ^= ChildrenStart.GetHashCode();
      hash ^= childTokens_.GetHashCode();
      if (ChildrenEnd.Length != 0) hash ^= ChildrenEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (parent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Parent);
      }
      if (ChildrenStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChildrenStart);
      }
      childTokens_.WriteTo(output, _repeated_childTokens_codec);
      if (ChildrenEnd.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChildrenEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (parent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (ChildrenStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildrenStart);
      }
      size += childTokens_.CalculateSize(_repeated_childTokens_codec);
      if (ChildrenEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChildrenEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridTokenFormula other) {
      if (other == null) {
        return;
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          Parent = new global::TTI.TTF.Model.Grammar.SingleToken();
        }
        Parent.MergeFrom(other.Parent);
      }
      if (other.ChildrenStart.Length != 0) {
        ChildrenStart = other.ChildrenStart;
      }
      childTokens_.Add(other.childTokens_);
      if (other.ChildrenEnd.Length != 0) {
        ChildrenEnd = other.ChildrenEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (parent_ == null) {
              Parent = new global::TTI.TTF.Model.Grammar.SingleToken();
            }
            input.ReadMessage(Parent);
            break;
          }
          case 18: {
            ChildrenStart = input.ReadString();
            break;
          }
          case 26: {
            childTokens_.AddEntriesFrom(input, _repeated_childTokens_codec);
            break;
          }
          case 34: {
            ChildrenEnd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HybridTokenWithHybridChildrenFormula : pb::IMessage<HybridTokenWithHybridChildrenFormula> {
    private static readonly pb::MessageParser<HybridTokenWithHybridChildrenFormula> _parser = new pb::MessageParser<HybridTokenWithHybridChildrenFormula>(() => new HybridTokenWithHybridChildrenFormula());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HybridTokenWithHybridChildrenFormula> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenWithHybridChildrenFormula() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenWithHybridChildrenFormula(HybridTokenWithHybridChildrenFormula other) : this() {
      parent_ = other.parent_ != null ? other.parent_.Clone() : null;
      hybridChildrenStart_ = other.hybridChildrenStart_;
      hybridChildTokens_ = other.hybridChildTokens_.Clone();
      hybridChildrenEnd_ = other.hybridChildrenEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HybridTokenWithHybridChildrenFormula Clone() {
      return new HybridTokenWithHybridChildrenFormula(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private global::TTI.TTF.Model.Grammar.SingleToken parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.SingleToken Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "hybrid_children_start" field.</summary>
    public const int HybridChildrenStartFieldNumber = 2;
    private string hybridChildrenStart_ = "";
    /// <summary>
    /// "("
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HybridChildrenStart {
      get { return hybridChildrenStart_; }
      set {
        hybridChildrenStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hybrid_child_tokens" field.</summary>
    public const int HybridChildTokensFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Grammar.HybridTokenFormula> _repeated_hybridChildTokens_codec
        = pb::FieldCodec.ForMessage(26, global::TTI.TTF.Model.Grammar.HybridTokenFormula.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Grammar.HybridTokenFormula> hybridChildTokens_ = new pbc::RepeatedField<global::TTI.TTF.Model.Grammar.HybridTokenFormula>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Grammar.HybridTokenFormula> HybridChildTokens {
      get { return hybridChildTokens_; }
    }

    /// <summary>Field number for the "hybrid_children_end" field.</summary>
    public const int HybridChildrenEndFieldNumber = 4;
    private string hybridChildrenEnd_ = "";
    /// <summary>
    /// ")"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HybridChildrenEnd {
      get { return hybridChildrenEnd_; }
      set {
        hybridChildrenEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HybridTokenWithHybridChildrenFormula);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HybridTokenWithHybridChildrenFormula other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Parent, other.Parent)) return false;
      if (HybridChildrenStart != other.HybridChildrenStart) return false;
      if(!hybridChildTokens_.Equals(other.hybridChildTokens_)) return false;
      if (HybridChildrenEnd != other.HybridChildrenEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (parent_ != null) hash ^= Parent.GetHashCode();
      if (HybridChildrenStart.Length != 0) hash ^= HybridChildrenStart.GetHashCode();
      hash ^= hybridChildTokens_.GetHashCode();
      if (HybridChildrenEnd.Length != 0) hash ^= HybridChildrenEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (parent_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Parent);
      }
      if (HybridChildrenStart.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HybridChildrenStart);
      }
      hybridChildTokens_.WriteTo(output, _repeated_hybridChildTokens_codec);
      if (HybridChildrenEnd.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HybridChildrenEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (parent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
      }
      if (HybridChildrenStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HybridChildrenStart);
      }
      size += hybridChildTokens_.CalculateSize(_repeated_hybridChildTokens_codec);
      if (HybridChildrenEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HybridChildrenEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HybridTokenWithHybridChildrenFormula other) {
      if (other == null) {
        return;
      }
      if (other.parent_ != null) {
        if (parent_ == null) {
          Parent = new global::TTI.TTF.Model.Grammar.SingleToken();
        }
        Parent.MergeFrom(other.Parent);
      }
      if (other.HybridChildrenStart.Length != 0) {
        HybridChildrenStart = other.HybridChildrenStart;
      }
      hybridChildTokens_.Add(other.hybridChildTokens_);
      if (other.HybridChildrenEnd.Length != 0) {
        HybridChildrenEnd = other.HybridChildrenEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (parent_ == null) {
              Parent = new global::TTI.TTF.Model.Grammar.SingleToken();
            }
            input.ReadMessage(Parent);
            break;
          }
          case 18: {
            HybridChildrenStart = input.ReadString();
            break;
          }
          case 26: {
            hybridChildTokens_.AddEntriesFrom(input, _repeated_hybridChildTokens_codec);
            break;
          }
          case 34: {
            HybridChildrenEnd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///outermost grouping container for the formula for a whole template either a parent or hybrid child.
  /// </summary>
  public sealed partial class SingleToken : pb::IMessage<SingleToken> {
    private static readonly pb::MessageParser<SingleToken> _parser = new pb::MessageParser<SingleToken>(() => new SingleToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleToken(SingleToken other) : this() {
      groupStart_ = other.groupStart_;
      baseToken_ = other.baseToken_ != null ? other.baseToken_.Clone() : null;
      behaviors_ = other.behaviors_ != null ? other.behaviors_.Clone() : null;
      propertySets_ = other.propertySets_.Clone();
      groupEnd_ = other.groupEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleToken Clone() {
      return new SingleToken(this);
    }

    /// <summary>Field number for the "group_start" field.</summary>
    public const int GroupStartFieldNumber = 1;
    private string groupStart_ = "";
    /// <summary>
    /// "["
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupStart {
      get { return groupStart_; }
      set {
        groupStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_token" field.</summary>
    public const int BaseTokenFieldNumber = 2;
    private global::TTI.TTF.Model.Grammar.TokenBase baseToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.TokenBase BaseToken {
      get { return baseToken_; }
      set {
        baseToken_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 3;
    private global::TTI.TTF.Model.Grammar.BehaviorList behaviors_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Model.Grammar.BehaviorList Behaviors {
      get { return behaviors_; }
      set {
        behaviors_ = value;
      }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTI.TTF.Model.Grammar.PropertySetListItem> _repeated_propertySets_codec
        = pb::FieldCodec.ForMessage(34, global::TTI.TTF.Model.Grammar.PropertySetListItem.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Model.Grammar.PropertySetListItem> propertySets_ = new pbc::RepeatedField<global::TTI.TTF.Model.Grammar.PropertySetListItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Model.Grammar.PropertySetListItem> PropertySets {
      get { return propertySets_; }
    }

    /// <summary>Field number for the "group_end" field.</summary>
    public const int GroupEndFieldNumber = 5;
    private string groupEnd_ = "";
    /// <summary>
    /// "]"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupEnd {
      get { return groupEnd_; }
      set {
        groupEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupStart != other.GroupStart) return false;
      if (!object.Equals(BaseToken, other.BaseToken)) return false;
      if (!object.Equals(Behaviors, other.Behaviors)) return false;
      if(!propertySets_.Equals(other.propertySets_)) return false;
      if (GroupEnd != other.GroupEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupStart.Length != 0) hash ^= GroupStart.GetHashCode();
      if (baseToken_ != null) hash ^= BaseToken.GetHashCode();
      if (behaviors_ != null) hash ^= Behaviors.GetHashCode();
      hash ^= propertySets_.GetHashCode();
      if (GroupEnd.Length != 0) hash ^= GroupEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GroupStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GroupStart);
      }
      if (baseToken_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseToken);
      }
      if (behaviors_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Behaviors);
      }
      propertySets_.WriteTo(output, _repeated_propertySets_codec);
      if (GroupEnd.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GroupEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GroupStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupStart);
      }
      if (baseToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseToken);
      }
      if (behaviors_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Behaviors);
      }
      size += propertySets_.CalculateSize(_repeated_propertySets_codec);
      if (GroupEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleToken other) {
      if (other == null) {
        return;
      }
      if (other.GroupStart.Length != 0) {
        GroupStart = other.GroupStart;
      }
      if (other.baseToken_ != null) {
        if (baseToken_ == null) {
          BaseToken = new global::TTI.TTF.Model.Grammar.TokenBase();
        }
        BaseToken.MergeFrom(other.BaseToken);
      }
      if (other.behaviors_ != null) {
        if (behaviors_ == null) {
          Behaviors = new global::TTI.TTF.Model.Grammar.BehaviorList();
        }
        Behaviors.MergeFrom(other.Behaviors);
      }
      propertySets_.Add(other.propertySets_);
      if (other.GroupEnd.Length != 0) {
        GroupEnd = other.GroupEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GroupStart = input.ReadString();
            break;
          }
          case 18: {
            if (baseToken_ == null) {
              BaseToken = new global::TTI.TTF.Model.Grammar.TokenBase();
            }
            input.ReadMessage(BaseToken);
            break;
          }
          case 26: {
            if (behaviors_ == null) {
              Behaviors = new global::TTI.TTF.Model.Grammar.BehaviorList();
            }
            input.ReadMessage(Behaviors);
            break;
          }
          case 34: {
            propertySets_.AddEntriesFrom(input, _repeated_propertySets_codec);
            break;
          }
          case 42: {
            GroupEnd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenBase : pb::IMessage<TokenBase> {
    private static readonly pb::MessageParser<TokenBase> _parser = new pb::MessageParser<TokenBase>(() => new TokenBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBase(TokenBase other) : this() {
      baseSymbol_ = other.baseSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBase Clone() {
      return new TokenBase(this);
    }

    /// <summary>Field number for the "base_symbol" field.</summary>
    public const int BaseSymbolFieldNumber = 1;
    private string baseSymbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseSymbol {
      get { return baseSymbol_; }
      set {
        baseSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseSymbol != other.BaseSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseSymbol.Length != 0) hash ^= BaseSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BaseSymbol.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BaseSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BaseSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenBase other) {
      if (other == null) {
        return;
      }
      if (other.BaseSymbol.Length != 0) {
        BaseSymbol = other.BaseSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BaseSymbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BehaviorList : pb::IMessage<BehaviorList> {
    private static readonly pb::MessageParser<BehaviorList> _parser = new pb::MessageParser<BehaviorList>(() => new BehaviorList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorList(BehaviorList other) : this() {
      listStart_ = other.listStart_;
      behaviorSymbol_ = other.behaviorSymbol_.Clone();
      listEnd_ = other.listEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorList Clone() {
      return new BehaviorList(this);
    }

    /// <summary>Field number for the "list_start" field.</summary>
    public const int ListStartFieldNumber = 1;
    private string listStart_ = "";
    /// <summary>
    /// "{"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListStart {
      get { return listStart_; }
      set {
        listStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "behavior_symbol" field.</summary>
    public const int BehaviorSymbolFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_behaviorSymbol_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> behaviorSymbol_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// lowercase letters for individual behaviors, UPPERCASE for behaviorGroup
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BehaviorSymbol {
      get { return behaviorSymbol_; }
    }

    /// <summary>Field number for the "list_end" field.</summary>
    public const int ListEndFieldNumber = 3;
    private string listEnd_ = "";
    /// <summary>
    /// "}"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListEnd {
      get { return listEnd_; }
      set {
        listEnd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ListStart != other.ListStart) return false;
      if(!behaviorSymbol_.Equals(other.behaviorSymbol_)) return false;
      if (ListEnd != other.ListEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ListStart.Length != 0) hash ^= ListStart.GetHashCode();
      hash ^= behaviorSymbol_.GetHashCode();
      if (ListEnd.Length != 0) hash ^= ListEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ListStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListStart);
      }
      behaviorSymbol_.WriteTo(output, _repeated_behaviorSymbol_codec);
      if (ListEnd.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ListEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ListStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListStart);
      }
      size += behaviorSymbol_.CalculateSize(_repeated_behaviorSymbol_codec);
      if (ListEnd.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorList other) {
      if (other == null) {
        return;
      }
      if (other.ListStart.Length != 0) {
        ListStart = other.ListStart;
      }
      behaviorSymbol_.Add(other.behaviorSymbol_);
      if (other.ListEnd.Length != 0) {
        ListEnd = other.ListEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ListStart = input.ReadString();
            break;
          }
          case 18: {
            behaviorSymbol_.AddEntriesFrom(input, _repeated_behaviorSymbol_codec);
            break;
          }
          case 26: {
            ListEnd = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertySetListItem : pb::IMessage<PropertySetListItem> {
    private static readonly pb::MessageParser<PropertySetListItem> _parser = new pb::MessageParser<PropertySetListItem>(() => new PropertySetListItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySetListItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Model.Grammar.GrammarReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetListItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetListItem(PropertySetListItem other) : this() {
      listStart_ = other.listStart_;
      propertySetSymbol_ = other.propertySetSymbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetListItem Clone() {
      return new PropertySetListItem(this);
    }

    /// <summary>Field number for the "list_start" field.</summary>
    public const int ListStartFieldNumber = 1;
    private string listStart_ = "";
    /// <summary>
    /// "+"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListStart {
      get { return listStart_; }
      set {
        listStart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "property_set_symbol" field.</summary>
    public const int PropertySetSymbolFieldNumber = 2;
    private string propertySetSymbol_ = "";
    /// <summary>
    /// starts with ph followed by Camel case name or symbol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PropertySetSymbol {
      get { return propertySetSymbol_; }
      set {
        propertySetSymbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySetListItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySetListItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ListStart != other.ListStart) return false;
      if (PropertySetSymbol != other.PropertySetSymbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ListStart.Length != 0) hash ^= ListStart.GetHashCode();
      if (PropertySetSymbol.Length != 0) hash ^= PropertySetSymbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ListStart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ListStart);
      }
      if (PropertySetSymbol.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PropertySetSymbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ListStart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListStart);
      }
      if (PropertySetSymbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PropertySetSymbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySetListItem other) {
      if (other == null) {
        return;
      }
      if (other.ListStart.Length != 0) {
        ListStart = other.ListStart;
      }
      if (other.PropertySetSymbol.Length != 0) {
        PropertySetSymbol = other.PropertySetSymbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ListStart = input.ReadString();
            break;
          }
          case 18: {
            PropertySetSymbol = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
