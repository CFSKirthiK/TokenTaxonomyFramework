// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: core.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TTI.TTF.Taxonomy.Model.Core {

  /// <summary>Holder for reflection information generated from core.proto</summary>
  public static partial class CoreReflection {

    #region Descriptor
    /// <summary>File descriptor for core.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgpjb3JlLnByb3RvEhN0YXhvbm9teS5tb2RlbC5jb3JlGhlnb29nbGUvcHJv",
            "dG9idWYvYW55LnByb3RvGg5hcnRpZmFjdC5wcm90byLFBAoEQmFzZRIzCghh",
            "cnRpZmFjdBgBIAEoCzIhLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlm",
            "YWN0EjYKCnRva2VuX3R5cGUYAiABKA4yIi50YXhvbm9teS5tb2RlbC5hcnRp",
            "ZmFjdC5Ub2tlblR5cGUSNgoKdG9rZW5fdW5pdBgDIAEoDjIiLnRheG9ub215",
            "Lm1vZGVsLmFydGlmYWN0LlRva2VuVW5pdBJIChNyZXByZXNlbnRhdGlvbl90",
            "eXBlGAQgASgOMisudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuUmVwcmVzZW50",
            "YXRpb25UeXBlEjYKCnZhbHVlX3R5cGUYBSABKA4yIi50YXhvbm9teS5tb2Rl",
            "bC5hcnRpZmFjdC5WYWx1ZVR5cGUSDAoEbmFtZRgGIAEoCRIOCgZzeW1ib2wY",
            "ByABKAkSDQoFb3duZXIYCCABKAkSEAoIcXVhbnRpdHkYCSABKAMSEAoIZGVj",
            "aW1hbHMYCiABKAUSSAoQdG9rZW5fcHJvcGVydGllcxgLIAMoCzIuLnRheG9u",
            "b215Lm1vZGVsLmNvcmUuQmFzZS5Ub2tlblByb3BlcnRpZXNFbnRyeRIYChBj",
            "b25zdHJ1Y3Rvcl9uYW1lGAwgASgJEikKC2NvbnN0cnVjdG9yGA0gASgLMhQu",
            "Z29vZ2xlLnByb3RvYnVmLkFueRo2ChRUb2tlblByb3BlcnRpZXNFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIjAKBUJhc2VzEicKBGJh",
            "c2UYASADKAsyGS50YXhvbm9teS5tb2RlbC5jb3JlLkJhc2UipwMKDUJhc2VS",
            "ZWZlcmVuY2USPQoJcmVmZXJlbmNlGAEgASgLMioudGF4b25vbXkubW9kZWwu",
            "YXJ0aWZhY3QuQXJ0aWZhY3RSZWZlcmVuY2USNgoKdmFsdWVfdHlwZRgCIAEo",
            "DjIiLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LlZhbHVlVHlwZRIMCgRuYW1l",
            "GAMgASgJEg4KBnN5bWJvbBgEIAEoCRINCgVvd25lchgFIAEoCRIQCghxdWFu",
            "dGl0eRgGIAEoAxIQCghkZWNpbWFscxgHIAEoBRJRChB0b2tlbl9wcm9wZXJ0",
            "aWVzGAggAygLMjcudGF4b25vbXkubW9kZWwuY29yZS5CYXNlUmVmZXJlbmNl",
            "LlRva2VuUHJvcGVydGllc0VudHJ5EhgKEGNvbnN0cnVjdG9yX25hbWUYCSAB",
            "KAkSKQoLY29uc3RydWN0b3IYCiABKAsyFC5nb29nbGUucHJvdG9idWYuQW55",
            "GjYKFFRva2VuUHJvcGVydGllc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiggIKCEJlaGF2aW9yEjMKCGFydGlmYWN0GAEgASgLMiEu",
            "dGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3QSEwoLaXNfZXh0ZXJu",
            "YWwYAiABKAgSGAoQY29uc3RydWN0b3JfdHlwZRgDIAEoCRIpCgtjb25zdHJ1",
            "Y3RvchgEIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSNAoLaW52b2NhdGlv",
            "bnMYBSADKAsyHy50YXhvbm9teS5tb2RlbC5jb3JlLkludm9jYXRpb24SMQoK",
            "cHJvcGVydGllcxgGIAMoCzIdLnRheG9ub215Lm1vZGVsLmNvcmUuUHJvcGVy",
            "dHkiPAoJQmVoYXZpb3JzEi8KCGJlaGF2aW9yGAEgAygLMh0udGF4b25vbXku",
            "bW9kZWwuY29yZS5CZWhhdmlvciKVAwoRQmVoYXZpb3JSZWZlcmVuY2USPQoJ",
            "cmVmZXJlbmNlGAEgASgLMioudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0",
            "aWZhY3RSZWZlcmVuY2USEwoLaXNfZXh0ZXJuYWwYAiABKAgSGAoQY29uc3Ry",
            "dWN0b3JfdHlwZRgDIAEoCRIpCgtjb25zdHJ1Y3RvchgEIAEoCzIULmdvb2ds",
            "ZS5wcm90b2J1Zi5BbnkSOwoKYXBwbGllc190bxgFIAMoCzInLnRheG9ub215",
            "Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0U3ltYm9sEjQKC2ludm9jYXRpb25z",
            "GAYgAygLMh8udGF4b25vbXkubW9kZWwuY29yZS5JbnZvY2F0aW9uEkEKEmlu",
            "Zmx1ZW5jZV9iaW5kaW5ncxgHIAMoCzIlLnRheG9ub215Lm1vZGVsLmNvcmUu",
            "SW5mbHVlbmNlQmluZGluZxIxCgpwcm9wZXJ0aWVzGAggAygLMh0udGF4b25v",
            "bXkubW9kZWwuY29yZS5Qcm9wZXJ0eSKvAgoNQmVoYXZpb3JHcm91cBIzCghh",
            "cnRpZmFjdBgBIAEoCzIhLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlm",
            "YWN0EjkKCWJlaGF2aW9ycxgCIAMoCzImLnRheG9ub215Lm1vZGVsLmNvcmUu",
            "QmVoYXZpb3JSZWZlcmVuY2USVQoSYmVoYXZpb3JfYXJ0aWZhY3RzGAMgAygL",
            "MjkudGF4b25vbXkubW9kZWwuY29yZS5CZWhhdmlvckdyb3VwLkJlaGF2aW9y",
            "QXJ0aWZhY3RzRW50cnkaVwoWQmVoYXZpb3JBcnRpZmFjdHNFbnRyeRILCgNr",
            "ZXkYASABKAkSLAoFdmFsdWUYAiABKAsyHS50YXhvbm9teS5tb2RlbC5jb3Jl",
            "LkJlaGF2aW9yOgI4ASJMCg5CZWhhdmlvckdyb3VwcxI6Cg5iZWhhdmlvcl9n",
            "cm91cBgBIAMoCzIiLnRheG9ub215Lm1vZGVsLmNvcmUuQmVoYXZpb3JHcm91",
            "cCKbAQoWQmVoYXZpb3JHcm91cFJlZmVyZW5jZRI9CglyZWZlcmVuY2UYASAB",
            "KAsyKi50YXhvbm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdFJlZmVyZW5j",
            "ZRJCChJiZWhhdmlvcl9hcnRpZmFjdHMYAiADKAsyJi50YXhvbm9teS5tb2Rl",
            "bC5jb3JlLkJlaGF2aW9yUmVmZXJlbmNlInUKC1Byb3BlcnR5U2V0EjMKCGFy",
            "dGlmYWN0GAEgASgLMiEudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZh",
            "Y3QSMQoKcHJvcGVydGllcxgCIAMoCzIdLnRheG9ub215Lm1vZGVsLmNvcmUu",
            "UHJvcGVydHkiRgoMUHJvcGVydHlTZXRzEjYKDHByb3BlcnR5X3NldBgBIAMo",
            "CzIgLnRheG9ub215Lm1vZGVsLmNvcmUuUHJvcGVydHlTZXQiiAEKFFByb3Bl",
            "cnR5U2V0UmVmZXJlbmNlEj0KCXJlZmVyZW5jZRgBIAEoCzIqLnRheG9ub215",
            "Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0UmVmZXJlbmNlEjEKCnByb3BlcnRp",
            "ZXMYAiADKAsyHS50YXhvbm9teS5tb2RlbC5jb3JlLlByb3BlcnR5Ir0BCghQ",
            "cm9wZXJ0eRIMCgRuYW1lGAEgASgJEhkKEXZhbHVlX2Rlc2NyaXB0aW9uGAIg",
            "ASgJEhYKDnRlbXBsYXRlX3ZhbHVlGAMgASgJEj0KFHByb3BlcnR5X2ludm9j",
            "YXRpb25zGAQgAygLMh8udGF4b25vbXkubW9kZWwuY29yZS5JbnZvY2F0aW9u",
            "EjEKCnByb3BlcnRpZXMYBSADKAsyHS50YXhvbm9teS5tb2RlbC5jb3JlLlBy",
            "b3BlcnR5Iq8BCgpJbnZvY2F0aW9uEgoKAmlkGAEgASgJEgwKBG5hbWUYAiAB",
            "KAkSEwoLZGVzY3JpcHRpb24YAyABKAkSNwoHcmVxdWVzdBgEIAEoCzImLnRh",
            "eG9ub215Lm1vZGVsLmNvcmUuSW52b2NhdGlvblJlcXVlc3QSOQoIcmVzcG9u",
            "c2UYBSABKAsyJy50YXhvbm9teS5tb2RlbC5jb3JlLkludm9jYXRpb25SZXNw",
            "b25zZSKKAQoRSW52b2NhdGlvblJlcXVlc3QSHAoUY29udHJvbF9tZXNzYWdl",
            "X25hbWUYASABKAkSEwoLZGVzY3JpcHRpb24YAiABKAkSQgoQaW5wdXRfcGFy",
            "YW1ldGVycxgDIAMoCzIoLnRheG9ub215Lm1vZGVsLmNvcmUuSW52b2NhdGlv",
            "blBhcmFtZXRlciKMAQoSSW52b2NhdGlvblJlc3BvbnNlEhwKFGNvbnRyb2xf",
            "bWVzc2FnZV9uYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEkMKEW91",
            "dHB1dF9wYXJhbWV0ZXJzGAMgAygLMigudGF4b25vbXkubW9kZWwuY29yZS5J",
            "bnZvY2F0aW9uUGFyYW1ldGVyIj4KE0ludm9jYXRpb25QYXJhbWV0ZXISDAoE",
            "bmFtZRgBIAEoCRIZChF2YWx1ZV9kZXNjcmlwdGlvbhgCIAEoCSKDAQoNVG9r",
            "ZW5UZW1wbGF0ZRI1Cgdmb3JtdWxhGAEgASgLMiQudGF4b25vbXkubW9kZWwu",
            "Y29yZS5UZW1wbGF0ZUZvcm11bGESOwoKZGVmaW5pdGlvbhgCIAEoCzInLnRh",
            "eG9ub215Lm1vZGVsLmNvcmUuVGVtcGxhdGVEZWZpbml0aW9uIqoBCg5Ub2tl",
            "blRlbXBsYXRlcxJDCgh0ZW1wbGF0ZRgBIAMoCzIxLnRheG9ub215Lm1vZGVs",
            "LmNvcmUuVG9rZW5UZW1wbGF0ZXMuVGVtcGxhdGVFbnRyeRpTCg1UZW1wbGF0",
            "ZUVudHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnRheG9ub215",
            "Lm1vZGVsLmNvcmUuVG9rZW5UZW1wbGF0ZToCOAEitwMKD1RlbXBsYXRlRm9y",
            "bXVsYRIzCghhcnRpZmFjdBgBIAEoCzIhLnRheG9ub215Lm1vZGVsLmFydGlm",
            "YWN0LkFydGlmYWN0EjwKDXRlbXBsYXRlX3R5cGUYAiABKA4yJS50YXhvbm9t",
            "eS5tb2RlbC5hcnRpZmFjdC5UZW1wbGF0ZVR5cGUSNQoKdG9rZW5fYmFzZRgD",
            "IAEoCzIhLnRheG9ub215Lm1vZGVsLmNvcmUuVGVtcGxhdGVCYXNlEjgKCWJl",
            "aGF2aW9ycxgEIAMoCzIlLnRheG9ub215Lm1vZGVsLmNvcmUuVGVtcGxhdGVC",
            "ZWhhdmlvchJDCg9iZWhhdmlvcl9ncm91cHMYBSADKAsyKi50YXhvbm9teS5t",
            "b2RlbC5jb3JlLlRlbXBsYXRlQmVoYXZpb3JHcm91cBI/Cg1wcm9wZXJ0eV9z",
            "ZXRzGAYgAygLMigudGF4b25vbXkubW9kZWwuY29yZS5UZW1wbGF0ZVByb3Bl",
            "cnR5U2V0EjoKDGNoaWxkX3Rva2VucxgHIAMoCzIkLnRheG9ub215Lm1vZGVs",
            "LmNvcmUuVGVtcGxhdGVGb3JtdWxhIksKEFRlbXBsYXRlRm9ybXVsYXMSNwoJ",
            "dGVtcGxhdGVzGAEgAygLMiQudGF4b25vbXkubW9kZWwuY29yZS5UZW1wbGF0",
            "ZUZvcm11bGEiRQoMVGVtcGxhdGVCYXNlEjUKBGJhc2UYASABKAsyJy50YXhv",
            "bm9teS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdFN5bWJvbCJNChBUZW1wbGF0",
            "ZUJlaGF2aW9yEjkKCGJlaGF2aW9yGAEgASgLMicudGF4b25vbXkubW9kZWwu",
            "YXJ0aWZhY3QuQXJ0aWZhY3RTeW1ib2wiWAoVVGVtcGxhdGVCZWhhdmlvckdy",
            "b3VwEj8KDmJlaGF2aW9yX2dyb3VwGAEgASgLMicudGF4b25vbXkubW9kZWwu",
            "YXJ0aWZhY3QuQXJ0aWZhY3RTeW1ib2wiVAoTVGVtcGxhdGVQcm9wZXJ0eVNl",
            "dBI9Cgxwcm9wZXJ0eV9zZXQYASABKAsyJy50YXhvbm9teS5tb2RlbC5hcnRp",
            "ZmFjdC5BcnRpZmFjdFN5bWJvbCLKAwoSVGVtcGxhdGVEZWZpbml0aW9uEjMK",
            "CGFydGlmYWN0GAEgASgLMiEudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0",
            "aWZhY3QSRQoRZm9ybXVsYV9yZWZlcmVuY2UYAiABKAsyKi50YXhvbm9teS5t",
            "b2RlbC5hcnRpZmFjdC5BcnRpZmFjdFJlZmVyZW5jZRI2Cgp0b2tlbl9iYXNl",
            "GAMgASgLMiIudGF4b25vbXkubW9kZWwuY29yZS5CYXNlUmVmZXJlbmNlEjkK",
            "CWJlaGF2aW9ycxgEIAMoCzImLnRheG9ub215Lm1vZGVsLmNvcmUuQmVoYXZp",
            "b3JSZWZlcmVuY2USRAoPYmVoYXZpb3JfZ3JvdXBzGAUgAygLMisudGF4b25v",
            "bXkubW9kZWwuY29yZS5CZWhhdmlvckdyb3VwUmVmZXJlbmNlEkAKDXByb3Bl",
            "cnR5X3NldHMYBiADKAsyKS50YXhvbm9teS5tb2RlbC5jb3JlLlByb3BlcnR5",
            "U2V0UmVmZXJlbmNlEj0KDGNoaWxkX3Rva2VucxgHIAMoCzInLnRheG9ub215",
            "Lm1vZGVsLmNvcmUuVGVtcGxhdGVEZWZpbml0aW9uIlMKE1RlbXBsYXRlRGVm",
            "aW5pdGlvbnMSPAoLZGVmaW5pdGlvbnMYASADKAsyJy50YXhvbm9teS5tb2Rl",
            "bC5jb3JlLlRlbXBsYXRlRGVmaW5pdGlvbiKIAgoQSW5mbHVlbmNlQmluZGlu",
            "ZxIVCg1pbmZsdWVuY2VkX2lkGAEgASgJEiAKGGluZmx1ZW5jZWRfaW52b2Nh",
            "dGlvbl9pZBgCIAEoCRI6Cg5pbmZsdWVuY2VfdHlwZRgDIAEoDjIiLnRheG9u",
            "b215Lm1vZGVsLmNvcmUuSW5mbHVlbmNlVHlwZRI/ChZpbmZsdWVuY2luZ19p",
            "bnZvY2F0aW9uGAQgASgLMh8udGF4b25vbXkubW9kZWwuY29yZS5JbnZvY2F0",
            "aW9uEj4KFWluZmx1ZW5jZWRfaW52b2NhdGlvbhgFIAEoCzIfLnRheG9ub215",
            "Lm1vZGVsLmNvcmUuSW52b2NhdGlvbiLsAwoSVG9rZW5TcGVjaWZpY2F0aW9u",
            "EhoKEnNwZWNpZmljYXRpb25faGFzaBgBIAEoCRIzCghhcnRpZmFjdBgCIAEo",
            "CzIhLnRheG9ub215Lm1vZGVsLmFydGlmYWN0LkFydGlmYWN0EkgKFGRlZmlu",
            "aXRpb25fcmVmZXJlbmNlGAMgASgLMioudGF4b25vbXkubW9kZWwuYXJ0aWZh",
            "Y3QuQXJ0aWZhY3RSZWZlcmVuY2USLQoKdG9rZW5fYmFzZRgEIAEoCzIZLnRh",
            "eG9ub215Lm1vZGVsLmNvcmUuQmFzZRI9CgliZWhhdmlvcnMYBSADKAsyKi50",
            "YXhvbm9teS5tb2RlbC5jb3JlLkJlaGF2aW9yU3BlY2lmaWNhdGlvbhJICg9i",
            "ZWhhdmlvcl9ncm91cHMYBiADKAsyLy50YXhvbm9teS5tb2RlbC5jb3JlLkJl",
            "aGF2aW9yR3JvdXBTcGVjaWZpY2F0aW9uEkQKDXByb3BlcnR5X3NldHMYByAD",
            "KAsyLS50YXhvbm9teS5tb2RlbC5jb3JlLlByb3BlcnR5U2V0U3BlY2lmaWNh",
            "dGlvbhI9CgxjaGlsZF90b2tlbnMYCCADKAsyJy50YXhvbm9teS5tb2RlbC5j",
            "b3JlLlRva2VuU3BlY2lmaWNhdGlvbiKWAgoVQmVoYXZpb3JTcGVjaWZpY2F0",
            "aW9uEjMKCGFydGlmYWN0GAEgASgLMiEudGF4b25vbXkubW9kZWwuYXJ0aWZh",
            "Y3QuQXJ0aWZhY3QSEwoLaXNfZXh0ZXJuYWwYAiABKAgSGAoQY29uc3RydWN0",
            "b3JfdHlwZRgDIAEoCRIpCgtjb25zdHJ1Y3RvchgEIAEoCzIULmdvb2dsZS5w",
            "cm90b2J1Zi5BbnkSOwoLaW52b2NhdGlvbnMYBSADKAsyJi50YXhvbm9teS5t",
            "b2RlbC5jb3JlLkludm9jYXRpb25CaW5kaW5nEjEKCnByb3BlcnRpZXMYBiAD",
            "KAsyHS50YXhvbm9teS5tb2RlbC5jb3JlLlByb3BlcnR5Io8BChhQcm9wZXJ0",
            "eVNldFNwZWNpZmljYXRpb24SMwoIYXJ0aWZhY3QYASABKAsyIS50YXhvbm9t",
            "eS5tb2RlbC5hcnRpZmFjdC5BcnRpZmFjdBI+Cgpwcm9wZXJ0aWVzGAYgAygL",
            "MioudGF4b25vbXkubW9kZWwuY29yZS5Qcm9wZXJ0eVNwZWNpZmljYXRpb24i",
            "3gEKFVByb3BlcnR5U3BlY2lmaWNhdGlvbhIMCgRuYW1lGAEgASgJEhkKEXZh",
            "bHVlX2Rlc2NyaXB0aW9uGAIgASgJEhYKDnRlbXBsYXRlX3ZhbHVlGAMgASgJ",
            "EkQKFHByb3BlcnR5X2ludm9jYXRpb25zGAQgAygLMiYudGF4b25vbXkubW9k",
            "ZWwuY29yZS5JbnZvY2F0aW9uQmluZGluZxI+Cgpwcm9wZXJ0aWVzGAUgAygL",
            "MioudGF4b25vbXkubW9kZWwuY29yZS5Qcm9wZXJ0eVNwZWNpZmljYXRpb24i",
            "jQEKGkJlaGF2aW9yR3JvdXBTcGVjaWZpY2F0aW9uEjMKCGFydGlmYWN0GAEg",
            "ASgLMiEudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZhY3QSOgoJYmVo",
            "YXZpb3JzGAIgAygLMicudGF4b25vbXkubW9kZWwuYXJ0aWZhY3QuQXJ0aWZh",
            "Y3RTeW1ib2wi/gMKEUludm9jYXRpb25CaW5kaW5nEkMKCWluZmx1ZW5jZRgB",
            "IAEoCzIwLnRheG9ub215Lm1vZGVsLmNvcmUuSW52b2NhdGlvbkJpbmRpbmcu",
            "SW5mbHVlbmNlEk4KD2ludm9jYXRpb25fc3RlcBgCIAEoCzI1LnRheG9ub215",
            "Lm1vZGVsLmNvcmUuSW52b2NhdGlvbkJpbmRpbmcuSW52b2NhdGlvblN0ZXAa",
            "uwEKCUluZmx1ZW5jZRI6Cg5pbmZsdWVuY2VfdHlwZRgBIAEoDjIiLnRheG9u",
            "b215Lm1vZGVsLmNvcmUuSW5mbHVlbmNlVHlwZRIWCg5pbmZsdWVuY2luZ19p",
            "ZBgCIAEoCRIhChlpbmZsdWVuY2luZ19pbnZvY2F0aW9uX2lkGAMgASgJEhUK",
            "DWluZmx1ZW5jZWRfaWQYBCABKAkSIAoYaW5mbHVlbmNlZF9pbnZvY2F0aW9u",
            "X2lkGAUgASgJGpUBCg5JbnZvY2F0aW9uU3RlcBIzCgppbnZvY2F0aW9uGAEg",
            "ASgLMh8udGF4b25vbXkubW9kZWwuY29yZS5JbnZvY2F0aW9uEk4KD25leHRf",
            "aW52b2NhdGlvbhgCIAEoCzI1LnRheG9ub215Lm1vZGVsLmNvcmUuSW52b2Nh",
            "dGlvbkJpbmRpbmcuSW52b2NhdGlvblN0ZXAiaAoJVG9rZW5CYXNlEicKBGJh",
            "c2UYASABKAsyGS50YXhvbm9teS5tb2RlbC5jb3JlLkJhc2USMgoGdmFsdWVz",
            "GAIgASgLMiIudGF4b25vbXkubW9kZWwuY29yZS5CYXNlUmVmZXJlbmNlIngK",
            "DVRva2VuQmVoYXZpb3ISLwoIYmVoYXZpb3IYASABKAsyHS50YXhvbm9teS5t",
            "b2RlbC5jb3JlLkJlaGF2aW9yEjYKBnZhbHVlcxgCIAEoCzImLnRheG9ub215",
            "Lm1vZGVsLmNvcmUuQmVoYXZpb3JSZWZlcmVuY2UihwEKElRva2VuQmVoYXZp",
            "b3JHcm91cBI0CghiZWhhdmlvchgBIAEoCzIiLnRheG9ub215Lm1vZGVsLmNv",
            "cmUuQmVoYXZpb3JHcm91cBI7CgZ2YWx1ZXMYAiABKAsyKy50YXhvbm9teS5t",
            "b2RlbC5jb3JlLkJlaGF2aW9yR3JvdXBSZWZlcmVuY2UihQEKEFRva2VuUHJv",
            "cGVydHlTZXQSNgoMcHJvcGVydHlfc2V0GAEgASgLMiAudGF4b25vbXkubW9k",
            "ZWwuY29yZS5Qcm9wZXJ0eVNldBI5CgZ2YWx1ZXMYAiABKAsyKS50YXhvbm9t",
            "eS5tb2RlbC5jb3JlLlByb3BlcnR5U2V0UmVmZXJlbmNlKiwKDUluZmx1ZW5j",
            "ZVR5cGUSDQoJSU5URVJDRVBUEAASDAoIT1ZFUlJJREUQAUJBCh9vcmcudHRp",
            "LnR0Zi50YXhvbm9teS5tb2RlbC5jb3JlUAGqAhtUVEkuVFRGLlRheG9ub215",
            "Lk1vZGVsLkNvcmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::TTI.TTF.Taxonomy.Model.Core.InfluenceType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.Base), global::TTI.TTF.Taxonomy.Model.Core.Base.Parser, new[]{ "Artifact", "TokenType", "TokenUnit", "RepresentationType", "ValueType", "Name", "Symbol", "Owner", "Quantity", "Decimals", "TokenProperties", "ConstructorName", "Constructor" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.Bases), global::TTI.TTF.Taxonomy.Model.Core.Bases.Parser, new[]{ "Base" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.BaseReference), global::TTI.TTF.Taxonomy.Model.Core.BaseReference.Parser, new[]{ "Reference", "ValueType", "Name", "Symbol", "Owner", "Quantity", "Decimals", "TokenProperties", "ConstructorName", "Constructor" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.Behavior), global::TTI.TTF.Taxonomy.Model.Core.Behavior.Parser, new[]{ "Artifact", "IsExternal", "ConstructorType", "Constructor", "Invocations", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.Behaviors), global::TTI.TTF.Taxonomy.Model.Core.Behaviors.Parser, new[]{ "Behavior" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference), global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference.Parser, new[]{ "Reference", "IsExternal", "ConstructorType", "Constructor", "AppliesTo", "Invocations", "InfluenceBindings", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup), global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup.Parser, new[]{ "Artifact", "Behaviors", "BehaviorArtifacts" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroups), global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroups.Parser, new[]{ "BehaviorGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference), global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference.Parser, new[]{ "Reference", "BehaviorArtifacts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.PropertySet), global::TTI.TTF.Taxonomy.Model.Core.PropertySet.Parser, new[]{ "Artifact", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.PropertySets), global::TTI.TTF.Taxonomy.Model.Core.PropertySets.Parser, new[]{ "PropertySet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference), global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference.Parser, new[]{ "Reference", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.Property), global::TTI.TTF.Taxonomy.Model.Core.Property.Parser, new[]{ "Name", "ValueDescription", "TemplateValue", "PropertyInvocations", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.Invocation), global::TTI.TTF.Taxonomy.Model.Core.Invocation.Parser, new[]{ "Id", "Name", "Description", "Request", "Response" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.InvocationRequest), global::TTI.TTF.Taxonomy.Model.Core.InvocationRequest.Parser, new[]{ "ControlMessageName", "Description", "InputParameters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.InvocationResponse), global::TTI.TTF.Taxonomy.Model.Core.InvocationResponse.Parser, new[]{ "ControlMessageName", "Description", "OutputParameters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter), global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter.Parser, new[]{ "Name", "ValueDescription" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate), global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate.Parser, new[]{ "Formula", "Definition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TokenTemplates), global::TTI.TTF.Taxonomy.Model.Core.TokenTemplates.Parser, new[]{ "Template" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula), global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula.Parser, new[]{ "Artifact", "TemplateType", "TokenBase", "Behaviors", "BehaviorGroups", "PropertySets", "ChildTokens" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplateFormulas), global::TTI.TTF.Taxonomy.Model.Core.TemplateFormulas.Parser, new[]{ "Templates" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplateBase), global::TTI.TTF.Taxonomy.Model.Core.TemplateBase.Parser, new[]{ "Base" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplateBehavior), global::TTI.TTF.Taxonomy.Model.Core.TemplateBehavior.Parser, new[]{ "Behavior" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplateBehaviorGroup), global::TTI.TTF.Taxonomy.Model.Core.TemplateBehaviorGroup.Parser, new[]{ "BehaviorGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplatePropertySet), global::TTI.TTF.Taxonomy.Model.Core.TemplatePropertySet.Parser, new[]{ "PropertySet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition), global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition.Parser, new[]{ "Artifact", "FormulaReference", "TokenBase", "Behaviors", "BehaviorGroups", "PropertySets", "ChildTokens" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinitions), global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinitions.Parser, new[]{ "Definitions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.InfluenceBinding), global::TTI.TTF.Taxonomy.Model.Core.InfluenceBinding.Parser, new[]{ "InfluencedId", "InfluencedInvocationId", "InfluenceType", "InfluencingInvocation", "InfluencedInvocation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TokenSpecification), global::TTI.TTF.Taxonomy.Model.Core.TokenSpecification.Parser, new[]{ "SpecificationHash", "Artifact", "DefinitionReference", "TokenBase", "Behaviors", "BehaviorGroups", "PropertySets", "ChildTokens" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.BehaviorSpecification), global::TTI.TTF.Taxonomy.Model.Core.BehaviorSpecification.Parser, new[]{ "Artifact", "IsExternal", "ConstructorType", "Constructor", "Invocations", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.PropertySetSpecification), global::TTI.TTF.Taxonomy.Model.Core.PropertySetSpecification.Parser, new[]{ "Artifact", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification), global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification.Parser, new[]{ "Name", "ValueDescription", "TemplateValue", "PropertyInvocations", "Properties" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupSpecification), global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupSpecification.Parser, new[]{ "Artifact", "Behaviors" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding), global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Parser, new[]{ "Influence", "InvocationStep" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.Influence), global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.Influence.Parser, new[]{ "InfluenceType", "InfluencingId", "InfluencingInvocationId", "InfluencedId", "InfluencedInvocationId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep), global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep.Parser, new[]{ "Invocation", "NextInvocation" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TokenBase), global::TTI.TTF.Taxonomy.Model.Core.TokenBase.Parser, new[]{ "Base", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TokenBehavior), global::TTI.TTF.Taxonomy.Model.Core.TokenBehavior.Parser, new[]{ "Behavior", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TokenBehaviorGroup), global::TTI.TTF.Taxonomy.Model.Core.TokenBehaviorGroup.Parser, new[]{ "Behavior", "Values" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TTI.TTF.Taxonomy.Model.Core.TokenPropertySet), global::TTI.TTF.Taxonomy.Model.Core.TokenPropertySet.Parser, new[]{ "PropertySet", "Values" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///Influence types for behaviors that can influence other behaviors or properties.
  /// </summary>
  public enum InfluenceType {
    /// <summary>
    ///Injects the Influencer behavior before the Influenced Behavior or Property.
    /// </summary>
    [pbr::OriginalName("INTERCEPT")] Intercept = 0,
    /// <summary>
    ///Replaces the Influenced behavior.
    /// </summary>
    [pbr::OriginalName("OVERRIDE")] Override = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  ///All tokens inherit from the base and implicitly support construction. The properties represent non-behavioral properties, with the exception of Decimals which is used by the Subdividable or Non-Subdividable behavior where any value greater than 0 makes the token subdividable.
  /// </summary>
  public sealed partial class Base : pb::IMessage<Base> {
    private static readonly pb::MessageParser<Base> _parser = new pb::MessageParser<Base>(() => new Base());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Base> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base(Base other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      tokenType_ = other.tokenType_;
      tokenUnit_ = other.tokenUnit_;
      representationType_ = other.representationType_;
      valueType_ = other.valueType_;
      name_ = other.name_;
      symbol_ = other.symbol_;
      owner_ = other.owner_;
      quantity_ = other.quantity_;
      decimals_ = other.decimals_;
      tokenProperties_ = other.tokenProperties_.Clone();
      constructorName_ = other.constructorName_;
      constructor_ = other.constructor_ != null ? other.constructor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Base Clone() {
      return new Base(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    /// <summary>
    ///Artifact metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "token_type" field.</summary>
    public const int TokenTypeFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Artifact.TokenType tokenType_ = global::TTI.TTF.Taxonomy.Model.Artifact.TokenType.Fungible;
    /// <summary>
    ///Token Type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.TokenType TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = value;
      }
    }

    /// <summary>Field number for the "token_unit" field.</summary>
    public const int TokenUnitFieldNumber = 3;
    private global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit tokenUnit_ = global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional;
    /// <summary>
    ///Token Unit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit TokenUnit {
      get { return tokenUnit_; }
      set {
        tokenUnit_ = value;
      }
    }

    /// <summary>Field number for the "representation_type" field.</summary>
    public const int RepresentationTypeFieldNumber = 4;
    private global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType representationType_ = global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType.Common;
    /// <summary>
    ///Representation Type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType RepresentationType {
      get { return representationType_; }
      set {
        representationType_ = value;
      }
    }

    /// <summary>Field number for the "value_type" field.</summary>
    public const int ValueTypeFieldNumber = 5;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ValueType valueType_ = global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic;
    /// <summary>
    ///Override this from the default of Intrinsic in the BaseReference for a TemplateDefinition to Reference type if needed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ValueType ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    ///This is a deployment value that is a common, well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 7;
    private string symbol_ = "";
    /// <summary>
    ///This is a optional deployment value which is a unique symbol or identifier, not all tokens will have a symbol
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 8;
    private string owner_ = "";
    /// <summary>
    ///This is a deployemnt value with a reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 9;
    private long quantity_;
    /// <summary>
    ///This is a deployemnt value, Base64 encoded ByteString - can represent the initial quantity created or the total minted or issued for the class.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 10;
    private int decimals_;
    /// <summary>
    ///This is a deployemnt value, a number of decimal places a single token can be subdivided into.  A typical fiat currency has a value of 2, i.e. $100.53. A value of 0 means that subdivision is not supported and a whole token is the smallest unit of the token that can be owned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "token_properties" field.</summary>
    public const int TokenPropertiesFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_tokenProperties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 90);
    private readonly pbc::MapField<string, string> tokenProperties_ = new pbc::MapField<string, string>();
    /// <summary>
    ///This is a deployemnt value, contains generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> TokenProperties {
      get { return tokenProperties_; }
    }

    /// <summary>Field number for the "constructor_name" field.</summary>
    public const int ConstructorNameFieldNumber = 12;
    private string constructorName_ = "";
    /// <summary>
    ///A template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConstructorName {
      get { return constructorName_; }
      set {
        constructorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Any constructor_;
    /// <summary>
    ///The constructor type defined in the token template artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Constructor {
      get { return constructor_; }
      set {
        constructor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Base);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Base other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (TokenType != other.TokenType) return false;
      if (TokenUnit != other.TokenUnit) return false;
      if (RepresentationType != other.RepresentationType) return false;
      if (ValueType != other.ValueType) return false;
      if (Name != other.Name) return false;
      if (Symbol != other.Symbol) return false;
      if (Owner != other.Owner) return false;
      if (Quantity != other.Quantity) return false;
      if (Decimals != other.Decimals) return false;
      if (!TokenProperties.Equals(other.TokenProperties)) return false;
      if (ConstructorName != other.ConstructorName) return false;
      if (!object.Equals(Constructor, other.Constructor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (TokenType != global::TTI.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) hash ^= TokenType.GetHashCode();
      if (TokenUnit != global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) hash ^= TokenUnit.GetHashCode();
      if (RepresentationType != global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) hash ^= RepresentationType.GetHashCode();
      if (ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) hash ^= ValueType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (Quantity != 0L) hash ^= Quantity.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      hash ^= TokenProperties.GetHashCode();
      if (ConstructorName.Length != 0) hash ^= ConstructorName.GetHashCode();
      if (constructor_ != null) hash ^= Constructor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (TokenType != global::TTI.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TokenType);
      }
      if (TokenUnit != global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        output.WriteRawTag(24);
        output.WriteEnum((int) TokenUnit);
      }
      if (RepresentationType != global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RepresentationType);
      }
      if (ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ValueType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Symbol);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Owner);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Quantity);
      }
      if (Decimals != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Decimals);
      }
      tokenProperties_.WriteTo(output, _map_tokenProperties_codec);
      if (ConstructorName.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ConstructorName);
      }
      if (constructor_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Constructor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (TokenType != global::TTI.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenType);
      }
      if (TokenUnit != global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TokenUnit);
      }
      if (RepresentationType != global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RepresentationType);
      }
      if (ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (Quantity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      size += tokenProperties_.CalculateSize(_map_tokenProperties_codec);
      if (ConstructorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConstructorName);
      }
      if (constructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constructor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Base other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.TokenType != global::TTI.TTF.Taxonomy.Model.Artifact.TokenType.Fungible) {
        TokenType = other.TokenType;
      }
      if (other.TokenUnit != global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit.Fractional) {
        TokenUnit = other.TokenUnit;
      }
      if (other.RepresentationType != global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType.Common) {
        RepresentationType = other.RepresentationType;
      }
      if (other.ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        ValueType = other.ValueType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.Quantity != 0L) {
        Quantity = other.Quantity;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      tokenProperties_.Add(other.tokenProperties_);
      if (other.ConstructorName.Length != 0) {
        ConstructorName = other.ConstructorName;
      }
      if (other.constructor_ != null) {
        if (constructor_ == null) {
          Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Constructor.MergeFrom(other.Constructor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            TokenType = (global::TTI.TTF.Taxonomy.Model.Artifact.TokenType) input.ReadEnum();
            break;
          }
          case 24: {
            TokenUnit = (global::TTI.TTF.Taxonomy.Model.Artifact.TokenUnit) input.ReadEnum();
            break;
          }
          case 32: {
            RepresentationType = (global::TTI.TTF.Taxonomy.Model.Artifact.RepresentationType) input.ReadEnum();
            break;
          }
          case 40: {
            ValueType = (global::TTI.TTF.Taxonomy.Model.Artifact.ValueType) input.ReadEnum();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 58: {
            Symbol = input.ReadString();
            break;
          }
          case 66: {
            Owner = input.ReadString();
            break;
          }
          case 72: {
            Quantity = input.ReadInt64();
            break;
          }
          case 80: {
            Decimals = input.ReadInt32();
            break;
          }
          case 90: {
            tokenProperties_.AddEntriesFrom(input, _map_tokenProperties_codec);
            break;
          }
          case 98: {
            ConstructorName = input.ReadString();
            break;
          }
          case 106: {
            if (constructor_ == null) {
              Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Constructor);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Collection of base token types
  /// </summary>
  public sealed partial class Bases : pb::IMessage<Bases> {
    private static readonly pb::MessageParser<Bases> _parser = new pb::MessageParser<Bases>(() => new Bases());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bases> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bases() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bases(Bases other) : this() {
      base_ = other.base_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bases Clone() {
      return new Bases(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Base> _repeated_base_codec
        = pb::FieldCodec.ForMessage(10, global::TTI.TTF.Taxonomy.Model.Core.Base.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Base> base_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Base>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Base> Base {
      get { return base_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bases);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bases other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!base_.Equals(other.base_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= base_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      base_.WriteTo(output, _repeated_base_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += base_.CalculateSize(_repeated_base_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bases other) {
      if (other == null) {
        return;
      }
      base_.Add(other.base_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            base_.AddEntriesFrom(input, _repeated_base_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///A Reference is used in the TemplateDefinition to provide property values to those defined in the base referenced. Any values set in a BaseReference is merged into the token specification when generated.
  /// </summary>
  public sealed partial class BaseReference : pb::IMessage<BaseReference> {
    private static readonly pb::MessageParser<BaseReference> _parser = new pb::MessageParser<BaseReference>(() => new BaseReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BaseReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseReference(BaseReference other) : this() {
      reference_ = other.reference_ != null ? other.reference_.Clone() : null;
      valueType_ = other.valueType_;
      name_ = other.name_;
      symbol_ = other.symbol_;
      owner_ = other.owner_;
      quantity_ = other.quantity_;
      decimals_ = other.decimals_;
      tokenProperties_ = other.tokenProperties_.Clone();
      constructorName_ = other.constructorName_;
      constructor_ = other.constructor_ != null ? other.constructor_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BaseReference Clone() {
      return new BaseReference(this);
    }

    /// <summary>Field number for the "reference" field.</summary>
    public const int ReferenceFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference reference_;
    /// <summary>
    ///Artifact Reference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference Reference {
      get { return reference_; }
      set {
        reference_ = value;
      }
    }

    /// <summary>Field number for the "value_type" field.</summary>
    public const int ValueTypeFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ValueType valueType_ = global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic;
    /// <summary>
    ///Set this to change from the default of intrinsic if it is a reference value token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ValueType ValueType {
      get { return valueType_; }
      set {
        valueType_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    ///A common well understood name that represents the Token Class.  All instances, or tokens, within this class will be referred to by their class name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 4;
    private string symbol_ = "";
    /// <summary>
    ///An optionally unique symbol or identifier
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 5;
    private string owner_ = "";
    /// <summary>
    ///A reference to the owner of the token class or instance which can be a blockchain address, public key or other unique identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 6;
    private long quantity_;
    /// <summary>
    ///Can represent the initial quantity created or the total minted or issued for the class.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "decimals" field.</summary>
    public const int DecimalsFieldNumber = 7;
    private int decimals_;
    /// <summary>
    ///A number of decimal places a single token can be subdivided into.  A typical fiat currency has a value of 2, i.e. $100.53. A value of 0 means that subdivision is not supported and a whole token is the smallest unit of the token that can be owned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Decimals {
      get { return decimals_; }
      set {
        decimals_ = value;
      }
    }

    /// <summary>Field number for the "token_properties" field.</summary>
    public const int TokenPropertiesFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_tokenProperties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 66);
    private readonly pbc::MapField<string, string> tokenProperties_ = new pbc::MapField<string, string>();
    /// <summary>
    ///Generic non-behavioral properties as a list of simple `name, value` pairs that can be implemented without property invocations for each.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> TokenProperties {
      get { return tokenProperties_; }
    }

    /// <summary>Field number for the "constructor_name" field.</summary>
    public const int ConstructorNameFieldNumber = 9;
    private string constructorName_ = "";
    /// <summary>
    ///A template must have a constructor, the name is the proto3 message name in the implemented token base definition.  The default is Constructor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConstructorName {
      get { return constructorName_; }
      set {
        constructorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Any constructor_;
    /// <summary>
    ///The constructor type defined in the token template artifact.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Constructor {
      get { return constructor_; }
      set {
        constructor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BaseReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BaseReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reference, other.Reference)) return false;
      if (ValueType != other.ValueType) return false;
      if (Name != other.Name) return false;
      if (Symbol != other.Symbol) return false;
      if (Owner != other.Owner) return false;
      if (Quantity != other.Quantity) return false;
      if (Decimals != other.Decimals) return false;
      if (!TokenProperties.Equals(other.TokenProperties)) return false;
      if (ConstructorName != other.ConstructorName) return false;
      if (!object.Equals(Constructor, other.Constructor)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reference_ != null) hash ^= Reference.GetHashCode();
      if (ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) hash ^= ValueType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (Quantity != 0L) hash ^= Quantity.GetHashCode();
      if (Decimals != 0) hash ^= Decimals.GetHashCode();
      hash ^= TokenProperties.GetHashCode();
      if (ConstructorName.Length != 0) hash ^= ConstructorName.GetHashCode();
      if (constructor_ != null) hash ^= Constructor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reference);
      }
      if (ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ValueType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Symbol);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Owner);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Quantity);
      }
      if (Decimals != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Decimals);
      }
      tokenProperties_.WriteTo(output, _map_tokenProperties_codec);
      if (ConstructorName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConstructorName);
      }
      if (constructor_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Constructor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reference);
      }
      if (ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ValueType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (Quantity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
      }
      if (Decimals != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Decimals);
      }
      size += tokenProperties_.CalculateSize(_map_tokenProperties_codec);
      if (ConstructorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConstructorName);
      }
      if (constructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constructor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BaseReference other) {
      if (other == null) {
        return;
      }
      if (other.reference_ != null) {
        if (reference_ == null) {
          Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
        }
        Reference.MergeFrom(other.Reference);
      }
      if (other.ValueType != global::TTI.TTF.Taxonomy.Model.Artifact.ValueType.Intrinsic) {
        ValueType = other.ValueType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.Quantity != 0L) {
        Quantity = other.Quantity;
      }
      if (other.Decimals != 0) {
        Decimals = other.Decimals;
      }
      tokenProperties_.Add(other.tokenProperties_);
      if (other.ConstructorName.Length != 0) {
        ConstructorName = other.ConstructorName;
      }
      if (other.constructor_ != null) {
        if (constructor_ == null) {
          Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Constructor.MergeFrom(other.Constructor);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reference_ == null) {
              Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
            }
            input.ReadMessage(Reference);
            break;
          }
          case 16: {
            ValueType = (global::TTI.TTF.Taxonomy.Model.Artifact.ValueType) input.ReadEnum();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Symbol = input.ReadString();
            break;
          }
          case 42: {
            Owner = input.ReadString();
            break;
          }
          case 48: {
            Quantity = input.ReadInt64();
            break;
          }
          case 56: {
            Decimals = input.ReadInt32();
            break;
          }
          case 66: {
            tokenProperties_.AddEntriesFrom(input, _map_tokenProperties_codec);
            break;
          }
          case 74: {
            ConstructorName = input.ReadString();
            break;
          }
          case 82: {
            if (constructor_ == null) {
              Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Constructor);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Behavior artifact type
  /// </summary>
  public sealed partial class Behavior : pb::IMessage<Behavior> {
    private static readonly pb::MessageParser<Behavior> _parser = new pb::MessageParser<Behavior>(() => new Behavior());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Behavior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior(Behavior other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      isExternal_ = other.isExternal_;
      constructorType_ = other.constructorType_;
      constructor_ = other.constructor_ != null ? other.constructor_.Clone() : null;
      invocations_ = other.invocations_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behavior Clone() {
      return new Behavior(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    /// <summary>
    ///Artifact metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "is_external" field.</summary>
    public const int IsExternalFieldNumber = 2;
    private bool isExternal_;
    /// <summary>
    ///Indicator if this behavior is available or internal only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExternal {
      get { return isExternal_; }
      set {
        isExternal_ = value;
      }
    }

    /// <summary>Field number for the "constructor_type" field.</summary>
    public const int ConstructorTypeFieldNumber = 3;
    private string constructorType_ = "";
    /// <summary>
    ///Proto message name empty if there is no constructor, used when unpacking the Any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConstructorType {
      get { return constructorType_; }
      set {
        constructorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Any constructor_;
    /// <summary>
    ///Cptionally retrieved for behaviors like Role Support that needs input when setting up the roles when the token class is created.  Uses Any as the type as it will not be known by the framework.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Constructor {
      get { return constructor_; }
      set {
        constructor_ = value;
      }
    }

    /// <summary>Field number for the "invocations" field.</summary>
    public const int InvocationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Invocation> _repeated_invocations_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Core.Invocation.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation> invocations_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation>();
    /// <summary>
    ///Definitions only will not have values, null for string or composite types and 0 for numbers, false for bools.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation> Invocations {
      get { return invocations_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Property> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Taxonomy.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property>();
    /// <summary>
    ///For any properties that should be added to the token if the behavior is implemented, values not set, should consider a dependent property-set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Behavior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Behavior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (IsExternal != other.IsExternal) return false;
      if (ConstructorType != other.ConstructorType) return false;
      if (!object.Equals(Constructor, other.Constructor)) return false;
      if(!invocations_.Equals(other.invocations_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (IsExternal != false) hash ^= IsExternal.GetHashCode();
      if (ConstructorType.Length != 0) hash ^= ConstructorType.GetHashCode();
      if (constructor_ != null) hash ^= Constructor.GetHashCode();
      hash ^= invocations_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (IsExternal != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsExternal);
      }
      if (ConstructorType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConstructorType);
      }
      if (constructor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Constructor);
      }
      invocations_.WriteTo(output, _repeated_invocations_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (IsExternal != false) {
        size += 1 + 1;
      }
      if (ConstructorType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConstructorType);
      }
      if (constructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constructor);
      }
      size += invocations_.CalculateSize(_repeated_invocations_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Behavior other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.IsExternal != false) {
        IsExternal = other.IsExternal;
      }
      if (other.ConstructorType.Length != 0) {
        ConstructorType = other.ConstructorType;
      }
      if (other.constructor_ != null) {
        if (constructor_ == null) {
          Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Constructor.MergeFrom(other.Constructor);
      }
      invocations_.Add(other.invocations_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            IsExternal = input.ReadBool();
            break;
          }
          case 26: {
            ConstructorType = input.ReadString();
            break;
          }
          case 34: {
            if (constructor_ == null) {
              Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Constructor);
            break;
          }
          case 42: {
            invocations_.AddEntriesFrom(input, _repeated_invocations_codec);
            break;
          }
          case 50: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Collection of Behavior types
  /// </summary>
  public sealed partial class Behaviors : pb::IMessage<Behaviors> {
    private static readonly pb::MessageParser<Behaviors> _parser = new pb::MessageParser<Behaviors>(() => new Behaviors());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Behaviors> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behaviors() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behaviors(Behaviors other) : this() {
      behavior_ = other.behavior_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Behaviors Clone() {
      return new Behaviors(this);
    }

    /// <summary>Field number for the "behavior" field.</summary>
    public const int BehaviorFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Behavior> _repeated_behavior_codec
        = pb::FieldCodec.ForMessage(10, global::TTI.TTF.Taxonomy.Model.Core.Behavior.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Behavior> behavior_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Behavior>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Behavior> Behavior {
      get { return behavior_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Behaviors);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Behaviors other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!behavior_.Equals(other.behavior_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= behavior_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      behavior_.WriteTo(output, _repeated_behavior_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += behavior_.CalculateSize(_repeated_behavior_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Behaviors other) {
      if (other == null) {
        return;
      }
      behavior_.Add(other.behavior_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            behavior_.AddEntriesFrom(input, _repeated_behavior_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Used in the TemplateDefinition to provide values for the behavior.
  /// </summary>
  public sealed partial class BehaviorReference : pb::IMessage<BehaviorReference> {
    private static readonly pb::MessageParser<BehaviorReference> _parser = new pb::MessageParser<BehaviorReference>(() => new BehaviorReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorReference(BehaviorReference other) : this() {
      reference_ = other.reference_ != null ? other.reference_.Clone() : null;
      isExternal_ = other.isExternal_;
      constructorType_ = other.constructorType_;
      constructor_ = other.constructor_ != null ? other.constructor_.Clone() : null;
      appliesTo_ = other.appliesTo_.Clone();
      invocations_ = other.invocations_.Clone();
      influenceBindings_ = other.influenceBindings_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorReference Clone() {
      return new BehaviorReference(this);
    }

    /// <summary>Field number for the "reference" field.</summary>
    public const int ReferenceFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference reference_;
    /// <summary>
    ///ArtifactReference
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference Reference {
      get { return reference_; }
      set {
        reference_ = value;
      }
    }

    /// <summary>Field number for the "is_external" field.</summary>
    public const int IsExternalFieldNumber = 2;
    private bool isExternal_;
    /// <summary>
    ///Indicator if this is available externally or internally only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExternal {
      get { return isExternal_; }
      set {
        isExternal_ = value;
      }
    }

    /// <summary>Field number for the "constructor_type" field.</summary>
    public const int ConstructorTypeFieldNumber = 3;
    private string constructorType_ = "";
    /// <summary>
    ///Proto message name empty if there is no constructor, used when unpacking the Any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConstructorType {
      get { return constructorType_; }
      set {
        constructorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Any constructor_;
    /// <summary>
    ///Optionally retrieved for behaviors like Role Support that needs input when setting up the roles when the token class is created.  Uses Any as the type as it will not be known by the framework.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Constructor {
      get { return constructor_; }
      set {
        constructor_ = value;
      }
    }

    /// <summary>Field number for the "applies_to" field.</summary>
    public const int AppliesToFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> _repeated_appliesTo_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> appliesTo_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol>();
    /// <summary>
    ///If this is an influence behavior, list the influenced symbols here, the details on how it influences is in the influence bindings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> AppliesTo {
      get { return appliesTo_; }
    }

    /// <summary>Field number for the "invocations" field.</summary>
    public const int InvocationsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Invocation> _repeated_invocations_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Taxonomy.Model.Core.Invocation.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation> invocations_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation>();
    /// <summary>
    ///Updated invocations from the base artifact, include the invocations used in the definition. If the defintion does not contain the InvocationId, it will not be included in the specification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation> Invocations {
      get { return invocations_; }
    }

    /// <summary>Field number for the "influence_bindings" field.</summary>
    public const int InfluenceBindingsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.InfluenceBinding> _repeated_influenceBindings_codec
        = pb::FieldCodec.ForMessage(58, global::TTI.TTF.Taxonomy.Model.Core.InfluenceBinding.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InfluenceBinding> influenceBindings_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InfluenceBinding>();
    /// <summary>
    ///Influence invocation definitions, only defined in the influencing behavior, but applied during specification generation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InfluenceBinding> InfluenceBindings {
      get { return influenceBindings_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Property> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(66, global::TTI.TTF.Taxonomy.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property>();
    /// <summary>
    ///Behavioral properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reference, other.Reference)) return false;
      if (IsExternal != other.IsExternal) return false;
      if (ConstructorType != other.ConstructorType) return false;
      if (!object.Equals(Constructor, other.Constructor)) return false;
      if(!appliesTo_.Equals(other.appliesTo_)) return false;
      if(!invocations_.Equals(other.invocations_)) return false;
      if(!influenceBindings_.Equals(other.influenceBindings_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reference_ != null) hash ^= Reference.GetHashCode();
      if (IsExternal != false) hash ^= IsExternal.GetHashCode();
      if (ConstructorType.Length != 0) hash ^= ConstructorType.GetHashCode();
      if (constructor_ != null) hash ^= Constructor.GetHashCode();
      hash ^= appliesTo_.GetHashCode();
      hash ^= invocations_.GetHashCode();
      hash ^= influenceBindings_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reference);
      }
      if (IsExternal != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsExternal);
      }
      if (ConstructorType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConstructorType);
      }
      if (constructor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Constructor);
      }
      appliesTo_.WriteTo(output, _repeated_appliesTo_codec);
      invocations_.WriteTo(output, _repeated_invocations_codec);
      influenceBindings_.WriteTo(output, _repeated_influenceBindings_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reference);
      }
      if (IsExternal != false) {
        size += 1 + 1;
      }
      if (ConstructorType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConstructorType);
      }
      if (constructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constructor);
      }
      size += appliesTo_.CalculateSize(_repeated_appliesTo_codec);
      size += invocations_.CalculateSize(_repeated_invocations_codec);
      size += influenceBindings_.CalculateSize(_repeated_influenceBindings_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorReference other) {
      if (other == null) {
        return;
      }
      if (other.reference_ != null) {
        if (reference_ == null) {
          Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
        }
        Reference.MergeFrom(other.Reference);
      }
      if (other.IsExternal != false) {
        IsExternal = other.IsExternal;
      }
      if (other.ConstructorType.Length != 0) {
        ConstructorType = other.ConstructorType;
      }
      if (other.constructor_ != null) {
        if (constructor_ == null) {
          Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Constructor.MergeFrom(other.Constructor);
      }
      appliesTo_.Add(other.appliesTo_);
      invocations_.Add(other.invocations_);
      influenceBindings_.Add(other.influenceBindings_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reference_ == null) {
              Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
            }
            input.ReadMessage(Reference);
            break;
          }
          case 16: {
            IsExternal = input.ReadBool();
            break;
          }
          case 26: {
            ConstructorType = input.ReadString();
            break;
          }
          case 34: {
            if (constructor_ == null) {
              Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Constructor);
            break;
          }
          case 42: {
            appliesTo_.AddEntriesFrom(input, _repeated_appliesTo_codec);
            break;
          }
          case 50: {
            invocations_.AddEntriesFrom(input, _repeated_invocations_codec);
            break;
          }
          case 58: {
            influenceBindings_.AddEntriesFrom(input, _repeated_influenceBindings_codec);
            break;
          }
          case 66: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///BehaviorGroups are used as shortcuts to combine typically used behaviors into a pre-configured group and is like a TemplateDefinition, where it uses References to artifacts to provide overriding values for the behaviors configured in context with each other.
  /// </summary>
  public sealed partial class BehaviorGroup : pb::IMessage<BehaviorGroup> {
    private static readonly pb::MessageParser<BehaviorGroup> _parser = new pb::MessageParser<BehaviorGroup>(() => new BehaviorGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup(BehaviorGroup other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      behaviors_ = other.behaviors_.Clone();
      behaviorArtifacts_ = other.behaviorArtifacts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroup Clone() {
      return new BehaviorGroup(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> _repeated_behaviors_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> behaviors_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference>();
    /// <summary>
    ///Collection of behavior references for the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> Behaviors {
      get { return behaviors_; }
    }

    /// <summary>Field number for the "behavior_artifacts" field.</summary>
    public const int BehaviorArtifactsFieldNumber = 3;
    private static readonly pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.Behavior>.Codec _map_behaviorArtifacts_codec
        = new pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.Behavior>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::TTI.TTF.Taxonomy.Model.Core.Behavior.Parser), 26);
    private readonly pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.Behavior> behaviorArtifacts_ = new pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.Behavior>();
    /// <summary>
    ///If retrieved this can be populated with the behaviors nested in the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.Behavior> BehaviorArtifacts {
      get { return behaviorArtifacts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!behaviors_.Equals(other.behaviors_)) return false;
      if (!BehaviorArtifacts.Equals(other.BehaviorArtifacts)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= behaviors_.GetHashCode();
      hash ^= BehaviorArtifacts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      behaviors_.WriteTo(output, _repeated_behaviors_codec);
      behaviorArtifacts_.WriteTo(output, _map_behaviorArtifacts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += behaviors_.CalculateSize(_repeated_behaviors_codec);
      size += behaviorArtifacts_.CalculateSize(_map_behaviorArtifacts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorGroup other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      behaviors_.Add(other.behaviors_);
      behaviorArtifacts_.Add(other.behaviorArtifacts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            behaviors_.AddEntriesFrom(input, _repeated_behaviors_codec);
            break;
          }
          case 26: {
            behaviorArtifacts_.AddEntriesFrom(input, _map_behaviorArtifacts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Collection of BehaviorGroups
  /// </summary>
  public sealed partial class BehaviorGroups : pb::IMessage<BehaviorGroups> {
    private static readonly pb::MessageParser<BehaviorGroups> _parser = new pb::MessageParser<BehaviorGroups>(() => new BehaviorGroups());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorGroups> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroups() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroups(BehaviorGroups other) : this() {
      behaviorGroup_ = other.behaviorGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroups Clone() {
      return new BehaviorGroups(this);
    }

    /// <summary>Field number for the "behavior_group" field.</summary>
    public const int BehaviorGroupFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup> _repeated_behaviorGroup_codec
        = pb::FieldCodec.ForMessage(10, global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup> behaviorGroup_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup> BehaviorGroup {
      get { return behaviorGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorGroups);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorGroups other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!behaviorGroup_.Equals(other.behaviorGroup_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= behaviorGroup_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      behaviorGroup_.WriteTo(output, _repeated_behaviorGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += behaviorGroup_.CalculateSize(_repeated_behaviorGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorGroups other) {
      if (other == null) {
        return;
      }
      behaviorGroup_.Add(other.behaviorGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            behaviorGroup_.AddEntriesFrom(input, _repeated_behaviorGroup_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Used to provide overriding values set in the BehaviorGroup if needed. Since most BehaviorGroups are already pre-configured in context, providing values here is usually not necessary.
  /// </summary>
  public sealed partial class BehaviorGroupReference : pb::IMessage<BehaviorGroupReference> {
    private static readonly pb::MessageParser<BehaviorGroupReference> _parser = new pb::MessageParser<BehaviorGroupReference>(() => new BehaviorGroupReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorGroupReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroupReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroupReference(BehaviorGroupReference other) : this() {
      reference_ = other.reference_ != null ? other.reference_.Clone() : null;
      behaviorArtifacts_ = other.behaviorArtifacts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroupReference Clone() {
      return new BehaviorGroupReference(this);
    }

    /// <summary>Field number for the "reference" field.</summary>
    public const int ReferenceFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference reference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference Reference {
      get { return reference_; }
      set {
        reference_ = value;
      }
    }

    /// <summary>Field number for the "behavior_artifacts" field.</summary>
    public const int BehaviorArtifactsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> _repeated_behaviorArtifacts_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> behaviorArtifacts_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference>();
    /// <summary>
    ///If retrieved this can be populated with the behaviors nested in the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> BehaviorArtifacts {
      get { return behaviorArtifacts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorGroupReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorGroupReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reference, other.Reference)) return false;
      if(!behaviorArtifacts_.Equals(other.behaviorArtifacts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reference_ != null) hash ^= Reference.GetHashCode();
      hash ^= behaviorArtifacts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reference);
      }
      behaviorArtifacts_.WriteTo(output, _repeated_behaviorArtifacts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reference);
      }
      size += behaviorArtifacts_.CalculateSize(_repeated_behaviorArtifacts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorGroupReference other) {
      if (other == null) {
        return;
      }
      if (other.reference_ != null) {
        if (reference_ == null) {
          Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
        }
        Reference.MergeFrom(other.Reference);
      }
      behaviorArtifacts_.Add(other.behaviorArtifacts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reference_ == null) {
              Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
            }
            input.ReadMessage(Reference);
            break;
          }
          case 18: {
            behaviorArtifacts_.AddEntriesFrom(input, _repeated_behaviorArtifacts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///PropertySet type
  /// </summary>
  public sealed partial class PropertySet : pb::IMessage<PropertySet> {
    private static readonly pb::MessageParser<PropertySet> _parser = new pb::MessageParser<PropertySet>(() => new PropertySet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet(PropertySet other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySet Clone() {
      return new PropertySet(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Property> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Taxonomy.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property>();
    /// <summary>
    ///Definitions only will not have values, null for string or composite types and 0 for numbers, false for bools.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySet other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Collection of PropertySet type
  /// </summary>
  public sealed partial class PropertySets : pb::IMessage<PropertySets> {
    private static readonly pb::MessageParser<PropertySets> _parser = new pb::MessageParser<PropertySets>(() => new PropertySets());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySets> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySets() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySets(PropertySets other) : this() {
      propertySet_ = other.propertySet_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySets Clone() {
      return new PropertySets(this);
    }

    /// <summary>Field number for the "property_set" field.</summary>
    public const int PropertySetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.PropertySet> _repeated_propertySet_codec
        = pb::FieldCodec.ForMessage(10, global::TTI.TTF.Taxonomy.Model.Core.PropertySet.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySet> propertySet_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySet> PropertySet {
      get { return propertySet_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySets);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySets other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!propertySet_.Equals(other.propertySet_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= propertySet_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      propertySet_.WriteTo(output, _repeated_propertySet_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += propertySet_.CalculateSize(_repeated_propertySet_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySets other) {
      if (other == null) {
        return;
      }
      propertySet_.Add(other.propertySet_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            propertySet_.AddEntriesFrom(input, _repeated_propertySet_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Providing overriding values for a PropertSet in a TemplateDefinition.
  /// </summary>
  public sealed partial class PropertySetReference : pb::IMessage<PropertySetReference> {
    private static readonly pb::MessageParser<PropertySetReference> _parser = new pb::MessageParser<PropertySetReference>(() => new PropertySetReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySetReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetReference(PropertySetReference other) : this() {
      reference_ = other.reference_ != null ? other.reference_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetReference Clone() {
      return new PropertySetReference(this);
    }

    /// <summary>Field number for the "reference" field.</summary>
    public const int ReferenceFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference reference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference Reference {
      get { return reference_; }
      set {
        reference_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Property> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Taxonomy.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property>();
    /// <summary>
    ///Values
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySetReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySetReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reference, other.Reference)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (reference_ != null) hash ^= Reference.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (reference_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Reference);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (reference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reference);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySetReference other) {
      if (other == null) {
        return;
      }
      if (other.reference_ != null) {
        if (reference_ == null) {
          Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
        }
        Reference.MergeFrom(other.Reference);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (reference_ == null) {
              Reference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
            }
            input.ReadMessage(Reference);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Generic property used in the framework.
  /// </summary>
  public sealed partial class Property : pb::IMessage<Property> {
    private static readonly pb::MessageParser<Property> _parser = new pb::MessageParser<Property>(() => new Property());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Property> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property(Property other) : this() {
      name_ = other.name_;
      valueDescription_ = other.valueDescription_;
      templateValue_ = other.templateValue_;
      propertyInvocations_ = other.propertyInvocations_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property Clone() {
      return new Property(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///Property Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_description" field.</summary>
    public const int ValueDescriptionFieldNumber = 2;
    private string valueDescription_ = "";
    /// <summary>
    ///Description of the value that can be contained for the property, not the actual value, but string, int, bool, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueDescription {
      get { return valueDescription_; }
      set {
        valueDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_value" field.</summary>
    public const int TemplateValueFieldNumber = 3;
    private string templateValue_ = "";
    /// <summary>
    ///Value, if needed, when applied in a template context or composed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateValue {
      get { return templateValue_; }
      set {
        templateValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "property_invocations" field.</summary>
    public const int PropertyInvocationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Invocation> _repeated_propertyInvocations_codec
        = pb::FieldCodec.ForMessage(34, global::TTI.TTF.Taxonomy.Model.Core.Invocation.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation> propertyInvocations_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation>();
    /// <summary>
    ///Needed for non-behavioral properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Invocation> PropertyInvocations {
      get { return propertyInvocations_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Property> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property>();
    /// <summary>
    ///Support for nested properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Property);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Property other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ValueDescription != other.ValueDescription) return false;
      if (TemplateValue != other.TemplateValue) return false;
      if(!propertyInvocations_.Equals(other.propertyInvocations_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueDescription.Length != 0) hash ^= ValueDescription.GetHashCode();
      if (TemplateValue.Length != 0) hash ^= TemplateValue.GetHashCode();
      hash ^= propertyInvocations_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValueDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueDescription);
      }
      if (TemplateValue.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TemplateValue);
      }
      propertyInvocations_.WriteTo(output, _repeated_propertyInvocations_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueDescription);
      }
      if (TemplateValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateValue);
      }
      size += propertyInvocations_.CalculateSize(_repeated_propertyInvocations_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Property other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueDescription.Length != 0) {
        ValueDescription = other.ValueDescription;
      }
      if (other.TemplateValue.Length != 0) {
        TemplateValue = other.TemplateValue;
      }
      propertyInvocations_.Add(other.propertyInvocations_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValueDescription = input.ReadString();
            break;
          }
          case 26: {
            TemplateValue = input.ReadString();
            break;
          }
          case 34: {
            propertyInvocations_.AddEntriesFrom(input, _repeated_propertyInvocations_codec);
            break;
          }
          case 42: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Certification Target- Descibes how to invoke a behavior or property-set.
  /// </summary>
  public sealed partial class Invocation : pb::IMessage<Invocation> {
    private static readonly pb::MessageParser<Invocation> _parser = new pb::MessageParser<Invocation>(() => new Invocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Invocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation(Invocation other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      response_ = other.response_ != null ? other.response_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Invocation Clone() {
      return new Invocation(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    ///Invocations are given a UUID/GUID to correctly identify influences within a definition, particularly if there is an overloaded invocation, meaning a involcation with the same name but different parameters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///Property name if a property-set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    ///Include the data type for the value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 4;
    private global::TTI.TTF.Taxonomy.Model.Core.InvocationRequest request_;
    /// <summary>
    ///Certification Target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.InvocationRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 5;
    private global::TTI.TTF.Taxonomy.Model.Core.InvocationResponse response_;
    /// <summary>
    ///Certification Target
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.InvocationResponse Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Invocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Invocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (response_ != null) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (request_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Request);
      }
      if (response_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (response_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Invocation other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::TTI.TTF.Taxonomy.Model.Core.InvocationRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.response_ != null) {
        if (response_ == null) {
          Response = new global::TTI.TTF.Taxonomy.Model.Core.InvocationResponse();
        }
        Response.MergeFrom(other.Response);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (request_ == null) {
              Request = new global::TTI.TTF.Taxonomy.Model.Core.InvocationRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 42: {
            if (response_ == null) {
              Response = new global::TTI.TTF.Taxonomy.Model.Core.InvocationResponse();
            }
            input.ReadMessage(Response);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Certification Target - message description can be implemented in a messaging or rpc style interface.
  /// </summary>
  public sealed partial class InvocationRequest : pb::IMessage<InvocationRequest> {
    private static readonly pb::MessageParser<InvocationRequest> _parser = new pb::MessageParser<InvocationRequest>(() => new InvocationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest(InvocationRequest other) : this() {
      controlMessageName_ = other.controlMessageName_;
      description_ = other.description_;
      inputParameters_ = other.inputParameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationRequest Clone() {
      return new InvocationRequest(this);
    }

    /// <summary>Field number for the "control_message_name" field.</summary>
    public const int ControlMessageNameFieldNumber = 1;
    private string controlMessageName_ = "";
    /// <summary>
    ///Name of the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlMessageName {
      get { return controlMessageName_; }
      set {
        controlMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    ///Description of the invocation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_parameters" field.</summary>
    public const int InputParametersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter> _repeated_inputParameters_codec
        = pb::FieldCodec.ForMessage(26, global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter> inputParameters_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter>();
    /// <summary>
    ///List of parameters required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter> InputParameters {
      get { return inputParameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlMessageName != other.ControlMessageName) return false;
      if (Description != other.Description) return false;
      if(!inputParameters_.Equals(other.inputParameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlMessageName.Length != 0) hash ^= ControlMessageName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= inputParameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ControlMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlMessageName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      inputParameters_.WriteTo(output, _repeated_inputParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlMessageName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += inputParameters_.CalculateSize(_repeated_inputParameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ControlMessageName.Length != 0) {
        ControlMessageName = other.ControlMessageName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      inputParameters_.Add(other.inputParameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlMessageName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            inputParameters_.AddEntriesFrom(input, _repeated_inputParameters_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Certification Target - message description can be implemented in a messaging or rpc style interface.
  /// </summary>
  public sealed partial class InvocationResponse : pb::IMessage<InvocationResponse> {
    private static readonly pb::MessageParser<InvocationResponse> _parser = new pb::MessageParser<InvocationResponse>(() => new InvocationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse(InvocationResponse other) : this() {
      controlMessageName_ = other.controlMessageName_;
      description_ = other.description_;
      outputParameters_ = other.outputParameters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationResponse Clone() {
      return new InvocationResponse(this);
    }

    /// <summary>Field number for the "control_message_name" field.</summary>
    public const int ControlMessageNameFieldNumber = 1;
    private string controlMessageName_ = "";
    /// <summary>
    ///Name of the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ControlMessageName {
      get { return controlMessageName_; }
      set {
        controlMessageName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    ///Description of the output from the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "output_parameters" field.</summary>
    public const int OutputParametersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter> _repeated_outputParameters_codec
        = pb::FieldCodec.ForMessage(26, global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter> outputParameters_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter>();
    /// <summary>
    ///Parameters expected in the output.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationParameter> OutputParameters {
      get { return outputParameters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ControlMessageName != other.ControlMessageName) return false;
      if (Description != other.Description) return false;
      if(!outputParameters_.Equals(other.outputParameters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ControlMessageName.Length != 0) hash ^= ControlMessageName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= outputParameters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ControlMessageName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ControlMessageName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      outputParameters_.WriteTo(output, _repeated_outputParameters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ControlMessageName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ControlMessageName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += outputParameters_.CalculateSize(_repeated_outputParameters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationResponse other) {
      if (other == null) {
        return;
      }
      if (other.ControlMessageName.Length != 0) {
        ControlMessageName = other.ControlMessageName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      outputParameters_.Add(other.outputParameters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ControlMessageName = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            outputParameters_.AddEntriesFrom(input, _repeated_outputParameters_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Certification Target - Used to represent input and output parameters for invocations.
  /// </summary>
  public sealed partial class InvocationParameter : pb::IMessage<InvocationParameter> {
    private static readonly pb::MessageParser<InvocationParameter> _parser = new pb::MessageParser<InvocationParameter>(() => new InvocationParameter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationParameter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter(InvocationParameter other) : this() {
      name_ = other.name_;
      valueDescription_ = other.valueDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationParameter Clone() {
      return new InvocationParameter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///Parameter Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_description" field.</summary>
    public const int ValueDescriptionFieldNumber = 2;
    private string valueDescription_ = "";
    /// <summary>
    ///Describe the data type and restrictions like length or type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueDescription {
      get { return valueDescription_; }
      set {
        valueDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationParameter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationParameter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ValueDescription != other.ValueDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueDescription.Length != 0) hash ^= ValueDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValueDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationParameter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueDescription.Length != 0) {
        ValueDescription = other.ValueDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValueDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///TokenTemplate is composed when the model is built using the hierarchy of the TemplateFormula followed by the TemplateDefinition.
  /// </summary>
  public sealed partial class TokenTemplate : pb::IMessage<TokenTemplate> {
    private static readonly pb::MessageParser<TokenTemplate> _parser = new pb::MessageParser<TokenTemplate>(() => new TokenTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate(TokenTemplate other) : this() {
      formula_ = other.formula_ != null ? other.formula_.Clone() : null;
      definition_ = other.definition_ != null ? other.definition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplate Clone() {
      return new TokenTemplate(this);
    }

    /// <summary>Field number for the "formula" field.</summary>
    public const int FormulaFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula formula_;
    /// <summary>
    ///The Template Formula
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula Formula {
      get { return formula_; }
      set {
        formula_ = value;
      }
    }

    /// <summary>Field number for the "definition" field.</summary>
    public const int DefinitionFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition definition_;
    /// <summary>
    ///The Template Definition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition Definition {
      get { return definition_; }
      set {
        definition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Formula, other.Formula)) return false;
      if (!object.Equals(Definition, other.Definition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (formula_ != null) hash ^= Formula.GetHashCode();
      if (definition_ != null) hash ^= Definition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (formula_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Formula);
      }
      if (definition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Definition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (formula_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Formula);
      }
      if (definition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Definition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenTemplate other) {
      if (other == null) {
        return;
      }
      if (other.formula_ != null) {
        if (formula_ == null) {
          Formula = new global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula();
        }
        Formula.MergeFrom(other.Formula);
      }
      if (other.definition_ != null) {
        if (definition_ == null) {
          Definition = new global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition();
        }
        Definition.MergeFrom(other.Definition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (formula_ == null) {
              Formula = new global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula();
            }
            input.ReadMessage(Formula);
            break;
          }
          case 18: {
            if (definition_ == null) {
              Definition = new global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition();
            }
            input.ReadMessage(Definition);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Maped to ArtifactSymbol.Id of the TemplateDefinition.  
  /// </summary>
  public sealed partial class TokenTemplates : pb::IMessage<TokenTemplates> {
    private static readonly pb::MessageParser<TokenTemplates> _parser = new pb::MessageParser<TokenTemplates>(() => new TokenTemplates());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenTemplates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplates(TokenTemplates other) : this() {
      template_ = other.template_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenTemplates Clone() {
      return new TokenTemplates(this);
    }

    /// <summary>Field number for the "template" field.</summary>
    public const int TemplateFieldNumber = 1;
    private static readonly pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate>.Codec _map_template_codec
        = new pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate.Parser), 10);
    private readonly pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate> template_ = new pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::TTI.TTF.Taxonomy.Model.Core.TokenTemplate> Template {
      get { return template_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenTemplates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenTemplates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Template.Equals(other.Template)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Template.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      template_.WriteTo(output, _map_template_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += template_.CalculateSize(_map_template_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenTemplates other) {
      if (other == null) {
        return;
      }
      template_.Add(other.template_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            template_.AddEntriesFrom(input, _map_template_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Represents the Template Formula that is used in combination to validate a TemplateDefinition.
  /// </summary>
  public sealed partial class TemplateFormula : pb::IMessage<TemplateFormula> {
    private static readonly pb::MessageParser<TemplateFormula> _parser = new pb::MessageParser<TemplateFormula>(() => new TemplateFormula());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateFormula> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateFormula() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateFormula(TemplateFormula other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      templateType_ = other.templateType_;
      tokenBase_ = other.tokenBase_ != null ? other.tokenBase_.Clone() : null;
      behaviors_ = other.behaviors_.Clone();
      behaviorGroups_ = other.behaviorGroups_.Clone();
      propertySets_ = other.propertySets_.Clone();
      childTokens_ = other.childTokens_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateFormula Clone() {
      return new TemplateFormula(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "template_type" field.</summary>
    public const int TemplateTypeFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType templateType_ = global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken;
    /// <summary>
    ///Template Type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType TemplateType {
      get { return templateType_; }
      set {
        templateType_ = value;
      }
    }

    /// <summary>Field number for the "token_base" field.</summary>
    public const int TokenBaseFieldNumber = 3;
    private global::TTI.TTF.Taxonomy.Model.Core.TemplateBase tokenBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.TemplateBase TokenBase {
      get { return tokenBase_; }
      set {
        tokenBase_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehavior> _repeated_behaviors_codec
        = pb::FieldCodec.ForMessage(34, global::TTI.TTF.Taxonomy.Model.Core.TemplateBehavior.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehavior> behaviors_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehavior>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehavior> Behaviors {
      get { return behaviors_; }
    }

    /// <summary>Field number for the "behavior_groups" field.</summary>
    public const int BehaviorGroupsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehaviorGroup> _repeated_behaviorGroups_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Core.TemplateBehaviorGroup.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehaviorGroup> behaviorGroups_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehaviorGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateBehaviorGroup> BehaviorGroups {
      get { return behaviorGroups_; }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TemplatePropertySet> _repeated_propertySets_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Taxonomy.Model.Core.TemplatePropertySet.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplatePropertySet> propertySets_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplatePropertySet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplatePropertySet> PropertySets {
      get { return propertySets_; }
    }

    /// <summary>Field number for the "child_tokens" field.</summary>
    public const int ChildTokensFieldNumber = 7;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula> _repeated_childTokens_codec
        = pb::FieldCodec.ForMessage(58, global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula> childTokens_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula>();
    /// <summary>
    ///If hybrid, this can contain the list of child token classes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula> ChildTokens {
      get { return childTokens_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateFormula);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateFormula other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (TemplateType != other.TemplateType) return false;
      if (!object.Equals(TokenBase, other.TokenBase)) return false;
      if(!behaviors_.Equals(other.behaviors_)) return false;
      if(!behaviorGroups_.Equals(other.behaviorGroups_)) return false;
      if(!propertySets_.Equals(other.propertySets_)) return false;
      if(!childTokens_.Equals(other.childTokens_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (TemplateType != global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) hash ^= TemplateType.GetHashCode();
      if (tokenBase_ != null) hash ^= TokenBase.GetHashCode();
      hash ^= behaviors_.GetHashCode();
      hash ^= behaviorGroups_.GetHashCode();
      hash ^= propertySets_.GetHashCode();
      hash ^= childTokens_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (TemplateType != global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TemplateType);
      }
      if (tokenBase_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TokenBase);
      }
      behaviors_.WriteTo(output, _repeated_behaviors_codec);
      behaviorGroups_.WriteTo(output, _repeated_behaviorGroups_codec);
      propertySets_.WriteTo(output, _repeated_propertySets_codec);
      childTokens_.WriteTo(output, _repeated_childTokens_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (TemplateType != global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TemplateType);
      }
      if (tokenBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenBase);
      }
      size += behaviors_.CalculateSize(_repeated_behaviors_codec);
      size += behaviorGroups_.CalculateSize(_repeated_behaviorGroups_codec);
      size += propertySets_.CalculateSize(_repeated_propertySets_codec);
      size += childTokens_.CalculateSize(_repeated_childTokens_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateFormula other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.TemplateType != global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType.SingleToken) {
        TemplateType = other.TemplateType;
      }
      if (other.tokenBase_ != null) {
        if (tokenBase_ == null) {
          TokenBase = new global::TTI.TTF.Taxonomy.Model.Core.TemplateBase();
        }
        TokenBase.MergeFrom(other.TokenBase);
      }
      behaviors_.Add(other.behaviors_);
      behaviorGroups_.Add(other.behaviorGroups_);
      propertySets_.Add(other.propertySets_);
      childTokens_.Add(other.childTokens_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            TemplateType = (global::TTI.TTF.Taxonomy.Model.Artifact.TemplateType) input.ReadEnum();
            break;
          }
          case 26: {
            if (tokenBase_ == null) {
              TokenBase = new global::TTI.TTF.Taxonomy.Model.Core.TemplateBase();
            }
            input.ReadMessage(TokenBase);
            break;
          }
          case 34: {
            behaviors_.AddEntriesFrom(input, _repeated_behaviors_codec);
            break;
          }
          case 42: {
            behaviorGroups_.AddEntriesFrom(input, _repeated_behaviorGroups_codec);
            break;
          }
          case 50: {
            propertySets_.AddEntriesFrom(input, _repeated_propertySets_codec);
            break;
          }
          case 58: {
            childTokens_.AddEntriesFrom(input, _repeated_childTokens_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Collection of TemplateFormula
  /// </summary>
  public sealed partial class TemplateFormulas : pb::IMessage<TemplateFormulas> {
    private static readonly pb::MessageParser<TemplateFormulas> _parser = new pb::MessageParser<TemplateFormulas>(() => new TemplateFormulas());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateFormulas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateFormulas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateFormulas(TemplateFormulas other) : this() {
      templates_ = other.templates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateFormulas Clone() {
      return new TemplateFormulas(this);
    }

    /// <summary>Field number for the "templates" field.</summary>
    public const int TemplatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula> _repeated_templates_codec
        = pb::FieldCodec.ForMessage(10, global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula> templates_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateFormula> Templates {
      get { return templates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateFormulas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateFormulas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!templates_.Equals(other.templates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= templates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      templates_.WriteTo(output, _repeated_templates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += templates_.CalculateSize(_repeated_templates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateFormulas other) {
      if (other == null) {
        return;
      }
      templates_.Add(other.templates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            templates_.AddEntriesFrom(input, _repeated_templates_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Used to wrap the Base token type for a formula, currently on holds a reference to the symbol of the type being used.
  /// </summary>
  public sealed partial class TemplateBase : pb::IMessage<TemplateBase> {
    private static readonly pb::MessageParser<TemplateBase> _parser = new pb::MessageParser<TemplateBase>(() => new TemplateBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBase(TemplateBase other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBase Clone() {
      return new TemplateBase(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol base_;
    /// <summary>
    ///Usually from the template parent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateBase other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        Base.MergeFrom(other.Base);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(Base);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Used to wrap the Behavior type for a formula, currently on holds a reference to the symbol of the type being used.
  /// </summary>
  public sealed partial class TemplateBehavior : pb::IMessage<TemplateBehavior> {
    private static readonly pb::MessageParser<TemplateBehavior> _parser = new pb::MessageParser<TemplateBehavior>(() => new TemplateBehavior());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateBehavior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBehavior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBehavior(TemplateBehavior other) : this() {
      behavior_ = other.behavior_ != null ? other.behavior_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBehavior Clone() {
      return new TemplateBehavior(this);
    }

    /// <summary>Field number for the "behavior" field.</summary>
    public const int BehaviorFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol behavior_;
    /// <summary>
    ///Referenced behavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol Behavior {
      get { return behavior_; }
      set {
        behavior_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateBehavior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateBehavior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Behavior, other.Behavior)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (behavior_ != null) hash ^= Behavior.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (behavior_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Behavior);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (behavior_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Behavior);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateBehavior other) {
      if (other == null) {
        return;
      }
      if (other.behavior_ != null) {
        if (behavior_ == null) {
          Behavior = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        Behavior.MergeFrom(other.Behavior);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (behavior_ == null) {
              Behavior = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(Behavior);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Used to wrap the BehaviorGroup type for a formula, currently on holds a reference to the symbol of the type being used.
  /// </summary>
  public sealed partial class TemplateBehaviorGroup : pb::IMessage<TemplateBehaviorGroup> {
    private static readonly pb::MessageParser<TemplateBehaviorGroup> _parser = new pb::MessageParser<TemplateBehaviorGroup>(() => new TemplateBehaviorGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateBehaviorGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBehaviorGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBehaviorGroup(TemplateBehaviorGroup other) : this() {
      behaviorGroup_ = other.behaviorGroup_ != null ? other.behaviorGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateBehaviorGroup Clone() {
      return new TemplateBehaviorGroup(this);
    }

    /// <summary>Field number for the "behavior_group" field.</summary>
    public const int BehaviorGroupFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol behaviorGroup_;
    /// <summary>
    ///Referenced BehaviorGroup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol BehaviorGroup {
      get { return behaviorGroup_; }
      set {
        behaviorGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateBehaviorGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateBehaviorGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BehaviorGroup, other.BehaviorGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (behaviorGroup_ != null) hash ^= BehaviorGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (behaviorGroup_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BehaviorGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (behaviorGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BehaviorGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateBehaviorGroup other) {
      if (other == null) {
        return;
      }
      if (other.behaviorGroup_ != null) {
        if (behaviorGroup_ == null) {
          BehaviorGroup = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        BehaviorGroup.MergeFrom(other.BehaviorGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (behaviorGroup_ == null) {
              BehaviorGroup = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(BehaviorGroup);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Used to wrap the PropertySet for a formula, currently on holds a reference to the symbol of the type being used.
  /// </summary>
  public sealed partial class TemplatePropertySet : pb::IMessage<TemplatePropertySet> {
    private static readonly pb::MessageParser<TemplatePropertySet> _parser = new pb::MessageParser<TemplatePropertySet>(() => new TemplatePropertySet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplatePropertySet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplatePropertySet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplatePropertySet(TemplatePropertySet other) : this() {
      propertySet_ = other.propertySet_ != null ? other.propertySet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplatePropertySet Clone() {
      return new TemplatePropertySet(this);
    }

    /// <summary>Field number for the "property_set" field.</summary>
    public const int PropertySetFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol propertySet_;
    /// <summary>
    ///Referenced PropertySet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol PropertySet {
      get { return propertySet_; }
      set {
        propertySet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplatePropertySet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplatePropertySet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PropertySet, other.PropertySet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (propertySet_ != null) hash ^= PropertySet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (propertySet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PropertySet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (propertySet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertySet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplatePropertySet other) {
      if (other == null) {
        return;
      }
      if (other.propertySet_ != null) {
        if (propertySet_ == null) {
          PropertySet = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
        }
        PropertySet.MergeFrom(other.PropertySet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (propertySet_ == null) {
              PropertySet = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol();
            }
            input.ReadMessage(PropertySet);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///TemplateDefinition, the Artifact.ArtifactSymbol.Id is the primary identifier for a TokenTemplate.
  /// </summary>
  public sealed partial class TemplateDefinition : pb::IMessage<TemplateDefinition> {
    private static readonly pb::MessageParser<TemplateDefinition> _parser = new pb::MessageParser<TemplateDefinition>(() => new TemplateDefinition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateDefinition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateDefinition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateDefinition(TemplateDefinition other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      formulaReference_ = other.formulaReference_ != null ? other.formulaReference_.Clone() : null;
      tokenBase_ = other.tokenBase_ != null ? other.tokenBase_.Clone() : null;
      behaviors_ = other.behaviors_.Clone();
      behaviorGroups_ = other.behaviorGroups_.Clone();
      propertySets_ = other.propertySets_.Clone();
      childTokens_ = other.childTokens_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateDefinition Clone() {
      return new TemplateDefinition(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "formula_reference" field.</summary>
    public const int FormulaReferenceFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference formulaReference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference FormulaReference {
      get { return formulaReference_; }
      set {
        formulaReference_ = value;
      }
    }

    /// <summary>Field number for the "token_base" field.</summary>
    public const int TokenBaseFieldNumber = 3;
    private global::TTI.TTF.Taxonomy.Model.Core.BaseReference tokenBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.BaseReference TokenBase {
      get { return tokenBase_; }
      set {
        tokenBase_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> _repeated_behaviors_codec
        = pb::FieldCodec.ForMessage(34, global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> behaviors_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference> Behaviors {
      get { return behaviors_; }
    }

    /// <summary>Field number for the "behavior_groups" field.</summary>
    public const int BehaviorGroupsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference> _repeated_behaviorGroups_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference> behaviorGroups_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference> BehaviorGroups {
      get { return behaviorGroups_; }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference> _repeated_propertySets_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference> propertySets_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference> PropertySets {
      get { return propertySets_; }
    }

    /// <summary>Field number for the "child_tokens" field.</summary>
    public const int ChildTokensFieldNumber = 7;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition> _repeated_childTokens_codec
        = pb::FieldCodec.ForMessage(58, global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition> childTokens_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition> ChildTokens {
      get { return childTokens_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateDefinition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateDefinition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (!object.Equals(FormulaReference, other.FormulaReference)) return false;
      if (!object.Equals(TokenBase, other.TokenBase)) return false;
      if(!behaviors_.Equals(other.behaviors_)) return false;
      if(!behaviorGroups_.Equals(other.behaviorGroups_)) return false;
      if(!propertySets_.Equals(other.propertySets_)) return false;
      if(!childTokens_.Equals(other.childTokens_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (formulaReference_ != null) hash ^= FormulaReference.GetHashCode();
      if (tokenBase_ != null) hash ^= TokenBase.GetHashCode();
      hash ^= behaviors_.GetHashCode();
      hash ^= behaviorGroups_.GetHashCode();
      hash ^= propertySets_.GetHashCode();
      hash ^= childTokens_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (formulaReference_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(FormulaReference);
      }
      if (tokenBase_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TokenBase);
      }
      behaviors_.WriteTo(output, _repeated_behaviors_codec);
      behaviorGroups_.WriteTo(output, _repeated_behaviorGroups_codec);
      propertySets_.WriteTo(output, _repeated_propertySets_codec);
      childTokens_.WriteTo(output, _repeated_childTokens_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (formulaReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FormulaReference);
      }
      if (tokenBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenBase);
      }
      size += behaviors_.CalculateSize(_repeated_behaviors_codec);
      size += behaviorGroups_.CalculateSize(_repeated_behaviorGroups_codec);
      size += propertySets_.CalculateSize(_repeated_propertySets_codec);
      size += childTokens_.CalculateSize(_repeated_childTokens_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateDefinition other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.formulaReference_ != null) {
        if (formulaReference_ == null) {
          FormulaReference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
        }
        FormulaReference.MergeFrom(other.FormulaReference);
      }
      if (other.tokenBase_ != null) {
        if (tokenBase_ == null) {
          TokenBase = new global::TTI.TTF.Taxonomy.Model.Core.BaseReference();
        }
        TokenBase.MergeFrom(other.TokenBase);
      }
      behaviors_.Add(other.behaviors_);
      behaviorGroups_.Add(other.behaviorGroups_);
      propertySets_.Add(other.propertySets_);
      childTokens_.Add(other.childTokens_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            if (formulaReference_ == null) {
              FormulaReference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
            }
            input.ReadMessage(FormulaReference);
            break;
          }
          case 26: {
            if (tokenBase_ == null) {
              TokenBase = new global::TTI.TTF.Taxonomy.Model.Core.BaseReference();
            }
            input.ReadMessage(TokenBase);
            break;
          }
          case 34: {
            behaviors_.AddEntriesFrom(input, _repeated_behaviors_codec);
            break;
          }
          case 42: {
            behaviorGroups_.AddEntriesFrom(input, _repeated_behaviorGroups_codec);
            break;
          }
          case 50: {
            propertySets_.AddEntriesFrom(input, _repeated_propertySets_codec);
            break;
          }
          case 58: {
            childTokens_.AddEntriesFrom(input, _repeated_childTokens_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Collection of TemplateDefinition
  /// </summary>
  public sealed partial class TemplateDefinitions : pb::IMessage<TemplateDefinitions> {
    private static readonly pb::MessageParser<TemplateDefinitions> _parser = new pb::MessageParser<TemplateDefinitions>(() => new TemplateDefinitions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TemplateDefinitions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateDefinitions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateDefinitions(TemplateDefinitions other) : this() {
      definitions_ = other.definitions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TemplateDefinitions Clone() {
      return new TemplateDefinitions(this);
    }

    /// <summary>Field number for the "definitions" field.</summary>
    public const int DefinitionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition> _repeated_definitions_codec
        = pb::FieldCodec.ForMessage(10, global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition> definitions_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TemplateDefinition> Definitions {
      get { return definitions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TemplateDefinitions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TemplateDefinitions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!definitions_.Equals(other.definitions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= definitions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      definitions_.WriteTo(output, _repeated_definitions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += definitions_.CalculateSize(_repeated_definitions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TemplateDefinitions other) {
      if (other == null) {
        return;
      }
      definitions_.Add(other.definitions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            definitions_.AddEntriesFrom(input, _repeated_definitions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Use these to define the influencing behavior's invocation and it's target to influence within the TemplateDefinition, the TTF will use this to construct the Invocation Pipeline.
  /// </summary>
  public sealed partial class InfluenceBinding : pb::IMessage<InfluenceBinding> {
    private static readonly pb::MessageParser<InfluenceBinding> _parser = new pb::MessageParser<InfluenceBinding>(() => new InfluenceBinding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfluenceBinding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfluenceBinding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfluenceBinding(InfluenceBinding other) : this() {
      influencedId_ = other.influencedId_;
      influencedInvocationId_ = other.influencedInvocationId_;
      influenceType_ = other.influenceType_;
      influencingInvocation_ = other.influencingInvocation_ != null ? other.influencingInvocation_.Clone() : null;
      influencedInvocation_ = other.influencedInvocation_ != null ? other.influencedInvocation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfluenceBinding Clone() {
      return new InfluenceBinding(this);
    }

    /// <summary>Field number for the "influenced_id" field.</summary>
    public const int InfluencedIdFieldNumber = 1;
    private string influencedId_ = "";
    /// <summary>
    ///The artifactId being invluenced
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfluencedId {
      get { return influencedId_; }
      set {
        influencedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "influenced_invocation_id" field.</summary>
    public const int InfluencedInvocationIdFieldNumber = 2;
    private string influencedInvocationId_ = "";
    /// <summary>
    ///The invocationId in the influenced artifact to be influenced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfluencedInvocationId {
      get { return influencedInvocationId_; }
      set {
        influencedInvocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "influence_type" field.</summary>
    public const int InfluenceTypeFieldNumber = 3;
    private global::TTI.TTF.Taxonomy.Model.Core.InfluenceType influenceType_ = global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept;
    /// <summary>
    ///Override or intercept
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.InfluenceType InfluenceType {
      get { return influenceType_; }
      set {
        influenceType_ = value;
      }
    }

    /// <summary>Field number for the "influencing_invocation" field.</summary>
    public const int InfluencingInvocationFieldNumber = 4;
    private global::TTI.TTF.Taxonomy.Model.Core.Invocation influencingInvocation_;
    /// <summary>
    ///If it is an intercept, this is the intercepting invocation, if it is override it is the modified invocation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.Invocation InfluencingInvocation {
      get { return influencingInvocation_; }
      set {
        influencingInvocation_ = value;
      }
    }

    /// <summary>Field number for the "influenced_invocation" field.</summary>
    public const int InfluencedInvocationFieldNumber = 5;
    private global::TTI.TTF.Taxonomy.Model.Core.Invocation influencedInvocation_;
    /// <summary>
    /// If it is an intercept this is the invocation that occurs after being intercepted. If it is an override
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.Invocation InfluencedInvocation {
      get { return influencedInvocation_; }
      set {
        influencedInvocation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfluenceBinding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfluenceBinding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InfluencedId != other.InfluencedId) return false;
      if (InfluencedInvocationId != other.InfluencedInvocationId) return false;
      if (InfluenceType != other.InfluenceType) return false;
      if (!object.Equals(InfluencingInvocation, other.InfluencingInvocation)) return false;
      if (!object.Equals(InfluencedInvocation, other.InfluencedInvocation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InfluencedId.Length != 0) hash ^= InfluencedId.GetHashCode();
      if (InfluencedInvocationId.Length != 0) hash ^= InfluencedInvocationId.GetHashCode();
      if (InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) hash ^= InfluenceType.GetHashCode();
      if (influencingInvocation_ != null) hash ^= InfluencingInvocation.GetHashCode();
      if (influencedInvocation_ != null) hash ^= InfluencedInvocation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InfluencedId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InfluencedId);
      }
      if (InfluencedInvocationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InfluencedInvocationId);
      }
      if (InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) {
        output.WriteRawTag(24);
        output.WriteEnum((int) InfluenceType);
      }
      if (influencingInvocation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfluencingInvocation);
      }
      if (influencedInvocation_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(InfluencedInvocation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InfluencedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InfluencedId);
      }
      if (InfluencedInvocationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InfluencedInvocationId);
      }
      if (InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InfluenceType);
      }
      if (influencingInvocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfluencingInvocation);
      }
      if (influencedInvocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfluencedInvocation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfluenceBinding other) {
      if (other == null) {
        return;
      }
      if (other.InfluencedId.Length != 0) {
        InfluencedId = other.InfluencedId;
      }
      if (other.InfluencedInvocationId.Length != 0) {
        InfluencedInvocationId = other.InfluencedInvocationId;
      }
      if (other.InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) {
        InfluenceType = other.InfluenceType;
      }
      if (other.influencingInvocation_ != null) {
        if (influencingInvocation_ == null) {
          InfluencingInvocation = new global::TTI.TTF.Taxonomy.Model.Core.Invocation();
        }
        InfluencingInvocation.MergeFrom(other.InfluencingInvocation);
      }
      if (other.influencedInvocation_ != null) {
        if (influencedInvocation_ == null) {
          InfluencedInvocation = new global::TTI.TTF.Taxonomy.Model.Core.Invocation();
        }
        InfluencedInvocation.MergeFrom(other.InfluencedInvocation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InfluencedId = input.ReadString();
            break;
          }
          case 18: {
            InfluencedInvocationId = input.ReadString();
            break;
          }
          case 24: {
            InfluenceType = (global::TTI.TTF.Taxonomy.Model.Core.InfluenceType) input.ReadEnum();
            break;
          }
          case 34: {
            if (influencingInvocation_ == null) {
              InfluencingInvocation = new global::TTI.TTF.Taxonomy.Model.Core.Invocation();
            }
            input.ReadMessage(InfluencingInvocation);
            break;
          }
          case 42: {
            if (influencedInvocation_ == null) {
              InfluencedInvocation = new global::TTI.TTF.Taxonomy.Model.Core.Invocation();
            }
            input.ReadMessage(InfluencedInvocation);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Used to dynamically build the entire Token Specification with all objects merged. Handy for documentation.
  /// </summary>
  public sealed partial class TokenSpecification : pb::IMessage<TokenSpecification> {
    private static readonly pb::MessageParser<TokenSpecification> _parser = new pb::MessageParser<TokenSpecification>(() => new TokenSpecification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenSpecification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenSpecification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenSpecification(TokenSpecification other) : this() {
      specificationHash_ = other.specificationHash_;
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      definitionReference_ = other.definitionReference_ != null ? other.definitionReference_.Clone() : null;
      tokenBase_ = other.tokenBase_ != null ? other.tokenBase_.Clone() : null;
      behaviors_ = other.behaviors_.Clone();
      behaviorGroups_ = other.behaviorGroups_.Clone();
      propertySets_ = other.propertySets_.Clone();
      childTokens_ = other.childTokens_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenSpecification Clone() {
      return new TokenSpecification(this);
    }

    /// <summary>Field number for the "specification_hash" field.</summary>
    public const int SpecificationHashFieldNumber = 1;
    private string specificationHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpecificationHash {
      get { return specificationHash_; }
      set {
        specificationHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "definition_reference" field.</summary>
    public const int DefinitionReferenceFieldNumber = 3;
    private global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference definitionReference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference DefinitionReference {
      get { return definitionReference_; }
      set {
        definitionReference_ = value;
      }
    }

    /// <summary>Field number for the "token_base" field.</summary>
    public const int TokenBaseFieldNumber = 4;
    private global::TTI.TTF.Taxonomy.Model.Core.Base tokenBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.Base TokenBase {
      get { return tokenBase_; }
      set {
        tokenBase_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.BehaviorSpecification> _repeated_behaviors_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Core.BehaviorSpecification.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorSpecification> behaviors_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorSpecification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorSpecification> Behaviors {
      get { return behaviors_; }
    }

    /// <summary>Field number for the "behavior_groups" field.</summary>
    public const int BehaviorGroupsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupSpecification> _repeated_behaviorGroups_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupSpecification.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupSpecification> behaviorGroups_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupSpecification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupSpecification> BehaviorGroups {
      get { return behaviorGroups_; }
    }

    /// <summary>Field number for the "property_sets" field.</summary>
    public const int PropertySetsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.PropertySetSpecification> _repeated_propertySets_codec
        = pb::FieldCodec.ForMessage(58, global::TTI.TTF.Taxonomy.Model.Core.PropertySetSpecification.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySetSpecification> propertySets_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySetSpecification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySetSpecification> PropertySets {
      get { return propertySets_; }
    }

    /// <summary>Field number for the "child_tokens" field.</summary>
    public const int ChildTokensFieldNumber = 8;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.TokenSpecification> _repeated_childTokens_codec
        = pb::FieldCodec.ForMessage(66, global::TTI.TTF.Taxonomy.Model.Core.TokenSpecification.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TokenSpecification> childTokens_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TokenSpecification>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.TokenSpecification> ChildTokens {
      get { return childTokens_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenSpecification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenSpecification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpecificationHash != other.SpecificationHash) return false;
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (!object.Equals(DefinitionReference, other.DefinitionReference)) return false;
      if (!object.Equals(TokenBase, other.TokenBase)) return false;
      if(!behaviors_.Equals(other.behaviors_)) return false;
      if(!behaviorGroups_.Equals(other.behaviorGroups_)) return false;
      if(!propertySets_.Equals(other.propertySets_)) return false;
      if(!childTokens_.Equals(other.childTokens_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SpecificationHash.Length != 0) hash ^= SpecificationHash.GetHashCode();
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (definitionReference_ != null) hash ^= DefinitionReference.GetHashCode();
      if (tokenBase_ != null) hash ^= TokenBase.GetHashCode();
      hash ^= behaviors_.GetHashCode();
      hash ^= behaviorGroups_.GetHashCode();
      hash ^= propertySets_.GetHashCode();
      hash ^= childTokens_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SpecificationHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SpecificationHash);
      }
      if (artifact_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Artifact);
      }
      if (definitionReference_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DefinitionReference);
      }
      if (tokenBase_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TokenBase);
      }
      behaviors_.WriteTo(output, _repeated_behaviors_codec);
      behaviorGroups_.WriteTo(output, _repeated_behaviorGroups_codec);
      propertySets_.WriteTo(output, _repeated_propertySets_codec);
      childTokens_.WriteTo(output, _repeated_childTokens_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SpecificationHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecificationHash);
      }
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (definitionReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefinitionReference);
      }
      if (tokenBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenBase);
      }
      size += behaviors_.CalculateSize(_repeated_behaviors_codec);
      size += behaviorGroups_.CalculateSize(_repeated_behaviorGroups_codec);
      size += propertySets_.CalculateSize(_repeated_propertySets_codec);
      size += childTokens_.CalculateSize(_repeated_childTokens_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenSpecification other) {
      if (other == null) {
        return;
      }
      if (other.SpecificationHash.Length != 0) {
        SpecificationHash = other.SpecificationHash;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.definitionReference_ != null) {
        if (definitionReference_ == null) {
          DefinitionReference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
        }
        DefinitionReference.MergeFrom(other.DefinitionReference);
      }
      if (other.tokenBase_ != null) {
        if (tokenBase_ == null) {
          TokenBase = new global::TTI.TTF.Taxonomy.Model.Core.Base();
        }
        TokenBase.MergeFrom(other.TokenBase);
      }
      behaviors_.Add(other.behaviors_);
      behaviorGroups_.Add(other.behaviorGroups_);
      propertySets_.Add(other.propertySets_);
      childTokens_.Add(other.childTokens_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SpecificationHash = input.ReadString();
            break;
          }
          case 18: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 26: {
            if (definitionReference_ == null) {
              DefinitionReference = new global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactReference();
            }
            input.ReadMessage(DefinitionReference);
            break;
          }
          case 34: {
            if (tokenBase_ == null) {
              TokenBase = new global::TTI.TTF.Taxonomy.Model.Core.Base();
            }
            input.ReadMessage(TokenBase);
            break;
          }
          case 42: {
            behaviors_.AddEntriesFrom(input, _repeated_behaviors_codec);
            break;
          }
          case 50: {
            behaviorGroups_.AddEntriesFrom(input, _repeated_behaviorGroups_codec);
            break;
          }
          case 58: {
            propertySets_.AddEntriesFrom(input, _repeated_propertySets_codec);
            break;
          }
          case 66: {
            childTokens_.AddEntriesFrom(input, _repeated_childTokens_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Dynamically generated from the Behavior and BehaviorReference from a TemplateDefinition. Values that are set in the BehaviorReference are merged with the Behavior artifact to provide specification property values.
  /// </summary>
  public sealed partial class BehaviorSpecification : pb::IMessage<BehaviorSpecification> {
    private static readonly pb::MessageParser<BehaviorSpecification> _parser = new pb::MessageParser<BehaviorSpecification>(() => new BehaviorSpecification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorSpecification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorSpecification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorSpecification(BehaviorSpecification other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      isExternal_ = other.isExternal_;
      constructorType_ = other.constructorType_;
      constructor_ = other.constructor_ != null ? other.constructor_.Clone() : null;
      invocations_ = other.invocations_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorSpecification Clone() {
      return new BehaviorSpecification(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "is_external" field.</summary>
    public const int IsExternalFieldNumber = 2;
    private bool isExternal_;
    /// <summary>
    ///Indicator if this is externally visible or internal only.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExternal {
      get { return isExternal_; }
      set {
        isExternal_ = value;
      }
    }

    /// <summary>Field number for the "constructor_type" field.</summary>
    public const int ConstructorTypeFieldNumber = 3;
    private string constructorType_ = "";
    /// <summary>
    ///Proto message name empty if there is no constructor, used when unpacking the Any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConstructorType {
      get { return constructorType_; }
      set {
        constructorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constructor" field.</summary>
    public const int ConstructorFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Any constructor_;
    /// <summary>
    ///Optionally retrieved for behaviors like Role Support that needs input when setting up the roles when the token class is created.  Uses Any as the type as it will not be known by the framework.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Constructor {
      get { return constructor_; }
      set {
        constructor_ = value;
      }
    }

    /// <summary>Field number for the "invocations" field.</summary>
    public const int InvocationsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding> _repeated_invocations_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding> invocations_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding>();
    /// <summary>
    ///Definitions only will not have values, null for string or composite types and 0 for numbers, false for bools.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding> Invocations {
      get { return invocations_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.Property> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Taxonomy.Model.Core.Property.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property>();
    /// <summary>
    ///For any properties that should be added to the token if the behavior is implemented, values not set, should consider a dependent property-set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.Property> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorSpecification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorSpecification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if (IsExternal != other.IsExternal) return false;
      if (ConstructorType != other.ConstructorType) return false;
      if (!object.Equals(Constructor, other.Constructor)) return false;
      if(!invocations_.Equals(other.invocations_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      if (IsExternal != false) hash ^= IsExternal.GetHashCode();
      if (ConstructorType.Length != 0) hash ^= ConstructorType.GetHashCode();
      if (constructor_ != null) hash ^= Constructor.GetHashCode();
      hash ^= invocations_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      if (IsExternal != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsExternal);
      }
      if (ConstructorType.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConstructorType);
      }
      if (constructor_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Constructor);
      }
      invocations_.WriteTo(output, _repeated_invocations_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      if (IsExternal != false) {
        size += 1 + 1;
      }
      if (ConstructorType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConstructorType);
      }
      if (constructor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constructor);
      }
      size += invocations_.CalculateSize(_repeated_invocations_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorSpecification other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      if (other.IsExternal != false) {
        IsExternal = other.IsExternal;
      }
      if (other.ConstructorType.Length != 0) {
        ConstructorType = other.ConstructorType;
      }
      if (other.constructor_ != null) {
        if (constructor_ == null) {
          Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Constructor.MergeFrom(other.Constructor);
      }
      invocations_.Add(other.invocations_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 16: {
            IsExternal = input.ReadBool();
            break;
          }
          case 26: {
            ConstructorType = input.ReadString();
            break;
          }
          case 34: {
            if (constructor_ == null) {
              Constructor = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Constructor);
            break;
          }
          case 42: {
            invocations_.AddEntriesFrom(input, _repeated_invocations_codec);
            break;
          }
          case 50: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Dynamically generated from the Behavior and PropertySetReference from a TemplateDefinition. Values that are set in the PropertySetReference are merged with the Behavior artifact to provide specification property values.
  /// </summary>
  public sealed partial class PropertySetSpecification : pb::IMessage<PropertySetSpecification> {
    private static readonly pb::MessageParser<PropertySetSpecification> _parser = new pb::MessageParser<PropertySetSpecification>(() => new PropertySetSpecification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySetSpecification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetSpecification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetSpecification(PropertySetSpecification other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySetSpecification Clone() {
      return new PropertySetSpecification(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    /// <summary>
    ///Full artifact for the property set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(50, global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification>();
    /// <summary>
    ///For any properties that should be added to the token if the behavior is implemented, values not set, should consider a dependent property-set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySetSpecification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySetSpecification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySetSpecification other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 50: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PropertySpecification : pb::IMessage<PropertySpecification> {
    private static readonly pb::MessageParser<PropertySpecification> _parser = new pb::MessageParser<PropertySpecification>(() => new PropertySpecification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PropertySpecification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySpecification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySpecification(PropertySpecification other) : this() {
      name_ = other.name_;
      valueDescription_ = other.valueDescription_;
      templateValue_ = other.templateValue_;
      propertyInvocations_ = other.propertyInvocations_.Clone();
      properties_ = other.properties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PropertySpecification Clone() {
      return new PropertySpecification(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    ///Property name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value_description" field.</summary>
    public const int ValueDescriptionFieldNumber = 2;
    private string valueDescription_ = "";
    /// <summary>
    ///Description of the property
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ValueDescription {
      get { return valueDescription_; }
      set {
        valueDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "template_value" field.</summary>
    public const int TemplateValueFieldNumber = 3;
    private string templateValue_ = "";
    /// <summary>
    ///Value, if needed, when applied to template
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TemplateValue {
      get { return templateValue_; }
      set {
        templateValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "property_invocations" field.</summary>
    public const int PropertyInvocationsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding> _repeated_propertyInvocations_codec
        = pb::FieldCodec.ForMessage(34, global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding> propertyInvocations_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding>();
    /// <summary>
    ///Needed for non-behavioral properties
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding> PropertyInvocations {
      get { return propertyInvocations_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification> _repeated_properties_codec
        = pb::FieldCodec.ForMessage(42, global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification> properties_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification>();
    /// <summary>
    ///Nested Properties.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Core.PropertySpecification> Properties {
      get { return properties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PropertySpecification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PropertySpecification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ValueDescription != other.ValueDescription) return false;
      if (TemplateValue != other.TemplateValue) return false;
      if(!propertyInvocations_.Equals(other.propertyInvocations_)) return false;
      if(!properties_.Equals(other.properties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ValueDescription.Length != 0) hash ^= ValueDescription.GetHashCode();
      if (TemplateValue.Length != 0) hash ^= TemplateValue.GetHashCode();
      hash ^= propertyInvocations_.GetHashCode();
      hash ^= properties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ValueDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ValueDescription);
      }
      if (TemplateValue.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TemplateValue);
      }
      propertyInvocations_.WriteTo(output, _repeated_propertyInvocations_codec);
      properties_.WriteTo(output, _repeated_properties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ValueDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueDescription);
      }
      if (TemplateValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TemplateValue);
      }
      size += propertyInvocations_.CalculateSize(_repeated_propertyInvocations_codec);
      size += properties_.CalculateSize(_repeated_properties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PropertySpecification other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ValueDescription.Length != 0) {
        ValueDescription = other.ValueDescription;
      }
      if (other.TemplateValue.Length != 0) {
        TemplateValue = other.TemplateValue;
      }
      propertyInvocations_.Add(other.propertyInvocations_);
      properties_.Add(other.properties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ValueDescription = input.ReadString();
            break;
          }
          case 26: {
            TemplateValue = input.ReadString();
            break;
          }
          case 34: {
            propertyInvocations_.AddEntriesFrom(input, _repeated_propertyInvocations_codec);
            break;
          }
          case 42: {
            properties_.AddEntriesFrom(input, _repeated_properties_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BehaviorGroupSpecification : pb::IMessage<BehaviorGroupSpecification> {
    private static readonly pb::MessageParser<BehaviorGroupSpecification> _parser = new pb::MessageParser<BehaviorGroupSpecification>(() => new BehaviorGroupSpecification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BehaviorGroupSpecification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroupSpecification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroupSpecification(BehaviorGroupSpecification other) : this() {
      artifact_ = other.artifact_ != null ? other.artifact_.Clone() : null;
      behaviors_ = other.behaviors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BehaviorGroupSpecification Clone() {
      return new BehaviorGroupSpecification(this);
    }

    /// <summary>Field number for the "artifact" field.</summary>
    public const int ArtifactFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Artifact.Artifact artifact_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Artifact.Artifact Artifact {
      get { return artifact_; }
      set {
        artifact_ = value;
      }
    }

    /// <summary>Field number for the "behaviors" field.</summary>
    public const int BehaviorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> _repeated_behaviors_codec
        = pb::FieldCodec.ForMessage(18, global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol.Parser);
    private readonly pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> behaviors_ = new pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol>();
    /// <summary>
    ///The behaviors in the group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TTI.TTF.Taxonomy.Model.Artifact.ArtifactSymbol> Behaviors {
      get { return behaviors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BehaviorGroupSpecification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BehaviorGroupSpecification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Artifact, other.Artifact)) return false;
      if(!behaviors_.Equals(other.behaviors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (artifact_ != null) hash ^= Artifact.GetHashCode();
      hash ^= behaviors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (artifact_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Artifact);
      }
      behaviors_.WriteTo(output, _repeated_behaviors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (artifact_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Artifact);
      }
      size += behaviors_.CalculateSize(_repeated_behaviors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BehaviorGroupSpecification other) {
      if (other == null) {
        return;
      }
      if (other.artifact_ != null) {
        if (artifact_ == null) {
          Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
        }
        Artifact.MergeFrom(other.Artifact);
      }
      behaviors_.Add(other.behaviors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (artifact_ == null) {
              Artifact = new global::TTI.TTF.Taxonomy.Model.Artifact.Artifact();
            }
            input.ReadMessage(Artifact);
            break;
          }
          case 18: {
            behaviors_.AddEntriesFrom(input, _repeated_behaviors_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///An InvocationBinding is used in a TemplateDefinition to create the influence tree for behaviors that influence other behaviors or PropertySets. It builds the influence dependecies based on the definition of the influence and the values set in the definition.
  /// </summary>
  public sealed partial class InvocationBinding : pb::IMessage<InvocationBinding> {
    private static readonly pb::MessageParser<InvocationBinding> _parser = new pb::MessageParser<InvocationBinding>(() => new InvocationBinding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InvocationBinding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationBinding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationBinding(InvocationBinding other) : this() {
      influence_ = other.influence_ != null ? other.influence_.Clone() : null;
      invocationStep_ = other.invocationStep_ != null ? other.invocationStep_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InvocationBinding Clone() {
      return new InvocationBinding(this);
    }

    /// <summary>Field number for the "influence" field.</summary>
    public const int InfluenceFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.Influence influence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.Influence Influence {
      get { return influence_; }
      set {
        influence_ = value;
      }
    }

    /// <summary>Field number for the "invocation_step" field.</summary>
    public const int InvocationStepFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep invocationStep_;
    /// <summary>
    ///Nested invocation steps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep InvocationStep {
      get { return invocationStep_; }
      set {
        invocationStep_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InvocationBinding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InvocationBinding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Influence, other.Influence)) return false;
      if (!object.Equals(InvocationStep, other.InvocationStep)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (influence_ != null) hash ^= Influence.GetHashCode();
      if (invocationStep_ != null) hash ^= InvocationStep.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (influence_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Influence);
      }
      if (invocationStep_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InvocationStep);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (influence_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Influence);
      }
      if (invocationStep_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InvocationStep);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InvocationBinding other) {
      if (other == null) {
        return;
      }
      if (other.influence_ != null) {
        if (influence_ == null) {
          Influence = new global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.Influence();
        }
        Influence.MergeFrom(other.Influence);
      }
      if (other.invocationStep_ != null) {
        if (invocationStep_ == null) {
          InvocationStep = new global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep();
        }
        InvocationStep.MergeFrom(other.InvocationStep);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (influence_ == null) {
              Influence = new global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.Influence();
            }
            input.ReadMessage(Influence);
            break;
          }
          case 18: {
            if (invocationStep_ == null) {
              InvocationStep = new global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep();
            }
            input.ReadMessage(InvocationStep);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the InvocationBinding message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Influence : pb::IMessage<Influence> {
        private static readonly pb::MessageParser<Influence> _parser = new pb::MessageParser<Influence>(() => new Influence());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Influence> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Influence() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Influence(Influence other) : this() {
          influenceType_ = other.influenceType_;
          influencingId_ = other.influencingId_;
          influencingInvocationId_ = other.influencingInvocationId_;
          influencedId_ = other.influencedId_;
          influencedInvocationId_ = other.influencedInvocationId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Influence Clone() {
          return new Influence(this);
        }

        /// <summary>Field number for the "influence_type" field.</summary>
        public const int InfluenceTypeFieldNumber = 1;
        private global::TTI.TTF.Taxonomy.Model.Core.InfluenceType influenceType_ = global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept;
        /// <summary>
        ///Intercept of overwrite
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TTI.TTF.Taxonomy.Model.Core.InfluenceType InfluenceType {
          get { return influenceType_; }
          set {
            influenceType_ = value;
          }
        }

        /// <summary>Field number for the "influencing_id" field.</summary>
        public const int InfluencingIdFieldNumber = 2;
        private string influencingId_ = "";
        /// <summary>
        ///The influencing artifactId
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InfluencingId {
          get { return influencingId_; }
          set {
            influencingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "influencing_invocation_id" field.</summary>
        public const int InfluencingInvocationIdFieldNumber = 3;
        private string influencingInvocationId_ = "";
        /// <summary>
        ///The InvocationId in the Influencing Behavior.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InfluencingInvocationId {
          get { return influencingInvocationId_; }
          set {
            influencingInvocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "influenced_id" field.</summary>
        public const int InfluencedIdFieldNumber = 4;
        private string influencedId_ = "";
        /// <summary>
        ///The Behavior or PropertySet that is being influenced.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InfluencedId {
          get { return influencedId_; }
          set {
            influencedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "influenced_invocation_id" field.</summary>
        public const int InfluencedInvocationIdFieldNumber = 5;
        private string influencedInvocationId_ = "";
        /// <summary>
        ///The invocation on the PropertySet or Behavior being influenced.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string InfluencedInvocationId {
          get { return influencedInvocationId_; }
          set {
            influencedInvocationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Influence);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Influence other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (InfluenceType != other.InfluenceType) return false;
          if (InfluencingId != other.InfluencingId) return false;
          if (InfluencingInvocationId != other.InfluencingInvocationId) return false;
          if (InfluencedId != other.InfluencedId) return false;
          if (InfluencedInvocationId != other.InfluencedInvocationId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) hash ^= InfluenceType.GetHashCode();
          if (InfluencingId.Length != 0) hash ^= InfluencingId.GetHashCode();
          if (InfluencingInvocationId.Length != 0) hash ^= InfluencingInvocationId.GetHashCode();
          if (InfluencedId.Length != 0) hash ^= InfluencedId.GetHashCode();
          if (InfluencedInvocationId.Length != 0) hash ^= InfluencedInvocationId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) {
            output.WriteRawTag(8);
            output.WriteEnum((int) InfluenceType);
          }
          if (InfluencingId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(InfluencingId);
          }
          if (InfluencingInvocationId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(InfluencingInvocationId);
          }
          if (InfluencedId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(InfluencedId);
          }
          if (InfluencedInvocationId.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(InfluencedInvocationId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InfluenceType);
          }
          if (InfluencingId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InfluencingId);
          }
          if (InfluencingInvocationId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InfluencingInvocationId);
          }
          if (InfluencedId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InfluencedId);
          }
          if (InfluencedInvocationId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(InfluencedInvocationId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Influence other) {
          if (other == null) {
            return;
          }
          if (other.InfluenceType != global::TTI.TTF.Taxonomy.Model.Core.InfluenceType.Intercept) {
            InfluenceType = other.InfluenceType;
          }
          if (other.InfluencingId.Length != 0) {
            InfluencingId = other.InfluencingId;
          }
          if (other.InfluencingInvocationId.Length != 0) {
            InfluencingInvocationId = other.InfluencingInvocationId;
          }
          if (other.InfluencedId.Length != 0) {
            InfluencedId = other.InfluencedId;
          }
          if (other.InfluencedInvocationId.Length != 0) {
            InfluencedInvocationId = other.InfluencedInvocationId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                InfluenceType = (global::TTI.TTF.Taxonomy.Model.Core.InfluenceType) input.ReadEnum();
                break;
              }
              case 18: {
                InfluencingId = input.ReadString();
                break;
              }
              case 26: {
                InfluencingInvocationId = input.ReadString();
                break;
              }
              case 34: {
                InfluencedId = input.ReadString();
                break;
              }
              case 42: {
                InfluencedInvocationId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      ///Used to created the dependency tree of influencing and influenced as defined in the TemplateDefinition.
      /// </summary>
      public sealed partial class InvocationStep : pb::IMessage<InvocationStep> {
        private static readonly pb::MessageParser<InvocationStep> _parser = new pb::MessageParser<InvocationStep>(() => new InvocationStep());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InvocationStep> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvocationStep() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvocationStep(InvocationStep other) : this() {
          invocation_ = other.invocation_ != null ? other.invocation_.Clone() : null;
          nextInvocation_ = other.nextInvocation_ != null ? other.nextInvocation_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InvocationStep Clone() {
          return new InvocationStep(this);
        }

        /// <summary>Field number for the "invocation" field.</summary>
        public const int InvocationFieldNumber = 1;
        private global::TTI.TTF.Taxonomy.Model.Core.Invocation invocation_;
        /// <summary>
        ///Current invocation
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TTI.TTF.Taxonomy.Model.Core.Invocation Invocation {
          get { return invocation_; }
          set {
            invocation_ = value;
          }
        }

        /// <summary>Field number for the "next_invocation" field.</summary>
        public const int NextInvocationFieldNumber = 2;
        private global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep nextInvocation_;
        /// <summary>
        ///Next invocation
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep NextInvocation {
          get { return nextInvocation_; }
          set {
            nextInvocation_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InvocationStep);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InvocationStep other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Invocation, other.Invocation)) return false;
          if (!object.Equals(NextInvocation, other.NextInvocation)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (invocation_ != null) hash ^= Invocation.GetHashCode();
          if (nextInvocation_ != null) hash ^= NextInvocation.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (invocation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Invocation);
          }
          if (nextInvocation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(NextInvocation);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (invocation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Invocation);
          }
          if (nextInvocation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextInvocation);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InvocationStep other) {
          if (other == null) {
            return;
          }
          if (other.invocation_ != null) {
            if (invocation_ == null) {
              Invocation = new global::TTI.TTF.Taxonomy.Model.Core.Invocation();
            }
            Invocation.MergeFrom(other.Invocation);
          }
          if (other.nextInvocation_ != null) {
            if (nextInvocation_ == null) {
              NextInvocation = new global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep();
            }
            NextInvocation.MergeFrom(other.NextInvocation);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (invocation_ == null) {
                  Invocation = new global::TTI.TTF.Taxonomy.Model.Core.Invocation();
                }
                input.ReadMessage(Invocation);
                break;
              }
              case 18: {
                if (nextInvocation_ == null) {
                  NextInvocation = new global::TTI.TTF.Taxonomy.Model.Core.InvocationBinding.Types.InvocationStep();
                }
                input.ReadMessage(NextInvocation);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  ///Token Base
  /// </summary>
  public sealed partial class TokenBase : pb::IMessage<TokenBase> {
    private static readonly pb::MessageParser<TokenBase> _parser = new pb::MessageParser<TokenBase>(() => new TokenBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBase(TokenBase other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBase Clone() {
      return new TokenBase(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Core.Base base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.Base Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Core.BaseReference values_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.BaseReference Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenBase other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::TTI.TTF.Taxonomy.Model.Core.Base();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::TTI.TTF.Taxonomy.Model.Core.BaseReference();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::TTI.TTF.Taxonomy.Model.Core.Base();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::TTI.TTF.Taxonomy.Model.Core.BaseReference();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Token Behavior
  /// </summary>
  public sealed partial class TokenBehavior : pb::IMessage<TokenBehavior> {
    private static readonly pb::MessageParser<TokenBehavior> _parser = new pb::MessageParser<TokenBehavior>(() => new TokenBehavior());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenBehavior> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBehavior() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBehavior(TokenBehavior other) : this() {
      behavior_ = other.behavior_ != null ? other.behavior_.Clone() : null;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBehavior Clone() {
      return new TokenBehavior(this);
    }

    /// <summary>Field number for the "behavior" field.</summary>
    public const int BehaviorFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Core.Behavior behavior_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.Behavior Behavior {
      get { return behavior_; }
      set {
        behavior_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference values_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenBehavior);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenBehavior other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Behavior, other.Behavior)) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (behavior_ != null) hash ^= Behavior.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (behavior_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Behavior);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (behavior_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Behavior);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenBehavior other) {
      if (other == null) {
        return;
      }
      if (other.behavior_ != null) {
        if (behavior_ == null) {
          Behavior = new global::TTI.TTF.Taxonomy.Model.Core.Behavior();
        }
        Behavior.MergeFrom(other.Behavior);
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (behavior_ == null) {
              Behavior = new global::TTI.TTF.Taxonomy.Model.Core.Behavior();
            }
            input.ReadMessage(Behavior);
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::TTI.TTF.Taxonomy.Model.Core.BehaviorReference();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Token BehaviorGroup
  /// </summary>
  public sealed partial class TokenBehaviorGroup : pb::IMessage<TokenBehaviorGroup> {
    private static readonly pb::MessageParser<TokenBehaviorGroup> _parser = new pb::MessageParser<TokenBehaviorGroup>(() => new TokenBehaviorGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenBehaviorGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBehaviorGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBehaviorGroup(TokenBehaviorGroup other) : this() {
      behavior_ = other.behavior_ != null ? other.behavior_.Clone() : null;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenBehaviorGroup Clone() {
      return new TokenBehaviorGroup(this);
    }

    /// <summary>Field number for the "behavior" field.</summary>
    public const int BehaviorFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup behavior_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup Behavior {
      get { return behavior_; }
      set {
        behavior_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference values_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenBehaviorGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenBehaviorGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Behavior, other.Behavior)) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (behavior_ != null) hash ^= Behavior.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (behavior_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Behavior);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (behavior_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Behavior);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenBehaviorGroup other) {
      if (other == null) {
        return;
      }
      if (other.behavior_ != null) {
        if (behavior_ == null) {
          Behavior = new global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup();
        }
        Behavior.MergeFrom(other.Behavior);
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (behavior_ == null) {
              Behavior = new global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroup();
            }
            input.ReadMessage(Behavior);
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::TTI.TTF.Taxonomy.Model.Core.BehaviorGroupReference();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Token PropertySet
  /// </summary>
  public sealed partial class TokenPropertySet : pb::IMessage<TokenPropertySet> {
    private static readonly pb::MessageParser<TokenPropertySet> _parser = new pb::MessageParser<TokenPropertySet>(() => new TokenPropertySet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenPropertySet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TTI.TTF.Taxonomy.Model.Core.CoreReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenPropertySet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenPropertySet(TokenPropertySet other) : this() {
      propertySet_ = other.propertySet_ != null ? other.propertySet_.Clone() : null;
      values_ = other.values_ != null ? other.values_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenPropertySet Clone() {
      return new TokenPropertySet(this);
    }

    /// <summary>Field number for the "property_set" field.</summary>
    public const int PropertySetFieldNumber = 1;
    private global::TTI.TTF.Taxonomy.Model.Core.PropertySet propertySet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.PropertySet PropertySet {
      get { return propertySet_; }
      set {
        propertySet_ = value;
      }
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 2;
    private global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference values_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference Values {
      get { return values_; }
      set {
        values_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenPropertySet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenPropertySet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PropertySet, other.PropertySet)) return false;
      if (!object.Equals(Values, other.Values)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (propertySet_ != null) hash ^= PropertySet.GetHashCode();
      if (values_ != null) hash ^= Values.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (propertySet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PropertySet);
      }
      if (values_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Values);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (propertySet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PropertySet);
      }
      if (values_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Values);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenPropertySet other) {
      if (other == null) {
        return;
      }
      if (other.propertySet_ != null) {
        if (propertySet_ == null) {
          PropertySet = new global::TTI.TTF.Taxonomy.Model.Core.PropertySet();
        }
        PropertySet.MergeFrom(other.PropertySet);
      }
      if (other.values_ != null) {
        if (values_ == null) {
          Values = new global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference();
        }
        Values.MergeFrom(other.Values);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (propertySet_ == null) {
              PropertySet = new global::TTI.TTF.Taxonomy.Model.Core.PropertySet();
            }
            input.ReadMessage(PropertySet);
            break;
          }
          case 18: {
            if (values_ == null) {
              Values = new global::TTI.TTF.Taxonomy.Model.Core.PropertySetReference();
            }
            input.ReadMessage(Values);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
