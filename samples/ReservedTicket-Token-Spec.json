{
  "specificationHash": "5f770a8cbdd5da098cb989141df9cc8b3af63b5006b4effedfd38013ed2622c5",
  "artifact": {
    "artifactSymbol": {
      "id": "8dab45c9-cf5d-4752-b4dd-d2192a22886a",
      "type": "TOKEN_TEMPLATE",
      "visual": "&tau<sub>N</sub><i>{~d,t,g,SC}</i>",
      "tooling": "tN{~d,t,g,SC}",
      "version": "1.0",
      "templateValidated": true
    },
    "name": "ReservedTicket",
    "aliases": [
      "Reserved Seating",
      "Ailine Ticket"
    ],
    "artifactDefinition": {
      "businessDescription": "This is a Variable Supply Whole Non-Fungible where the total supply can vary. The tokens in this class will be of the same series, sharing those properties, but also have unique values like seat number. It is Whole by setting the Decimals property on the subdividable behavior = 0. A token instance can be burned.",
      "businessExample": "This token can be used to represent a unique item in a shared context, like a reserved seat at a concert.",
      "analogies": [
        {
          "name": "Reserved Seating",
          "description": "All tokens in the class share the venue, date and time for the event, but have a unique seat number."
        }
      ]
    },
    "dependencies": [
      {
        "description": "A whole non-fungible token",
        "symbol": {
          "id": "3c05a856-c901-4c30-917e-df9feed1c8de",
          "visual": "&tau<sub>N</sub>{<i>~d</i>}",
          "tooling": "tN{~d}",
          "version": "1.0",
          "templateValidated": true
        }
      }
    ],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "ReservedTicket.proto"
      },
      {
        "content": "UML",
        "fileName": "ReservedTicket.md"
      }
    ],
    "maps": {}
  },
  "tokenBase": {
    "artifact": {
      "artifactSymbol": {
        "id": "3c05a856-c901-4c30-917e-df9feed1c8de",
        "visual": "&tau<sub>N</sub>{<i>~d</i>}",
        "tooling": "tN{~d}",
        "version": "1.0",
        "templateValidated": true
      },
      "name": "Whole Non-Fungible Token",
      "aliases": [
        "Title",
        "Deed"
      ],
      "artifactDefinition": {
        "businessDescription": "Every non-fungible token is unique. A non-fungible token is not interchangeable with other tokens of the same class but have some shared properties while also having unique property values between instances. These tokens are whole tokens and can have quantities greater than 1 and also could support variable supply.",
        "businessExample": "CryptoKitties, Art, Reserved Seat for an event.",
        "analogies": [
          {
            "name": "Property Title",
            "description": "The physical property title, land for example, have the identical look and feel from the paper, colors and seal. The difference between them are the values like property address, plot numbers, etc. These values make the title unique. There are some properties on a class of titles that are the same, like the county or jurisdiction the property is in. For titles that have some shared values and unique values, it may make more sense to define them in the same class."
          },
          {
            "name": "Art",
            "description": "The valuable painting or other unique piece of art may not share any property values with other paintings, unless the artist is extremely prolific in generating tens of thousands of pieces of art, it would make sense to define each piece of art as its own class. Meaning there would be only a single piece of art represented by the token class. If the art cannot be sub-divided, meaning there can be no fractional owners, this token class can be a singleton if the quantity in the class is set to 1. A singleton has only one instance in the class, essentially meaning the class is the instance, and not be sub-dividable and no new tokens can be minted in the class."
          }
        ],
        "comments": "Non-fungible tokens require additional thought about how these tokens may or may not be grouped together in the same class."
      },
      "dependencies": [
        {
          "description": "Base Token Definition",
          "symbol": {
            "id": "5f5c4e7f-8ff1-4767-b59c-799d49753226",
            "visual": "&tau",
            "tooling": "t",
            "version": "1.0",
            "templateValidated": true
          }
        }
      ],
      "incompatibleWithSymbols": [
        {
          "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
          "type": "BEHAVIOR",
          "visual": "<i>d</i>",
          "tooling": "d"
        }
      ],
      "maps": {}
    },
    "tokenType": "NON_FUNGIBLE",
    "tokenUnit": "WHOLE",
    "constructorName": "Constructor"
  },
  "behaviors": [
    {
      "artifact": {
        "artifactSymbol": {
          "id": "d5807a8e-879b-4885-95fa-f09ba2a22172",
          "type": "BEHAVIOR",
          "visual": "<i>~d</i>",
          "tooling": "~d",
          "version": "1.0"
        },
        "name": "Non-Subdividable",
        "aliases": [
          "Whole"
        ],
        "artifactDefinition": {
          "businessDescription": "An ability or restriction on the token where it cannot be subdivided from a single whole token into fractions. Sets the base token Decimals property to 0 which will make the token non-sub-dividable and a whole token is the smallest ownable unit of the token.",
          "businessExample": "Non-subdividable is common for items where subdivision does not make sense, like a property title, inventory item or invoice.",
          "analogies": [
            {
              "name": "Non-Fractional",
              "description": "It is not possible to own a fraction of this token."
            },
            {
              "name": "Barrel of Oil",
              "description": "Barrels of Oil don't make sense to subdivide."
            }
          ]
        },
        "incompatibleWithSymbols": [
          {
            "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
            "type": "BEHAVIOR",
            "visual": "<i>d</i>",
            "tooling": "d",
            "version": "1.0"
          }
        ],
        "artifactFiles": [
          {
            "content": "CONTROL",
            "fileName": "non-subdividable.proto"
          },
          {
            "content": "UML",
            "fileName": "non-subdividable.md"
          }
        ],
        "maps": {
          "codeReferences": [
            {
              "name": "Code 1",
              "platform": "DAML"
            }
          ],
          "implementationReferences": [
            {
              "mappingType": "IMPLEMENTATION",
              "name": "Implementation 1",
              "platform": "CHAINCODE_GO"
            }
          ],
          "resources": [
            {
              "mappingType": "RESOURCE",
              "name": "Regulation Reference 1"
            }
          ]
        }
      },
      "isExternal": true,
      "properties": [
        {
          "name": "Decimals",
          "valueDescription": "Set to Zero, not allowing any subdivision, usually this is applied to the base token.",
          "templateValue": "0",
          "propertyInvocations": [
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "artifact": {
        "artifactSymbol": {
          "id": "af119e58-6d84-4ca6-9656-75e8d312f038",
          "type": "BEHAVIOR",
          "visual": "<i>t</i>",
          "tooling": "t",
          "version": "1.0"
        },
        "name": "Transferable",
        "artifactDefinition": {
          "businessDescription": "Every token instance has an owner. The Transferable behavior provides the owner the ability to transfer the ownership to another party or account. This behavior is often inferred by other behaviors that might exist like Redeem, Sell, etc. This behavior is Delegable. If the token definition is Delegable, TransferFrom will be available.",
          "analogies": [
            {
              "name": "Analogy 1",
              "description": "transferable analogy 1 description"
            }
          ]
        },
        "incompatibleWithSymbols": [
          {
            "id": "a4fa4ca8-6afd-452b-91f5-7103b6fee5e5",
            "type": "BEHAVIOR",
            "visual": "<i>~t</i>",
            "tooling": "~t",
            "version": "1.0"
          }
        ],
        "influencedBySymbols": [
          {
            "description": "If the token is Delegable, TransferFrom should be enabled.",
            "symbol": {
              "type": "BEHAVIOR",
              "visual": "<i>g</i>",
              "tooling": "g"
            }
          }
        ],
        "artifactFiles": [
          {
            "content": "CONTROL",
            "fileName": "transferable.proto"
          },
          {
            "content": "UML",
            "fileName": "transferable.md"
          }
        ],
        "maps": {
          "codeReferences": [
            {
              "name": "Code 1",
              "platform": "DAML"
            }
          ],
          "implementationReferences": [
            {
              "mappingType": "IMPLEMENTATION",
              "name": "Implementation 1",
              "platform": "CHAINCODE_GO"
            }
          ],
          "resources": [
            {
              "mappingType": "RESOURCE",
              "name": "Regulation Reference 1"
            }
          ]
        }
      },
      "isExternal": true,
      "invocations": [
        {
          "invocationStep": {
            "invocation": {
              "id": "5d4b8f10-7857-4a2f-9b8c-d61e367a6bcc",
              "name": "Transfer",
              "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or subdividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
              "request": {
                "controlMessageName": "TransferRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "To",
                    "valueDescription": "AccountId to transfer ownership to."
                  },
                  {
                    "name": "Quantity",
                    "valueDescription": "Number of tokens to transfer."
                  }
                ]
              },
              "response": {
                "controlMessageName": "TransferResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer request."
                  }
                ]
              }
            }
          }
        },
        {
          "invocationStep": {
            "invocation": {
              "id": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
              "name": "TransferFrom",
              "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or subdividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
              "request": {
                "controlMessageName": "TransferFromRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "From",
                    "valueDescription": "AccountId to transfer ownership from."
                  },
                  {
                    "name": "To",
                    "valueDescription": "AccountId to transfer ownership to."
                  },
                  {
                    "name": "Quantity",
                    "valueDescription": "Number of tokens to transfer."
                  }
                ]
              },
              "response": {
                "controlMessageName": "TransferFromResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer from request."
                  }
                ]
              }
            }
          }
        }
      ]
    },
    {
      "artifact": {
        "artifactSymbol": {
          "id": "a3d02076-6009-4a65-9ed4-2deffe5291e1",
          "type": "BEHAVIOR",
          "visual": "<i>g</i>",
          "tooling": "g",
          "version": "1.0"
        },
        "name": "Delegable",
        "aliases": [
          "Allow"
        ],
        "artifactDefinition": {
          "businessDescription": "A token class that implements this behavior will support the delegation of certain behaviors to another party or account to invoke them on the behalf of the owner. When applied to a token, behaviors that are Delegable will enable delegated request invocations. This is useful to provide another party to automatically be able to perform the behaviors that can be delegated without seeking permission up to a certain allowance.",
          "analogies": [
            {
              "name": "Broker",
              "description": "You may allow a broker to transfer your tokens as a part of an investment strategy. Setting an allowance can cap the total number of tokens the broker is allowed to perform delegated behaviors, when exceeded a new allowance request will need to be granted."
            }
          ],
          "comments": "Applied to behaviors that are Delegable."
        },
        "artifactFiles": [
          {
            "content": "CONTROL",
            "fileName": "delegable.proto"
          },
          {
            "content": "UML",
            "fileName": "delegable.md"
          }
        ],
        "maps": {
          "codeReferences": [
            {
              "name": "Code 1",
              "platform": "DAML"
            }
          ],
          "implementationReferences": [
            {
              "mappingType": "IMPLEMENTATION",
              "name": "Implementation 1",
              "platform": "CHAINCODE_GO"
            }
          ],
          "resources": [
            {
              "mappingType": "RESOURCE",
              "name": "Regulation Reference 1"
            }
          ]
        }
      },
      "isExternal": true,
      "invocations": [
        {
          "invocationStep": {
            "invocation": {
              "id": "2e0fd8e5-2090-4c62-b094-232c32a78022",
              "name": "Allowance",
              "description": "A Request by a party or account to the owner of a token(s) to have the right to perform a delegated behavior on their behalf.",
              "request": {
                "controlMessageName": "AllowanceRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "Quantity",
                    "valueDescription": "Number of Tokens to be allowed."
                  }
                ]
              },
              "response": {
                "controlMessageName": "AllowanceResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "A confirmation receipt or denial be returned to the allowance requestor."
                  }
                ]
              }
            }
          }
        },
        {
          "invocationStep": {
            "invocation": {
              "id": "6d5df99d-2f5e-4c7a-aea4-d2d54176abfd",
              "name": "Approve Allowance",
              "description": "Same control message as the AllowanceRequest.  This could allow for an AllowanceRequest to be forwarded to multiple parties needed to Approve and shield this from the requestor. When all Approvals are obtained, an AllowanceResponse could be sent.",
              "request": {
                "controlMessageName": "AllowanceRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "Quantity",
                    "valueDescription": "Number of Tokens to be allowed."
                  }
                ]
              },
              "response": {
                "controlMessageName": "ApproveResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "A confirmation response from the owner approving the an allowance request, indicating a allowance quantity the requestor has the option to invoke the Delegable behaviors on the token(s)."
                  }
                ]
              }
            }
          }
        }
      ]
    }
  ]
}
