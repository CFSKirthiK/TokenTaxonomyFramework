{
  "specificationHash": "1caee30e6ff82b87a6fb40d4c03bfed4d1ec8ddca7d39f714afcb0c922ca07c3",
  "artifact": {
    "artifactSymbol": {
      "id": "129a78b5-f9a7-4908-8ece-e9e015dd8301",
      "type": "TOKEN_TEMPLATE",
      "visual": "&tau;<sub>N</sub>{<i>s,t</i>}",
      "tooling": "tN{s,t}",
      "version": "1.0"
    },
    "name": "OriginalArt",
    "aliases": [
      "Singleton",
      "One of a Kind",
      "Original Art",
      "CryptoKitty"
    ],
    "artifactDefinition": {
      "businessDescription": "A singleton is a non-subdividable whole token with a quantity of 1. Generally used to represent digital or physical items where there will be a single owner. A singleton implies non-subdividable, so the decimal value for the base token should be 0 and a total Quantity be 1, both are established upon creation. This singleton is transferable",
      "businessExample": "This token could be used to represent an original work of art like a painting.",
      "analogies": [
        {
          "name": "Painting",
          "description": "A token representing ownership of an original, single piece of art like a painting."
        }
      ]
    },
    "dependencies": [
      {
        "description": "Non-Fungible, Singleton",
        "symbol": {
          "id": "53101d87-3c93-4d8b-ab39-1e629406d062",
          "visual": "&tau<sub>N</sub>{<i>s</i>}",
          "tooling": "tN{s}",
          "version": "1.0",
          "templateValidated": true
        }
      }
    ],
    "incompatibleWithSymbols": [
      {
        "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
        "type": "BEHAVIOR",
        "visual": "<i>d</i>",
        "tooling": "d",
        "version": "1.0"
      },
      {
        "id": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
        "type": "BEHAVIOR",
        "visual": "<i>m</i>",
        "tooling": "m",
        "version": "1.0"
      }
    ],
    "artifactFiles": [
      {
        "content": "CONTROL",
        "fileName": "OriginalArt.proto"
      },
      {
        "content": "UML",
        "fileName": "OriginalArt.md"
      }
    ],
    "maps": {}
  },
  "tokenBase": {
    "artifact": {
      "artifactSymbol": {
        "id": "53101d87-3c93-4d8b-ab39-1e629406d062",
        "visual": "&tau<sub>N</sub>{<i>s</i>}",
        "tooling": "tN{s}",
        "version": "1.0",
        "templateValidated": true
      },
      "name": "Singleton",
      "aliases": [
        "Title",
        "Deed",
        "Document"
      ],
      "artifactDefinition": {
        "businessDescription": "A restriction on the token in that there can only be 1 whole token in the class and is not subdividable. This behavior is only available to non-fungible base types.  By definition, a Singleton cannot be mintable.",
        "businessExample": "CryptoKitties, Art, Reserved Seat for an event.",
        "analogies": [
          {
            "name": "Property Title",
            "description": "The physical property title, land for example, have the identical look and feel from the paper, colors and seal. The difference between them are the values like property address, plot numbers, etc. These values make the title unique. There are some properties on a class of titles that are the same, like the county or jurisdiction the property is in. For titles that have some shared values and unique values, it may make more sense to define them in the same class."
          },
          {
            "name": "Art",
            "description": "The valuable painting or other unique piece of art may not share any property values with other paintings, unless the artist is extremely prolific in generating tens of thousands of pieces of art, it would make sense to define each piece of art as its own class. Meaning there would be only a single piece of art represented by the token class. If the art cannot be sub-divided, meaning there can be no fractional owners, this token class can be a singleton if the quantity in the class is set to 1. A singleton has only one instance in the class, essentially meaning the class is the instance, and not be sub-dividable and no new tokens can be minted in the class."
          }
        ],
        "comments": "Non-fungible tokens require additional thought about how these tokens may or may not be grouped together in the same class."
      },
      "dependencies": [
        {
          "description": "Base Token Definition",
          "symbol": {
            "id": "5f5c4e7f-8ff1-4767-b59c-799d49753226",
            "visual": "&tau",
            "tooling": "t",
            "version": "1.0",
            "templateValidated": true
          }
        },
        {
          "description": "non-subdividable",
          "symbol": {
            "id": "d5807a8e-879b-4885-95fa-f09ba2a22172",
            "type": "BEHAVIOR",
            "visual": "<i>~d</i>",
            "tooling": "~d",
            "version": "1.0"
          }
        }
      ],
      "incompatibleWithSymbols": [
        {
          "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
          "type": "BEHAVIOR",
          "visual": "<i>d</i>",
          "tooling": "d"
        },
        {
          "id": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
          "type": "BEHAVIOR",
          "visual": "<i>m</i>",
          "tooling": "m",
          "version": "1.0"
        }
      ],
      "artifactFiles": [
        {
          "content": "CONTROL",
          "fileName": "singleton.proto"
        },
        {
          "content": "UML",
          "fileName": "singleton.md"
        }
      ],
      "maps": {}
    },
    "tokenType": "NON_FUNGIBLE",
    "tokenUnit": "SINGLETON",
    "constructorName": "Constructor"
  },
  "behaviors": [
    {
      "artifact": {
        "artifactSymbol": {
          "id": "c1189d7a-e142-4504-bf26-44c35b76c9d6",
          "type": "BEHAVIOR",
          "visual": "<i>s</i>",
          "tooling": "s",
          "version": "1.0"
        },
        "name": "Singleton",
        "aliases": [
          "Unique",
          "One and Only"
        ],
        "artifactDefinition": {
          "businessDescription": "A restriction on the token in that there can only be 1 whole token in the class and is not subdividable. This behavior is only available to non-fungible base types.  By definition, a Singleton cannot be mintable.",
          "analogies": [
            {
              "name": "Analogy 1",
              "description": "singleton analogy 1 description"
            }
          ]
        },
        "dependencies": [
          {
            "description": "Singleton must be have a non-fungible base.",
            "symbol": {
              "id": "8314a797-df3c-409b-835c-0e80af92714f",
              "visual": "&tau<sub>N</sub>",
              "tooling": "tN",
              "version": "1.0",
              "templateValidated": true
            }
          },
          {
            "description": "Singleton requires non-sub-dividable.",
            "symbol": {
              "id": "d5807a8e-879b-4885-95fa-f09ba2a22172",
              "type": "BEHAVIOR",
              "visual": "<i>~d</i>",
              "tooling": "~d",
              "version": "1.0"
            }
          }
        ],
        "incompatibleWithSymbols": [
          {
            "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
            "type": "BEHAVIOR",
            "visual": "<i>d</i>",
            "tooling": "d",
            "version": "1.0"
          },
          {
            "id": "f9224e90-3cab-45bf-b5dc-0175121e2ead",
            "type": "BEHAVIOR",
            "visual": "<i>m</i>",
            "tooling": "m",
            "version": "1.0"
          }
        ],
        "artifactFiles": [
          {
            "content": "CONTROL",
            "fileName": "singleton.proto"
          },
          {
            "content": "UML",
            "fileName": "singleton.md"
          }
        ],
        "maps": {
          "codeReferences": [
            {
              "name": "Code 1",
              "platform": "DAML"
            }
          ],
          "implementationReferences": [
            {
              "mappingType": "IMPLEMENTATION",
              "name": "Implementation 1",
              "platform": "CHAINCODE_GO"
            }
          ],
          "resources": [
            {
              "mappingType": "RESOURCE",
              "name": "Regulation Reference 1"
            }
          ]
        }
      },
      "isExternal": true
    },
    {
      "artifact": {
        "artifactSymbol": {
          "id": "d5807a8e-879b-4885-95fa-f09ba2a22172",
          "type": "BEHAVIOR",
          "visual": "<i>~d</i>",
          "tooling": "~d",
          "version": "1.0"
        },
        "name": "Non-Subdividable",
        "aliases": [
          "Whole"
        ],
        "artifactDefinition": {
          "businessDescription": "An ability or restriction on the token where it cannot be subdivided from a single whole token into fractions. Sets the base token Decimals property to 0 which will make the token non-sub-dividable and a whole token is the smallest ownable unit of the token.",
          "businessExample": "Non-subdividable is common for items where subdivision does not make sense, like a property title, inventory item or invoice.",
          "analogies": [
            {
              "name": "Non-Fractional",
              "description": "It is not possible to own a fraction of this token."
            },
            {
              "name": "Barrel of Oil",
              "description": "Barrels of Oil don't make sense to subdivide."
            }
          ]
        },
        "incompatibleWithSymbols": [
          {
            "id": "6e3501dc-5800-4c71-b59e-ad11418a998c",
            "type": "BEHAVIOR",
            "visual": "<i>d</i>",
            "tooling": "d",
            "version": "1.0"
          }
        ],
        "artifactFiles": [
          {
            "content": "CONTROL",
            "fileName": "non-subdividable.proto"
          },
          {
            "content": "UML",
            "fileName": "non-subdividable.md"
          }
        ],
        "maps": {
          "codeReferences": [
            {
              "name": "Code 1",
              "platform": "DAML"
            }
          ],
          "implementationReferences": [
            {
              "mappingType": "IMPLEMENTATION",
              "name": "Implementation 1",
              "platform": "CHAINCODE_GO"
            }
          ],
          "resources": [
            {
              "mappingType": "RESOURCE",
              "name": "Regulation Reference 1"
            }
          ]
        }
      },
      "isExternal": true,
      "properties": [
        {
          "name": "Decimals",
          "valueDescription": "Set to Zero, not allowing any subdivision, usually this is applied to the base token.",
          "templateValue": "0",
          "propertyInvocations": [
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            },
            {
              "id": "2ca7fbb2-ce98-4dda-a6ae-e4ac2527bb33",
              "name": "GetDecimals",
              "description": "Should return 0",
              "request": {
                "controlMessageName": "GetDecimalsRequest"
              },
              "response": {
                "controlMessageName": "GetDecimalsResponse",
                "description": "Return 0",
                "outputParameters": [
                  {
                    "name": "Decimals",
                    "valueDescription": "0"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "artifact": {
        "artifactSymbol": {
          "id": "af119e58-6d84-4ca6-9656-75e8d312f038",
          "type": "BEHAVIOR",
          "visual": "<i>t</i>",
          "tooling": "t",
          "version": "1.0"
        },
        "name": "Transferable",
        "artifactDefinition": {
          "businessDescription": "Every token instance has an owner. The Transferable behavior provides the owner the ability to transfer the ownership to another party or account. This behavior is often inferred by other behaviors that might exist like Redeem, Sell, etc. This behavior is Delegable. If the token definition is Delegable, TransferFrom will be available.",
          "analogies": [
            {
              "name": "Analogy 1",
              "description": "transferable analogy 1 description"
            }
          ]
        },
        "incompatibleWithSymbols": [
          {
            "id": "a4fa4ca8-6afd-452b-91f5-7103b6fee5e5",
            "type": "BEHAVIOR",
            "visual": "<i>~t</i>",
            "tooling": "~t",
            "version": "1.0"
          }
        ],
        "influencedBySymbols": [
          {
            "description": "If the token is Delegable, TransferFrom should be enabled.",
            "symbol": {
              "type": "BEHAVIOR",
              "visual": "<i>g</i>",
              "tooling": "g"
            }
          }
        ],
        "artifactFiles": [
          {
            "content": "CONTROL",
            "fileName": "transferable.proto"
          },
          {
            "content": "UML",
            "fileName": "transferable.md"
          }
        ],
        "maps": {
          "codeReferences": [
            {
              "name": "Code 1",
              "platform": "DAML"
            }
          ],
          "implementationReferences": [
            {
              "mappingType": "IMPLEMENTATION",
              "name": "Implementation 1",
              "platform": "CHAINCODE_GO"
            }
          ],
          "resources": [
            {
              "mappingType": "RESOURCE",
              "name": "Regulation Reference 1"
            }
          ]
        }
      },
      "isExternal": true,
      "invocations": [
        {
          "invocationStep": {
            "invocation": {
              "id": "5d4b8f10-7857-4a2f-9b8c-d61e367a6bcc",
              "name": "Transfer",
              "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or subdividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
              "request": {
                "controlMessageName": "TransferRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "To",
                    "valueDescription": "AccountId to transfer ownership to."
                  },
                  {
                    "name": "Quantity",
                    "valueDescription": "Number of tokens to transfer."
                  }
                ]
              },
              "response": {
                "controlMessageName": "TransferResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer request."
                  }
                ]
              }
            }
          }
        },
        {
          "invocationStep": {
            "invocation": {
              "id": "516b4e2f-4a14-4c4f-a6f2-1419d4af35c6",
              "name": "TransferFrom",
              "description": ">A transfer request will invoke a transfer from the owner of the token to the party or account provided in the To field of the request. For fungible or subdividable non-fungible tokens, this request may also include value in the Amount field of the request to transfer more than one token of the class in a single request.",
              "request": {
                "controlMessageName": "TransferFromRequest",
                "description": "The request",
                "inputParameters": [
                  {
                    "name": "From",
                    "valueDescription": "AccountId to transfer ownership from."
                  },
                  {
                    "name": "To",
                    "valueDescription": "AccountId to transfer ownership to."
                  },
                  {
                    "name": "Quantity",
                    "valueDescription": "Number of tokens to transfer."
                  }
                ]
              },
              "response": {
                "controlMessageName": "TransferFromResponse",
                "description": "The response",
                "outputParameters": [
                  {
                    "name": "Confirmation",
                    "valueDescription": "A confirmation receipt or error may be returned to the owner based on the outcome of the transfer from request."
                  }
                ]
              }
            }
          }
        }
      ]
    }
  ]
}
